CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0001
*** SNAKE *** 

                  0001  ;	DAZZLER SNAKE FOR THE CROMEMCO DAZZLER
                  0002  ;	2024 Aron Hoekstra aka nullvalue
                  0003  ;	nullvalue@gmail.com
                  0004  ;	Version 1.0
                  0005  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0002
SNAKE FOR DAZZLER GRAPHICS

                  0007  	NAME	SNAKE
                  0008  ;
                  0009  ;	DEFINITION OF GRAPHICS PACKAGE ENTRY POINTS
                  0010  ;
                  0011  	EXTRN	INITG,PAGE,CURSOR,DOT,LINE,CHAR,ANIMAT
                  0012  	EXTRN	CYCLE,PAUSE,AREA,STRING
                  0013  ;
                  0014  ;	DEFINITION OF STANDARD COLORS, RESOLUTIONS, AND TIMES FOR PAUSE
                  0015  ;
      (0010)      0016  BLACK:	EQU	10H
      (0011)      0017  RED:	EQU	11H
      (0012)      0018  GREEN:	EQU	12H
      (0013)      0019  YELLOW:	EQU	13H
      (0014)      0020  BLUE:	EQU	14H
      (0015)      0021  MAGNTA:	EQU	15H
      (0016)      0022  CYAN:	EQU	16H
      (0017)      0023  WHITE:	EQU	17H
                  0024  
      (0012)      0025  P1COLR:	EQU	GREEN
      (0015)      0026  P2COLR:	EQU	MAGNTA
      (0011)      0027  PTCOLR:	EQU	RED
                  0028  
                  0029  ;	
      (0000)      0030  MAXR:	EQU	0		;MAXIMUM RESOLUTION
      (0001)      0031  MAXC:	EQU	1		;MAXIMUM COLOR CHOICE
      (0002)      0032  R128:	EQU	2		;128 x 128 RESOLUTION
      (0003)      0033  R64:	EQU	3		;64 x 64 COLOR RESOLUTION
      (0004)      0034  R64BW:	EQU	4		;64 x 64 B/W RESOLUTION
                  0035  
      (0005)      0036  INTLVS:	EQU	5		;START WITH 5 LIVES
                  0037  ;	
                  0038  ;	(THE	 FOLLOWING ASSUME THE 4MHZ. CPU CLOCK)
                  0039  ;	
      (000A)      0040  SEC.:	EQU	10		;10 * 0.1SEC. = 1SEC.
      (0001)      0041  TENTH:	EQU	SEC./10		;TENTH-SECOND PAUSE
      (0002)      0042  QUARTR:	EQU	SEC./4		;QUARTER-SECOND PAUSE
      (0005)      0043  HALF:	EQU	SEC./2		;HALF-SECOND PAUSE
      (000A)      0044  ONE:	EQU	1*SEC.		;ONE SECOND PAUSE
      (0014)      0045  TWO:	EQU	2*SEC.		;TWO SECONDS PAUSE
      (0028)      0046  FOUR:	EQU	4*SEC.		;TWO SECONDS PAUSE
      (0032)      0047  FIVE:	EQU	5*SEC.		;FIVE SECONDS PAUSE
      (0064)      0048  TEN:	EQU	10*SEC.		;TEN SECONDS PAUSE
                  0049  ;
                  0050  ;	SOME OTHER REQUIRED VALUES
                  0051  ;
      (000D)      0052  CR:	EQU	0DH		;CARRIAGE RETURN
      (000A)      0053  LF:	EQU	0AH		;LINE FEED
      (0005)      0054  CDOS:	EQU	5		;SYSTEM CALL LOCATION
      (0000)      0055  WBOOT:	EQU	0		;WARM BOOT LOCATION
      (0040)      0056  RDA:	EQU	40H		;RECEIVER-DATA-AVAILABLE
      (0000)      0057  CSTAT:	EQU	0		;CONSOLE STATUS PORT
      (0001)      0058  CDATA:	EQU	1		;CONSOLE DATA PORT
      (0009)      0059  PNTBUF:	EQU	9		;PRINT BUFFERED LINE
      (0002)      0060  PNTCHR:	EQU	2		;PRINT BUFFERED LINE
      (0007)      0061  TOGDAZ:	EQU	7		;TOGGLE DAZZLER OFF/ON
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0003
SNAKE FOR DAZZLER GRAPHICS

                  0062  
      (001A)      0063  JOY1UD:	EQU	1AH		;JOY STICK PORT - 1 UP/DOWN
      (0019)      0064  JOY1RL:	EQU	19H		;JOY STICK PORT - 1 RIGHT/LEFT
      (001C)      0065  JOY2UD:	EQU	1CH		;JOY STICK PORT - 2 UP/DOWN
      (001B)      0066  JOY2RL:	EQU	1BH		;JOY STICK PORT - 2 RIGHT/LEFT
      (0018)      0067  JOYBTN:	EQU	18H		;JOY STICK BUTTONS
                  0068  
      (0019)      0069  SPEAK1:	EQU	19H		;SPEAKER 1
      (001B)      0070  SPEAK2:	EQU	1BH		;SPEAKER 2
                  0071  
                  0072  ;	
                  0073  ;	GAME VALUES	
                  0074  ;	
      (0004)      0075  PIXEL:  EQU	4		;PIXEL WIDTH IN 64x64 is 4 pixels since the library expects coords in 0-
      (0003)      0076  CTRLC:	EQU	3H		;CONTROL-C KEY CODE
      (0050)      0077  PSKEY:	EQU	50H		;"P" KEY CODE
                  0078  
      (0057)      0079  UP1:	EQU	57H		;"W" KEY CODE
      (0053)      0080  DOWN1:	EQU	53H		;"A" KEY CODE
      (0041)      0081  LEFT1:	EQU	41H		;"S" KEY CODE
      (0044)      0082  RIGHT1:	EQU	44H		;"D" KEY CODE
                  0083  
      (0049)      0084  UP2:	EQU	49H		;"I" KEY CODE
      (004B)      0085  DOWN2:	EQU	4BH		;"K" KEY CODE
      (004A)      0086  LEFT2:	EQU	4AH		;"J" KEY CODE
      (004C)      0087  RIGHT2:	EQU	4CH		;"L" KEY CODE
                  0088  
      (0000)      0089  STWAIT:	EQU	0		;WAITING FOR FIRST KEYPRESS
      (0001)      0090  STMOVE:	EQU	1		;RUNNING
                  0091  
                  0092  ;
                  0093  ;	THE PROGRAM BEGINS HERE
                  0094  ;
                  0095  SNAKE:	
0000' 31A510'     0096  	LD	SP,STACK	;SET STACK POINTER
0003' 112D0A'     0097  	LD	DE,INTRO	;POINT TO SIGN-ON MESSAGE
0006' CD0B09'     0098  	CALL	PRINTSTR	;DO SYSTEM CALL
                  0099  
0009' 31A510'     0100  	LD	SP,STACK	;DO IT AGAIN FOR SAFETY
000C' 210000      0101  	LD	HL,0		;TELLS INITG TO LOCATE PICTURE
                  0102  				;  BUFFER AT TOP OF CDOS USER AREA
                  0103  
000F' CD9B06'     0104  	CALL	GETJK		;GET JOYSTICK OR KEYBOARD CONTROL?
0012' CDCB06'     0105  	CALL	GET12		;GET 1 OR 2 PLAYERS
                  0106  	
0015' 3A8F0B'     0107  	LD	A,(CNTRL)	;GET CONTROL MODE
0018' FE4B        0108  	CP	'K'
001A' 201B        0109  	JR	NZ,SNAKE_1	
                  0110  
001C' 118C0A'     0111  	LD	DE,INTKB1	;IF KEYBOARD, 
001F' CD0B09'     0112  	CALL	PRINTSTR	;  DISPLAY HELP MESG
                  0113  	
0022' 3A8E0B'     0114  	LD	A,(MODE)
0025' FE32        0115  	CP	'2'
0027' 201D        0116  	JR	NZ,SNAKE_2	;IF 2 PLAYER,
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0004
SNAKE FOR DAZZLER GRAPHICS

0029' 11BC0A'     0117  	LD	DE,INTKB2	;  DISPLAY THEIR KEYS
002C' CD0B09'     0118  	CALL	PRINTSTR
                  0119  
                  0120  SNAKE_K:
002F' 11ED0A'     0121  	LD	DE,INTKB3	;DISPLAY SYSTEM KEYS
0032' CD0B09'     0122  	CALL	PRINTSTR
                  0123  
0035' 180F        0124  	JR	SNAKE_2
                  0125  SNAKE_1:
0037' CDB109'     0126  	CALL	INTJOY		;IF JOYSTICK, INIT 
003A' 110C0B'     0127  	LD	DE,INTJS1	;  JOY STICKS AND
003D' CD0B09'     0128  	CALL	PRINTSTR	;  DISPLAY HELP MSG
0040' 11410B'     0129  	LD	DE,INTJS2	;  AND SYSTEM BUTTONS
0043' CD0B09'     0130  	CALL	PRINTSTR	;  
                  0131  SNAKE_2:
0046' CD0000#     0132  	CALL	INITG		;INITIALIZE THE GRAPHICS PACKAGE
0049' 22850B'     0133  	LD	(MAXCD),HL	;STORE DISPLAY PARAMS. FOR FUTURE USE
004C' 3E03        0134  	LD	A,R64		;SET SCREEN FOR COLOR
004E' CD0000#     0135  	CALL	CHAR		;  64 x 64 MODE
                  0136  
                  0137  BEGIN:		
0051' 3E00        0138  	LD	A,0
0053' 32900B'     0139  	LD	(POINT),A	;RESET THE POINT
0056' 328D0B'     0140  	LD	(STAGE),A	;RESET THE STAGE
0059' 3E05        0141  	LD	A,INTLVS	;SET INITIAL LIVES TO 5
005B' 32970B'     0142  	LD	(LIVES1),A
005E' 329F0B'     0143  	LD	(LIVES2),A
0061' 3E56        0144  	LD	A,56H
0063' 32890B'     0145  	LD	(RSEED),A 	;SET A RANDOM SEED low byte
0066' 3E4F        0146  	LD	A,4FH
0068' 328A0B'     0147  	LD	(RSEED+1),A 	;SET A RANDOM SEED high byte
                  0148  	;LD	A,0FFH		;SET INITIAL SPEED 255
006B' 3EFA        0149  	LD	A,0FAH		;SET INITIAL SPEED 250
006D' 328B0B'     0150  	LD	(SPEED),A
0070' CDCC05'     0151  	CALL	DISP_INTRO	;FLASH "DAZZLER SNAKE"
0073' CD0206'     0152  	CALL	DISP_STAGE	;FLASH THE CURRENT STAGE
                  0153  
                  0154  ;
                  0155  ; DRAW THE PLAYING FIELD
                  0156  ;
                  0157  START:	
0076' CDA504'     0158  	CALL	NEWPOINT	;GENERATE A RANDOM X,Y FOR THE NEXT POINT & DISPLAY IT
                  0159  
                  0160  ; Begin Player 1 Init
0079' 3E04        0161  	LD	A,4		;SET INITIAL SNAKE LENGTH
007B' 32950B'     0162  	LD	(SNKLN1),A
007E' 3E01        0163  	LD	A,1		;SET INITIAL SNAKE DISPLAY LENGTH
0080' 32960B'     0164  	LD	(DSPLN1),A
                  0165  
0083' CDCA09'     0166  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
0086' 67          0167  	LD	H,A		;SET X = RANDOM
0087' 32930B'     0168  	LD	(HEADX1),A	;SET INITIAL SNAKE X POS
008A' 32A50B'     0169  	LD	(BODYX1),A	;PUT SNAKE'S INITIAL HEAD X POSITION IN THE BODY ARRAY
                  0170  
008D' CDCA09'     0171  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0005
SNAKE FOR DAZZLER GRAPHICS

0090' 6F          0172  	LD	L,A		;SET Y = RANDOM
0091' 32940B'     0173  	LD	(HEADY1),A	;SET INITIAL SNAKE Y POS
0094' 32A50C'     0174  	LD	(BODYY1),A	;PUT SNAKE'S INITIAL HEAD Y POSITION IN THE BODY ARRAY
                  0175  
0097' 3E12        0176  	LD	A,P1COLR	;DRAW THE SNAKE GREEN
0099' CD0000#     0177  	CALL	CHAR
009C' CD0000#     0178  	CALL	CURSOR		;MOVE CURSOR THERE
009F' CD0000#     0179  	CALL	DOT		;DRAW THE HEAD
                  0180  
00A2' 3E00        0181  	LD	A,0		;CLEAR THE INITIAL
00A4' 32910B'     0182  	LD	(DIR1),A	;  MOVING DIRECTION
00A7' 32920B'     0183  	LD	(NXDIR1),A	;  MOVING DIRECTION
00AA' 3E00        0184  	LD	A,STWAIT
00AC' 32980B'     0185  	LD	(STAT1),A	;LOAD THE NEW STAGE & WAIT FOR KEYPRESS TO START
                  0186  ; End Player 1 Init
                  0187  
                  0188  ; Begin Player 2 Init
00AF' 3A8E0B'     0189  	LD	A,(MODE)	;GRAB THE GAME MODE
00B2' FE32        0190  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
00B4' 2036        0191  	JR	NZ,EP2I		;IF NOT, SKIP THIS
00B6' 3E04        0192  	LD	A,4		;SET INITIAL SNAKE LENGTH
00B8' 329D0B'     0193  	LD	(SNKLN2),A
00BB' 3E01        0194  	LD	A,1		;SET INITIAL SNAKE DISPLAY LENGTH
00BD' 329E0B'     0195  	LD	(DSPLN2),A
00C0' CDCA09'     0196  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
00C3' 67          0197  	LD	H,A		;SET X = RANDOM
00C4' 329B0B'     0198  	LD	(HEADX2),A	;SET INITIAL SNAKE X POS
00C7' 32A50D'     0199  	LD	(BODYX2),A	;PUT SNAKE'S INITIAL HEAD X POSITION IN THE BODY ARRAY
00CA' CDCA09'     0200  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
00CD' 6F          0201  	LD	L,A		;SET Y = RANDOM
00CE' 329C0B'     0202  	LD	(HEADY2),A	;SET INITIAL SNAKE Y POS
00D1' 32A50E'     0203  	LD	(BODYY2),A	;PUT SNAKE'S INITIAL HEAD Y POSITION IN THE BODY ARRAY
                  0204  	
00D4' 3E15        0205  	LD	A,P2COLR	;DRAW THE SNAKE GREEN
00D6' CD0000#     0206  	CALL	CHAR
00D9' CD0000#     0207  	CALL	CURSOR		;MOVE CURSOR THERE
00DC' CD0000#     0208  	CALL	DOT		;DRAW THE HEAD
                  0209  
00DF' 3E00        0210  	LD	A,0		;CLEAR THE INITIAL
00E1' 32990B'     0211  	LD	(DIR2),A	;  MOVING DIRECTION
00E4' 329A0B'     0212  	LD	(NXDIR2),A	;  MOVING DIRECTION
00E7' 3E00        0213  	LD	A,STWAIT
00E9' 32A00B'     0214  	LD	(STAT2),A	;LOAD THE NEW STAGE & WAIT FOR KEYPRESS TO START
                  0215  ; End Player 2 Init
                  0216  EP2I:
00EC' CD5605'     0217  	CALL	DRAWLIVES
00EF' CD9705'     0218  	CALL	DRAWPOINTS
                  0219  
                  0220  ;
                  0221  ; MAIN GAME LOOP
                  0222  ;
                  0223  DRAW:
00F2' CD5508'     0224  	CALL	DELAY		;DELAY & CHECK FOR CONTROL-CHARACTERS
                  0225  	
                  0226  ; Begin Player 1 Snake Grow
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0006
SNAKE FOR DAZZLER GRAPHICS

00F5' 3A980B'     0227  	LD	A,(STAT1)	;CHECK TO SEE IF
00F8' FE01        0228  	CP	STMOVE		;  WE'RE MOVING YET
00FA' 2053        0229  	JR	NZ,BP2SG	;NO? WAIT FOR A KEYPRESS
                  0230  	
                  0231  	;FIRST, SEE IF I NEED TO ERASE THE TAIL?	
00FC' 3A950B'     0232  	LD	A,(SNKLN1)	;grab the current snake length
00FF' 47          0233  	LD	B,A		;put it in B for comparison
0100' 3A960B'     0234  	LD	A,(DSPLN1)	;grab the currently displayed snake length
                  0235  	;IF SNKLN < DSPLN
0103' B8          0236  	CP	B
0104' 3842        0237  	JR	C,GROWSNK1	;if Display Length was < Snake Length
0106' 3E10        0238  	LD	A,BLACK		;change color to BLACK
0108' CD0000#     0239  	CALL	CHAR
010B' 3AA50B'     0240  	LD	A,(BODYX1)
010E' 67          0241  	LD	H,A		;SET X = A
010F' 3AA50C'     0242  	LD	A,(BODYY1)
0112' 6F          0243  	LD	L,A
0113' CD0000#     0244  	CALL 	CURSOR		;move the cursor to tail position
0116' CD0000#     0245  	CALL	DOT			;erase the tail
                  0246  	
                  0247  	;NOW SHIFT THE BODY X DATA IN MEMORY 1 BYTE TO THE LEFT
0119' 21A60B'     0248  	LD	HL,BODYX1+1	; Load source address into HL
011C' 11A50F'     0249  	LD	DE,TEMP		; Load destination address into DE
011F' 01FE00      0250  	LD	BC,0FEH		; Load byte count into BC
0122' EDB0        0251  	LDIR
                  0252  
0124' 21A50F'     0253  	LD	HL,TEMP		; Load source address into HL
0127' 11A50B'     0254  	LD	DE,BODYX1	; Load destination address into DE
012A' 01FF00      0255  	LD	BC,0FFH		; Load byte count into BC
012D' EDB0        0256  	LDIR
                  0257  
                  0258  	;DO THE SAME FOR BODY Y
012F' 21A60C'     0259  	LD	HL,BODYY1+1	; Load source address into HL
0132' 11A50F'     0260  	LD	DE,TEMP		; Load destination address into DE
0135' 01FE00      0261  	LD	BC,0FEH		; Load byte count into BC
0138' EDB0        0262  	LDIR
                  0263  
013A' 21A50F'     0264  	LD	HL,TEMP		; Load source address into HL
013D' 11A50C'     0265  	LD	DE,BODYY1	; Load destination address into DE
0140' 01FF00      0266  	LD	BC,0FFH		; Load byte count into BC
0143' EDB0        0267  	LDIR
                  0268  	
0145' C34F01'   R 0269  	JP BP2SG
                  0270  
                  0271  GROWSNK1:
                  0272  	;IF THE DSPLN < SNLKLEN THEN INCREMENT DSPLN
0148' 3A960B'     0273  	LD	A,(DSPLN1)	;grab the currently displayed snake length
014B' 3C          0274  	INC	A		;increment it one A->current display len
014C' 32960B'     0275  	LD	(DSPLN1),A ;save
                  0276  	
                  0277  ; End Player 1 Snake Grow
                  0278  
                  0279  BP2SG:	
                  0280  ; Begin Player 2 Snake Grow
014F' 3A8E0B'     0281  	LD	A,(MODE)	;GRAB THE GAME MODE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0007
SNAKE FOR DAZZLER GRAPHICS

0152' FE32        0282  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0154' 2065        0283  	JR	NZ,EP2SG	;  IF NOT, SKIP THIS
                  0284  
0156' 3AA00B'     0285  	LD	A,(STAT2)	;CHECK TO SEE IF
0159' FE01        0286  	CP	STMOVE		;  WE'RE MOVING YET
                  0287  	;JR	NZ,DRAW		;NO? WAIT FOR A KEYPRESS TODO: need to fix this
015B' 280B        0288  	JR	Z,P2MVG		; P2 is MOVING
                  0289  	
                  0290  	;if neither are moving yet, jump back to DRAW
015D' 3A980B'     0291  	LD	A,(STAT1)	;CHECK TO SEE IF
0160' FE01        0292  	CP	STMOVE		;  WE'RE MOVING YET
0162' C2F200'   R 0293  	JP	NZ,DRAW		;NO? WAIT FOR A KEYPRESS
0165' C3BB01'   R 0294  	JP	EP2SG
                  0295  	
                  0296  P2MVG:
                  0297  	;FIRST, SEE IF I NEED TO ERASE THE TAIL?	
0168' 3A9D0B'     0298  	LD	A,(SNKLN2)	;grab the current snake length
016B' 47          0299  	LD	B,A		;put it in B for comparison
016C' 3A9E0B'     0300  	LD	A,(DSPLN2)	;grab the currently displayed snake length
                  0301  	;IF SNKLN < DSPLN
016F' B8          0302  	CP	B
0170' 3842        0303  	JR	C,GROWSNK2	;if Display Length was < Snake Length
0172' 3E10        0304  	LD	A,BLACK		;change color to BLACK
0174' CD0000#     0305  	CALL	CHAR
0177' 3AA50D'     0306  	LD	A,(BODYX2)
017A' 67          0307  	LD	H,A		;SET X = A
017B' 3AA50E'     0308  	LD	A,(BODYY2)
017E' 6F          0309  	LD	L,A
017F' CD0000#     0310  	CALL 	CURSOR		;move the cursor to tail position
0182' CD0000#     0311  	CALL	DOT		;erase the tail
                  0312  	
                  0313  	;NOW SHIFT THE BODY X DATA IN MEMORY 1 BYTE TO THE LEFT
0185' 21A60D'     0314  	LD	HL,BODYX2+1	;Load source address into HL
0188' 11A50F'     0315  	LD	DE,TEMP		;Load destination address into DE
018B' 01FE00      0316  	LD	BC,0FEH		;Load byte count into BC
018E' EDB0        0317  	LDIR
0190' 21A50F'     0318  	LD	HL,TEMP		;Load source address into HL
0193' 11A50D'     0319  	LD	DE,BODYX2	;Load destination address into DE
0196' 01FF00      0320  	LD	BC,0FFH		;Load byte count into BC
0199' EDB0        0321  	LDIR
                  0322  	;DO THE SAME FOR BODY Y
019B' 21A60E'     0323  	LD	HL,BODYY2+1	;Load source address into HL
019E' 11A50F'     0324  	LD	DE,TEMP		;Load destination address into DE
01A1' 01FE00      0325  	LD	BC,0FEH		;Load byte count into BC
01A4' EDB0        0326  	LDIR
01A6' 21A50F'     0327  	LD	HL,TEMP		;Load source address into HL
01A9' 11A50E'     0328  	LD	DE,BODYY2	;Load destination address into DE
01AC' 01FF00      0329  	LD	BC,0FFH		;Load byte count into BC
01AF' EDB0        0330  	LDIR
                  0331  	
01B1' C3BB01'   R 0332  	JP EP2SG
                  0333  
                  0334  GROWSNK2:
                  0335  	;IF THE DSPLN < SNLKLEN THEN INCREMENT DSPLN
01B4' 3A9E0B'     0336  	LD	A,(DSPLN2)	;grab the currently displayed snake length
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0008
SNAKE FOR DAZZLER GRAPHICS

01B7' 3C          0337  	INC	A		;increment it one A->current display len
01B8' 329E0B'     0338  	LD	(DSPLN2),A	;save
                  0339  ; End Player 2 Snake Grow
                  0340  EP2SG:
                  0341  ; Begin Player 1 Movement & Collision Detection
01BB' 3E12        0342  	LD A,	P1COLR		;change color to GREEN for snake
01BD' CD0000#     0343  	CALL	CHAR
                  0344  
01C0' 3A910B'     0345  	LD	A,(DIR1)	;WHICH DIRECTION ARE WE MOVING?
01C3' FE57        0346  	CP	UP1		;MOVING UP?
01C5' 280F        0347  	JR	Z,MVUP1		;DRAW THE NEXT PIXEL
01C7' FE53        0348  	CP	DOWN1		;MOVING DOWN?
01C9' 281B        0349  	JR	Z,MVDOWN1	;DRAW THE NEXT PIXEL
01CB' FE41        0350  	CP	LEFT1		;MOVING LEFT?
01CD' 2827        0351  	JR	Z,MVLEFT1	;DRAW THE NEXT PIXEL
01CF' FE44        0352  	CP	RIGHT1		;MOVING RIGHT?
01D1' 2833        0353  	JR	Z,MVRIGHT1	;DRAW THE NEXT PIXEL
01D3' C3DE02'     0354  	JP	BP2MCD		;PLAYER 1 must not be moving, check player 2
                  0355  MVUP1:
01D6' 3A940B'     0356  	LD	A,(HEADY1)
01D9' FEF0        0357  	CP	240
01DB' CA2704'     0358  	JP	Z,DIED1		;GAME OVER, HIT TOP OF FIELD
01DE' C604        0359  	ADD	A,PIXEL
01E0' 32940B'     0360  	LD	(HEADY1),A
01E3' C31302'   R 0361  	JP	FINMV1
                  0362  MVDOWN1:
01E6' 3A940B'     0363  	LD	A,(HEADY1)
01E9' FE0C        0364  	CP	12
01EB' CA2704'     0365  	JP	Z,DIED1		;GAME OVER, HIT BOTTOM OF FIELD
01EE' D604        0366  	SUB	A,PIXEL
01F0' 32940B'     0367  	LD	(HEADY1),A
01F3' C31302'   R 0368  	JP	FINMV1
                  0369  MVLEFT1:
01F6' 3A930B'     0370  	LD	A,(HEADX1)
01F9' FE0C        0371  	CP	12
01FB' CA2704'     0372  	JP	Z,DIED1		;GAME OVER, HIT LEFT OF FIELD
01FE' D604        0373  	SUB	A,PIXEL
0200' 32930B'     0374  	LD	(HEADX1),A
0203' C31302'   R 0375  	JP	FINMV1
                  0376  MVRIGHT1:
0206' 3A930B'     0377  	LD	A,(HEADX1)
0209' FEF0        0378  	CP	240
020B' CA2704'     0379  	JP	Z,DIED1		;GAME OVER, HIT RIGHT OF FIELD
020E' C604        0380  	ADD	A,PIXEL
0210' 32930B'     0381  	LD	(HEADX1),A
                  0382  FINMV1:
                  0383  	;put the new coords at the end of the body	
0213' 3A930B'     0384  	LD 	A,(HEADX1)
0216' 67          0385  	LD	H,A		;SET X = A
0217' 3A940B'     0386  	LD	A,(HEADY1)
021A' 6F          0387  	LD	L,A
                  0388  	
021B' CD0000#     0389  	CALL 	CURSOR		;move the cursor to tail position
021E' CD0000#     0390  	CALL 	DOT		;DRAW LINE TO (HEADX,HEADY)
                  0391  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0009
SNAKE FOR DAZZLER GRAPHICS

0221' 3A960B'     0392  	LD	A,(DSPLN1)	;grab the currently displayed snake length
0224' 3D          0393  	DEC	A		;remove 1
0225' F5          0394  	PUSH	AF		;save this offset value for later
0226' 11A50B'     0395  	LD	DE,BODYX1	;grab the address of bodyx
0229' 83          0396  	ADD	A,E		;add the offset
022A' 5F          0397  	LD	E,A
022B' 7A          0398  	LD	A,D
022C' CE00        0399  	ADC	A,0
022E' 57          0400  	LD	D,A
022F' 7C          0401  	LD	A,H		;Put X in the accumulator
0230' 12          0402  	LD	(DE),A		;save the new X position to the offset address
                  0403  
0231' F1          0404  	POP	AF		;grab the offset again
0232' 11A50C'     0405  	LD	DE,BODYY1	;grab the address of bodyx
0235' 83          0406  	ADD	A,E		;add the offset	
0236' 5F          0407  	LD	E,A
0237' 7A          0408  	LD	A,D
0238' CE00        0409  	ADC	A,0
023A' 57          0410  	LD	D,A
023B' 7D          0411  	LD	A,L		;Put Y in the accumulator
023C' 12          0412  	LD	(DE),A		;save the new Y position to the offset address
                  0413  
                  0414  ;
                  0415  ; COLLISION DETECTION - PLAYER 1 WITH POINT
                  0416  ;
023D' 3A930B'     0417  	LD	A,(HEADX1)	;Need to compare HEADX = POINTX
0240' 47          0418  	LD	B,A		;Move HEADX to B for comparison
0241' 3A870B'     0419  	LD	A,(POINTX)	;Grab the POINT X
0244' B8          0420  	CP	B		;COMPARE A(POINTX)=B(HEADX)
0245' 202A        0421  	JR	NZ,CB1_1_1	;IF not match, go to next step
0247' 3A940B'     0422  	LD	A,(HEADY1)	;Need to compare HEADY = POINTY
024A' 47          0423  	LD	B,A		;Move HEADY to B for comparison
024B' 3A880B'     0424  	LD	A,(POINTY)	;Grab the POINT Y
024E' B8          0425  	CP	B		;COMPARE A(POINTY)=B(HEADY)
024F' 2020        0426  	JR	NZ,CB1_1_1	;IF not match, go to next step
                  0427  	; HIT THE POINT
0251' CD6C09'     0428  	CALL	SONG1		;Play a tone
0254' 3A900B'     0429  	LD	A,(POINT)	;grab the current point
0257' FE09        0430  	CP	9		;see if we're on point 10 (0-based)
0259' CA0D04'     0431  	JP	Z,NEXTSTAGE	;  if so advance to next stage
025C' 3C          0432  	INC	A		;else increment the point
025D' 32900B'     0433  	LD	(POINT),A	;save the new point
                  0434  	
                  0435  				; INCREASE THE SNAKE SIZE
0260' 3A950B'     0436  	LD	A,(SNKLN1)	; GRAB THE CURRENT LENGTH
0263' C60A        0437  	ADD	A,10 		; INCREASE THE SNAKE SIZE BY 10
0265' 32950B'     0438  	LD	(SNKLN1),A	; SAVE IT BACK
0268' CDA504'     0439  	CALL	NEWPOINT	; DRAW THE NEXT POINT
026B' CD9705'     0440  	CALL	DRAWPOINTS
026E' C3DE02'   R 0441  	JP	BP2MCD
                  0442  
                  0443  ;
                  0444  ; COLLISION DETECTION - PLAYER 1 WITH SELF
                  0445  ;
                  0446  CB1_1_1:
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0010
SNAKE FOR DAZZLER GRAPHICS

0271' 0E00        0447  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0448  CB1_1_2:
0273' 3A930B'     0449  	LD	A,(HEADX1)	;Need to compare HEADX = POINTX
0276' 47          0450  	LD	B,A		;Move HEADX to B for comparison
0277' 11A50B'     0451  	LD	DE,BODYX1	;grab the address of bodyx
027A' 79          0452  	LD	A,C
027B' 83          0453  	ADD	A,E		;add the offset
027C' 5F          0454  	LD	E,A
027D' 7A          0455  	LD	A,D
027E' CE00        0456  	ADC	A,0
0280' 57          0457  	LD	D,A
0281' 1A          0458  	LD	A,(DE)		;grab the X from the address offset
0282' B8          0459  	CP	B		;COMPARE A(BODYX)=B(HEADX)
0283' 2013        0460  	JR	NZ,CB1_1_3 	;IF not match, go to next step
0285' 3A940B'     0461  	LD	A,(HEADY1)	;Need to compare HEADY = POINTY
0288' 47          0462  	LD	B,A		;Move HEADY to B for comparison
0289' 11A50C'     0463  	LD	DE,BODYY1	;grab the address of body Y 
028C' 79          0464  	LD	A,C
028D' 83          0465  	ADD	A,E		;add the offset
028E' 5F          0466  	LD	E,A
028F' 7A          0467  	LD	A,D
0290' CE00        0468  	ADC	A,0
0292' 57          0469  	LD	D,A
0293' 1A          0470  	LD	A,(DE)		;grab the Y from the address offset
0294' B8          0471  	CP	B		;COMPARE A(BODYY)=B(HEADY)
0295' CA0104'     0472  	JP	Z,CRASH1	;IF MATCH, SNAKE HIT ITSELF
                  0473  	
                  0474  CB1_1_3:
0298' 3A960B'     0475  	LD	A,(DSPLN1)	;GET THE SNAKE'S DISPLAYED LENGTH
029B' 3D          0476  	DEC	A		;DON'T NEED TO COMPARE THE LAST ENTRY (HEAD)
029C' 0C          0477  	INC	C
029D' B9          0478  	CP	C
029E' CAA402'   R 0479  	JP	Z,CB1_1_4	;WAS DRAW - IF WE HIT THE DISP LEN, KEEP LOOKING
02A1' C37302'   R 0480  	JP 	CB1_1_2		;ELSE, we're good - continue game loop	
                  0481  ; End Player 1 Movement & Collision Detection
                  0482  CB1_1_4:
02A4' 3A8E0B'     0483  	LD	A,(MODE)	;GRAB THE GAME MODE
02A7' FE32        0484  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
02A9' C2F200'     0485  	JP	NZ,DRAW		;  IF NOT, SKIP THIS
                  0486  
                  0487  ;
                  0488  ; COLLISION DETECTION - PLAYER 1 WITH PLAYER 2
                  0489  ;
                  0490  CB1_2_1:
02AC' 0E00        0491  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER	
                  0492  CB1_2_2:
02AE' 3A930B'     0493  	LD	A,(HEADX1)	;Need to compare HEADX = POINTX
02B1' 47          0494  	LD	B,A		;Move HEADX to B for comparison
02B2' 11A50D'     0495  	LD	DE,BODYX2	;grab the address of bodyx
02B5' 79          0496  	LD	A,C
02B6' 83          0497  	ADD	A,E		;add the offset
02B7' 5F          0498  	LD	E,A
02B8' 7A          0499  	LD	A,D
02B9' CE00        0500  	ADC	A,0
02BB' 57          0501  	LD	D,A
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0011
SNAKE FOR DAZZLER GRAPHICS

02BC' 1A          0502  	LD	A,(DE)		;grab the X from the address offset
02BD' B8          0503  	CP	B		;COMPARE A(BODYX)=B(HEADX)
02BE' 2013        0504  	JR	NZ,CB1_2_3	;IF not match, go to next step
02C0' 3A940B'     0505  	LD	A,(HEADY1)	;Need to compare HEADY = POINTY
02C3' 47          0506  	LD	B,A		;Move HEADY to B for comparison
02C4' 11A50E'     0507  	LD	DE,BODYY2	;grab the address of body Y 
02C7' 79          0508  	LD	A,C
02C8' 83          0509  	ADD	A,E		;add the offset
02C9' 5F          0510  	LD	E,A
02CA' 7A          0511  	LD	A,D
02CB' CE00        0512  	ADC	A,0
02CD' 57          0513  	LD	D,A
02CE' 1A          0514  	LD	A,(DE)		;grab the Y from the address offset
02CF' B8          0515  	CP	B		;COMPARE A(BODYY)=B(HEADY)
02D0' CA0404'     0516  	JP	Z,CRASH2	;IF MATCH, SNAKE HIT ITSELF
                  0517  	
                  0518  CB1_2_3:
02D3' 3A9E0B'     0519  	LD	A,(DSPLN2)	;GET THE SNAKE'S DISPLAYED LENGTH
02D6' 0C          0520  	INC	C
02D7' B9          0521  	CP	C
02D8' CADE02'   R 0522  	JP	Z,BP2MCD	;WAS DRAW - IF WE HIT THE DISP LEN, KEEP LOOKING
02DB' C3AE02'   R 0523  	JP 	CB1_2_2		;ELSE, we're good - continue game loop	
                  0524  ; End Player 1 Movement & Collision Detection
                  0525  
                  0526  BP2MCD:
                  0527  ;Begin Player 2 Movement & Collision Detection
02DE' 3A8E0B'     0528  	LD	A,(MODE)	;GRAB THE GAME MODE
02E1' FE32        0529  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
02E3' C2F200'     0530  	JP	NZ,DRAW		;  IF NOT, SKIP THIS
02E6' 3E15        0531  	LD A,	P2COLR		;change color to MAGNTA for snake 2
02E8' CD0000#     0532  	CALL	CHAR
02EB' 3A990B'     0533  	LD	A,(DIR2)	;WHICH DIRECTION ARE WE MOVING?
02EE' FE49        0534  	CP	UP2		;MOVING UP?
02F0' 280F        0535  	JR	Z,MVUP2		;DRAW THE NEXT PIXEL
02F2' FE4B        0536  	CP	DOWN2		;MOVING DOWN?
02F4' 281B        0537  	JR	Z,MVDOWN2	;DRAW THE NEXT PIXEL
02F6' FE4A        0538  	CP	LEFT2		;MOVING LEFT?
02F8' 2827        0539  	JR	Z,MVLEFT2	;DRAW THE NEXT PIXEL
02FA' FE4C        0540  	CP	RIGHT2		;MOVING RIGHT?
02FC' 2833        0541  	JR	Z,MVRIGHT2	;DRAW THE NEXT PIXEL
02FE' C3F200'     0542  	JP	DRAW		;Player 2 must not be moving
                  0543  	
                  0544  MVUP2:
0301' 3A9C0B'     0545  	LD	A,(HEADY2)
0304' FEF0        0546  	CP	240
0306' CA5C04'     0547  	JP	Z,DIED2		;GAME OVER, HIT TOP OF FIELD
0309' C604        0548  	ADD	A,PIXEL
030B' 329C0B'     0549  	LD	(HEADY2),A
030E' C33E03'   R 0550  	JP	FINMV2
                  0551  MVDOWN2:
0311' 3A9C0B'     0552  	LD	A,(HEADY2)
0314' FE0C        0553  	CP	12
0316' CA5C04'     0554  	JP	Z,DIED2		;GAME OVER, HIT BOTTOM OF FIELD
0319' D604        0555  	SUB	A,PIXEL
031B' 329C0B'     0556  	LD	(HEADY2),A
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0012
SNAKE FOR DAZZLER GRAPHICS

031E' C33E03'   R 0557  	JP	FINMV2
                  0558  MVLEFT2:
0321' 3A9B0B'     0559  	LD	A,(HEADX2)
0324' FE0C        0560  	CP	12
0326' CA5C04'     0561  	JP	Z,DIED2		;GAME OVER, HIT LEFT OF FIELD
0329' D604        0562  	SUB	A,PIXEL
032B' 329B0B'     0563  	LD	(HEADX2),A
032E' C33E03'   R 0564  	JP	FINMV2
                  0565  MVRIGHT2:
0331' 3A9B0B'     0566  	LD	A,(HEADX2)
0334' FEF0        0567  	CP	240
0336' CA5C04'     0568  	JP	Z,DIED2		;GAME OVER, HIT RIGHT OF FIELD
0339' C604        0569  	ADD	A,PIXEL
033B' 329B0B'     0570  	LD	(HEADX2),A
                  0571  FINMV2:
                  0572  	;put the new coords at the end of the body	
033E' 3A9B0B'     0573  	LD 	A,(HEADX2)
0341' 67          0574  	LD	H,A		;SET X = A
0342' 3A9C0B'     0575  	LD	A,(HEADY2)
0345' 6F          0576  	LD	L,A
0346' CD0000#     0577  	CALL 	CURSOR		;move the cursor to tail position
0349' CD0000#     0578  	CALL 	DOT		;DRAW LINE TO (HEADX,HEADY)
034C' 3A9E0B'     0579  	LD	A,(DSPLN2)	;grab the currently displayed snake length
034F' 3D          0580  	DEC	A		;remove 1
0350' F5          0581  	PUSH	AF		;save this offset value for later
0351' 11A50D'     0582  	LD	DE,BODYX2	;grab the address of bodyx
0354' 83          0583  	ADD	A,E		;add the offset
0355' 5F          0584  	LD	E,A
0356' 7A          0585  	LD	A,D
0357' CE00        0586  	ADC	A,0
0359' 57          0587  	LD	D,A
035A' 7C          0588  	LD	A,H		;Put X in the accumulator
035B' 12          0589  	LD	(DE),A		;save the new X position to the offset address
                  0590  
035C' F1          0591  	POP	AF		;grab the offset again
035D' 11A50E'     0592  	LD	DE,BODYY2	;grab the address of bodyx
0360' 83          0593  	ADD	A,E		;add the offset	
0361' 5F          0594  	LD	E,A
0362' 7A          0595  	LD	A,D
0363' CE00        0596  	ADC	A,0
0365' 57          0597  	LD	D,A
0366' 7D          0598  	LD	A,L		;Put Y in the accumulator
0367' 12          0599  	LD	(DE),A		;save the new Y position to the offset address
                  0600  
                  0601  	;
                  0602  	; COLLISION DETECTION - PLAYER 2 WITH POINT
                  0603  	;
0368' 3A9B0B'     0604  	LD	A,(HEADX2)	;Need to compare HEADX = POINTX
036B' 47          0605  	LD	B,A		;Move HEADX to B for comparison
                  0606  
036C' 3A870B'     0607  	LD	A,(POINTX)	;Grab the POINT X
036F' B8          0608  	CP	B		;COMPARE A(POINTX)=B(HEADX)
0370' 202A        0609  	JR	NZ,CB2_2_1	;IF not match, go to next step
                  0610  
0372' 3A9C0B'     0611  	LD	A,(HEADY2)	;Need to compare HEADY = POINTY
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0013
SNAKE FOR DAZZLER GRAPHICS

0375' 47          0612  	LD	B,A		;Move HEADY to B for comparison
0376' 3A880B'     0613  	LD	A,(POINTY)	;Grab the POINT Y
0379' B8          0614  	CP	B		;COMPARE A(POINTY)=B(HEADY)
037A' 2020        0615  	JR	NZ,CB2_2_1	;IF not match, go to next step
                  0616  	; HIT THE POINT
037C' CD7209'     0617  	CALL	SONG2		;Play a tone
037F' 3A900B'     0618  	LD	A,(POINT)	;grab the current point
0382' FE09        0619  	CP	9		;see if we're on point 10 (0-based)
0384' CA0D04'     0620  	JP	Z,NEXTSTAGE	;  if so advance to next stage
0387' 3C          0621  	INC	A		;else increment the point
0388' 32900B'     0622  	LD	(POINT),A	;save the new point
                  0623  
                  0624  	; INCREASE THE SNAKE SIZE
038B' 3A9D0B'     0625  	LD	A,(SNKLN2)	; GRAB THE CURRENT LENGTH
038E' C60A        0626  	ADD	A,10 		; INCREASE THE SNAKE SIZE BY 10
0390' 329D0B'     0627  	LD	(SNKLN2),A	; SAVE IT BACK
                  0628  
0393' CDA504'     0629  	CALL	NEWPOINT	; DRAW THE NEXT POINT
0396' CD9705'     0630  	CALL	DRAWPOINTS
0399' C3F200'     0631  	JP	DRAW
                  0632  
                  0633  	;
                  0634  	; COLLISION DETECTION - PLAYER 2 WITH SELF
                  0635  	;
                  0636  CB2_2_1:
039C' 0E00        0637  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0638  	
                  0639  CB2_2_2:
039E' 3A9B0B'     0640  	LD	A,(HEADX2)	;Need to compare HEADX = POINTX
03A1' 47          0641  	LD	B,A			;Move HEADX to B for comparison
                  0642  
03A2' 11A50D'     0643  	LD	DE,BODYX2	;grab the address of bodyx
03A5' 79          0644  	LD	A,C
03A6' 83          0645  	ADD	A,E		;add the offset
03A7' 5F          0646  	LD	E,A
03A8' 7A          0647  	LD	A,D
03A9' CE00        0648  	ADC	A,0
03AB' 57          0649  	LD	D,A
03AC' 1A          0650  	LD	A,(DE)		;grab the X from the address offset
                  0651  
03AD' B8          0652  	CP	B		;COMPARE A(BODYX)=B(HEADX)
03AE' 2013        0653  	JR	NZ,CB2_2_3	;IF not match, go to next step
                  0654  
03B0' 3A9C0B'     0655  	LD	A,(HEADY2)	;Need to compare HEADY = POINTY
03B3' 47          0656  	LD	B,A		;Move HEADY to B for comparison
                  0657  	
03B4' 11A50E'     0658  	LD	DE,BODYY2	;grab the address of body Y 
03B7' 79          0659  	LD	A,C
03B8' 83          0660  	ADD	A,E		;add the offset
03B9' 5F          0661  	LD	E,A
03BA' 7A          0662  	LD	A,D
03BB' CE00        0663  	ADC	A,0
03BD' 57          0664  	LD	D,A
03BE' 1A          0665  	LD	A,(DE)		;grab the Y from the address offset
                  0666  	
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0014
SNAKE FOR DAZZLER GRAPHICS

03BF' B8          0667  	CP	B		;COMPARE A(BODYY)=B(HEADY)
03C0' CA0704'   R 0668  	JP	Z,CRASH3	;IF MATCH, SNAKE HIT ITSELF
                  0669  	
                  0670  CB2_2_3:
03C3' 3A9E0B'     0671  	LD	A,(DSPLN2)	;GET THE SNAKE'S DISPLAYED LENGTH
03C6' 3D          0672  	DEC	A		;DON'T NEED TO COMPARE THE LAST ENTRY (HEAD)
03C7' 0C          0673  	INC	C
03C8' B9          0674  	CP	C
03C9' CACF03'   R 0675  	JP	Z,CB2_1_1	;IF WE HIT THE DISP LEN, KEEP LOOKING
03CC' C39E03'   R 0676  	JP 	CB2_2_2		;ELSE, we're good - continue game loop	
                  0677  
                  0678  	;
                  0679  	; COLLISION DETECTION - PLAYER 2 WITH PLAYER 1
                  0680  	;
                  0681  CB2_1_1:
03CF' 0E00        0682  	LD	C,0			;START AT 0, USE AS OUR LOOP COUNTER
                  0683  	
                  0684  CB2_1_2:
03D1' 3A9B0B'     0685  	LD	A,(HEADX2)	;Need to compare HEADX = POINTX
03D4' 47          0686  	LD	B,A		;Move HEADX to B for comparison
                  0687  
03D5' 11A50B'     0688  	LD	DE,BODYX1	;grab the address of bodyx
03D8' 79          0689  	LD	A,C
03D9' 83          0690  	ADD	A,E		;add the offset
03DA' 5F          0691  	LD	E,A
03DB' 7A          0692  	LD	A,D
03DC' CE00        0693  	ADC	A,0
03DE' 57          0694  	LD	D,A
03DF' 1A          0695  	LD	A,(DE)		;grab the X from the address offset
                  0696  
03E0' B8          0697  	CP	B		;COMPARE A(BODYX)=B(HEADX)
03E1' 2013        0698  	JR	NZ,CB2_1_3	;IF not match, go to next step
                  0699  
03E3' 3A9C0B'     0700  	LD	A,(HEADY2)	;Need to compare HEADY = POINTY
03E6' 47          0701  	LD	B,A		;Move HEADY to B for comparison
                  0702  	
03E7' 11A50C'     0703  	LD	DE,BODYY1	;grab the address of body Y 
03EA' 79          0704  	LD	A,C
03EB' 83          0705  	ADD	A,E		;add the offset
03EC' 5F          0706  	LD	E,A
03ED' 7A          0707  	LD	A,D
03EE' CE00        0708  	ADC	A,0
03F0' 57          0709  	LD	D,A
03F1' 1A          0710  	LD	A,(DE)		;grab the Y from the address offset
                  0711  	
03F2' B8          0712  	CP	B		;COMPARE A(BODYY)=B(HEADY)
03F3' CA0A04'   R 0713  	JP	Z,CRASH4	;IF MATCH, SNAKE HIT ITSELF
                  0714  	
                  0715  CB2_1_3:
03F6' 3A960B'     0716  	LD	A,(DSPLN1)	;GET THE SNAKE'S DISPLAYED LENGTH
03F9' 0C          0717  	INC	C
03FA' B9          0718  	CP	C
03FB' CAF200'     0719  	JP	Z,DRAW		;IF WE HIT THE DISP LEN, KEEP LOOKING
03FE' C3D103'   R 0720  	JP 	CB2_1_2		;ELSE, we're good - continue game loop	
                  0721  ;End Player 2 Movement & Collision Detection
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0015
SNAKE FOR DAZZLER GRAPHICS

                  0722  
                  0723  CRASH1:
                  0724  	;LD	E,'1' ;DEBUG PRINT
                  0725  	;CALL	PRINTCHR 
0401' C32704'   R 0726  	JP	DIED1
                  0727  CRASH2:
                  0728  	;LD	E,'2' ;DEBUG PRINT
                  0729  	;CALL	PRINTCHR 
0404' C32704'   R 0730  	JP	DIED1
                  0731  CRASH3:
                  0732  	;LD	E,'3' ;DEBUG PRINT
                  0733  	;CALL	PRINTCHR 
0407' C35C04'   R 0734  	JP	DIED2
                  0735  CRASH4:
                  0736  	;LD 	E,'4' ;DEBUG PRINT
                  0737  	;CALL	PRINTCHR 
040A' C35C04'   R 0738  	JP	DIED2
                  0739  
                  0740  NEXTSTAGE:
                  0741  	;INCREASE THE SPEED 
040D' 3E00        0742  	LD	A,0		;RESET THE POINT
040F' 32900B'     0743  	LD	(POINT),A	;RESET THE POINT
                  0744  
0412' 3A8D0B'     0745  	LD	A,(STAGE)	;grab the current stage
0415' 3C          0746  	INC	A		;increment the stage
0416' 328D0B'     0747  	LD	(STAGE),A	;save the new stage
                  0748  	
                  0749  	;LD	DE,STGMSG	;PRINT
                  0750  	;CALL	PRINTSTR	;  "STAGE: "
                  0751  	;CALL	PRINTBYTE	;PRINT THE STAGE BYTE
                  0752  	;LD	DE,CRLF		;PRINT NEWLINE
                  0753  	;CALL	PRINTSTR
                  0754  
0419' 3A8B0B'     0755  	LD	A,(SPEED)
                  0756  	;SUB	0FH
                  0757  	;SUB	019H
041C' D61E        0758  	SUB	1EH
041E' 328B0B'     0759  	LD	(SPEED),A
                  0760  	
0421' CD0206'     0761  	CALL	DISP_STAGE	;FLASH THE CURRENT STAGE
                  0762  	
0424' C37600'     0763  	JP	START
                  0764  	
                  0765  DIED1:
0427' 060A        0766  	LD	B,10		;FLASH THE SCREEN BY QUICKLY SWAPPING
                  0767  FL_LOOP1:			;  BETWEEN B&W AND COLOR
                  0768  	;LD	A,TENTH
                  0769  	;CALL 	PAUSE
0429' F5          0770  	PUSH 	AF
042A' C5          0771  	PUSH	BC
042B' D5          0772  	PUSH	DE
042C' CD7809'     0773  	CALL	SONG3		;PLAY TONE
042F' D1          0774  	POP	DE
0430' C1          0775  	POP	BC
0431' F1          0776  	POP	AF
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0016
SNAKE FOR DAZZLER GRAPHICS

                  0777  
0432' 3E04        0778  	LD	A,R64BW		;SET SCREEN FOR BW
0434' CD0000#     0779  	CALL	CHAR		;  64 x 64 MODE
                  0780  	;LD	A,TENTH
                  0781  	;CALL 	PAUSE	
                  0782  
0437' F5          0783  	PUSH 	AF
0438' C5          0784  	PUSH	BC
0439' D5          0785  	PUSH	DE
043A' CD7809'     0786  	CALL	SONG3		;PLAY TONE
043D' D1          0787  	POP	DE
043E' C1          0788  	POP	BC
043F' F1          0789  	POP	AF
                  0790  
0440' 3E03        0791  	LD	A,R64		;SET SCREEN FOR COLOR
0442' CD0000#     0792  	CALL	CHAR		;  64 x 64 MODE
0445' 05          0793  	DEC	B
                  0794  
0446' 20E1        0795  	JR	NZ,FL_LOOP1
                  0796  
0448' 3A970B'     0797  	LD	A,(LIVES1)	;DECREMENT LIVES
044B' 3D          0798  	DEC	A		;SUBTRACT THIS LIFE
044C' 32970B'     0799  	LD	(LIVES1),A	;SAVE IT BACK
                  0800  	
044F' 2840        0801  	JR	Z,GAMEOVER	;LIVES HIT ZERO
                  0802  
                  0803  	;USED A LIFE, RESET THE STAGE AT FIRST POINT
0451' 3E00        0804  	LD	A,0		;RESET THE POINT
0453' 32900B'     0805  	LD	(POINT),A	;RESET THE POINT
                  0806  	
0456' CD2E06'     0807  	CALL	DISP_LIVES	;DISPLAY THE LIVES REMAINING
                  0808  
0459' C37600'     0809  	JP	START
                  0810  
                  0811  DIED2:
045C' 060A        0812  	LD	B,10		;FLASH THE SCREEN BY QUICKLY SWAPPING
                  0813  FL_LOOP2:			;  BETWEEN B&W AND COLOR
                  0814  	;LD	A,TENTH
                  0815  	;CALL 	PAUSE
045E' F5          0816  	PUSH 	AF
045F' C5          0817  	PUSH	BC
0460' D5          0818  	PUSH	DE
0461' CD7809'     0819  	CALL	SONG3		;PLAY TONE
0464' D1          0820  	POP	DE
0465' C1          0821  	POP	BC
0466' F1          0822  	POP	AF
                  0823  
0467' 3E04        0824  	LD	A,R64BW		;SET SCREEN FOR BW
0469' CD0000#     0825  	CALL	CHAR		;  64 x 64 MODE
                  0826  	;LD	A,TENTH
                  0827  	;CALL 	PAUSE	
                  0828  
046C' F5          0829  	PUSH 	AF
046D' C5          0830  	PUSH	BC
046E' D5          0831  	PUSH	DE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0017
SNAKE FOR DAZZLER GRAPHICS

046F' CD7809'     0832  	CALL	SONG3		;PLAY TONE
0472' D1          0833  	POP	DE
0473' C1          0834  	POP	BC
0474' F1          0835  	POP	AF
                  0836  
0475' 3E03        0837  	LD	A,R64		;SET SCREEN FOR COLOR
0477' CD0000#     0838  	CALL	CHAR		;  64 x 64 MODE
                  0839  	
047A' 05          0840  	DEC	B
                  0841  
047B' 20E1        0842  	JR	NZ,FL_LOOP2
                  0843  
047D' 3A9F0B'     0844  	LD	A,(LIVES2)	;DECREMENT LIVES
0480' 3D          0845  	DEC	A		;SUBTRACT THIS LIFE
0481' 329F0B'     0846  	LD	(LIVES2),A	;SAVE IT BACK
                  0847  	
0484' 280B        0848  	JR	Z,GAMEOVER	;LIVES HIT ZERO
                  0849  
                  0850  	;USED A LIFE, RESET THE STAGE AT FIRST POINT
0486' 3E00        0851  	LD	A,0			;RESET THE POINT
0488' 32900B'     0852  	LD	(POINT),A	;RESET THE POINT
                  0853  	
048B' CD2E06'     0854  	CALL	DISP_LIVES	;DISPLAY THE LIVES REMAINING
                  0855  
048E' C37600'     0856  	JP	START
                  0857  
                  0858  GAMEOVER:
0491' CD7A06'     0859  	CALL	DISP_OVER
0494' C35100'     0860  	JP	BEGIN		;RESTART THE GAME
                  0861  	
                  0862  WONGAME:
0497' 11690B'     0863  	LD	DE,WONMSG	;POINT TO GAME-WON MESSAGE
049A' CD0B09'     0864  	CALL	PRINTSTR	;DO SYSTEM CALL
049D' 3E07        0865  	LD	A,TOGDAZ	;SPECIAL CONTROL CHARACTER
049F' CD0000#     0866  	CALL	CHAR		;  TO TURN OFF/ON DAZZLER
04A2' C30000      0867  	JP	WBOOT		;RETURN TO CDOS
                  0868  
                  0869  NEWPOINT:	
04A5' 3E11        0870  	LD	A,PTCOLR	;GENERATE A RANDOM POINT
04A7' CD0000#     0871  	CALL	CHAR		
                  0872  NP2:
04AA' CDCA09'     0873  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
04AD' 32870B'     0874  	LD	(POINTX),A	;STORE IT IN OUR POINTX VARIABLE
04B0' 67          0875  	LD	H,A		;  AND SET IT FOR "DOT"
                  0876  	
04B1' CDCA09'     0877  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR Y
04B4' 32880B'     0878  	LD	(POINTY),A	;STORE IT IN OUR POINTY VARIABLE
04B7' 6F          0879  	LD	L,A		;  AND SET IT FOR "DOT"
                  0880  
                  0881  ;MAKE SURE THE NEW POINT DOESN'T 
                  0882  ;END UP DIRECTLY ON TOP OF PLAYER 1 SNAKE
                  0883  NPCP1_1:
04B8' 0E00        0884  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0885  	
                  0886  NPCP1_2:
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0018
SNAKE FOR DAZZLER GRAPHICS

04BA' 3A870B'     0887  	LD	A,(POINTX)	;Need to compare BODYX = POINTX
04BD' 47          0888  	LD	B,A		;Move POINTX to B for comparison
                  0889  
04BE' 11A50B'     0890  	LD	DE,BODYX1	;grab the address of bodyx
04C1' 79          0891  	LD	A,C
04C2' 83          0892  	ADD	A,E		;add the offset
04C3' 5F          0893  	LD	E,A
04C4' 7A          0894  	LD	A,D
04C5' CE00        0895  	ADC	A,0
04C7' 57          0896  	LD	D,A
04C8' 1A          0897  	LD	A,(DE)		;grab the X from the address offset
                  0898  
04C9' B8          0899  	CP	B		;COMPARE A(BODYX)=B(HEADX)
04CA' 2013        0900  	JR	NZ,NPCP1_3	;IF not match, go to next step
                  0901  
04CC' 3A880B'     0902  	LD	A,(POINTY)	;Need to compare BODYY = POINTY
04CF' 47          0903  	LD	B,A		;Move POINTY to B for comparison
                  0904  	
04D0' 11A50C'     0905  	LD	DE,BODYY1	;grab the address of body Y 
04D3' 79          0906  	LD	A,C
04D4' 83          0907  	ADD	A,E		;add the offset
04D5' 5F          0908  	LD	E,A
04D6' 7A          0909  	LD	A,D
04D7' CE00        0910  	ADC	A,0
04D9' 57          0911  	LD	D,A
04DA' 1A          0912  	LD	A,(DE)		;grab the Y from the address offset
                  0913  	
04DB' B8          0914  	CP	B		;COMPARE A(BODYY)=B(HEADY)
04DC' CAAA04'   R 0915  	JP	Z,NP2		;IF MATCH, NEED TO GENERATE A NEW POINT
                  0916  	
                  0917  NPCP1_3:
04DF' 3A960B'     0918  	LD	A,(DSPLN1)	;GET THE SNAKE'S DISPLAYED LENGTH
04E2' 0C          0919  	INC	C
04E3' B9          0920  	CP	C
04E4' CAEA04'   R 0921  	JP	Z,NPCP2_1	;IF WE HIT THE DISP LEN, continue
04E7' C3BA04'   R 0922  	JP 	NPCP1_2		;ELSE, keep looking
                  0923  
                  0924  ;make sure new point doesn't end up on top of player 2
                  0925  NPCP2_1:
                  0926  	;check if we're in 2 player mode
04EA' 3A8E0B'     0927  	LD	A,(MODE)	;GRAB THE GAME MODE
04ED' FE32        0928  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
04EF' 2032        0929  	JR	NZ,NPFIN	;  IF NOT, SKIP THIS	
                  0930  
04F1' 0E00        0931  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0932  
                  0933  NPCP2_2:
04F3' 3A870B'     0934  	LD	A,(POINTX)	;Need to compare BODYX = POINTX
04F6' 47          0935  	LD	B,A		;Move POINTX to B for comparison
                  0936  
04F7' 11A50D'     0937  	LD	DE,BODYX2	;grab the address of bodyx
04FA' 79          0938  	LD	A,C
04FB' 83          0939  	ADD	A,E		;add the offset
04FC' 5F          0940  	LD	E,A
04FD' 7A          0941  	LD	A,D
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0019
SNAKE FOR DAZZLER GRAPHICS

04FE' CE00        0942  	ADC	A,0
0500' 57          0943  	LD	D,A
0501' 1A          0944  	LD	A,(DE)		;grab the X from the address offset
                  0945  
0502' B8          0946  	CP	B		;COMPARE A(BODYX)=B(HEADX)
0503' 2013        0947  	JR	NZ,NPCP2_3	;IF not match, go to next step
                  0948  
0505' 3A880B'     0949  	LD	A,(POINTY)	;Need to compare BODYY = POINTY
0508' 47          0950  	LD	B,A		;Move POINTY to B for comparison
                  0951  	
0509' 11A50E'     0952  	LD	DE,BODYY2	;grab the address of body Y 
050C' 79          0953  	LD	A,C
050D' 83          0954  	ADD	A,E		;add the offset
050E' 5F          0955  	LD	E,A
050F' 7A          0956  	LD	A,D
0510' CE00        0957  	ADC	A,0
0512' 57          0958  	LD	D,A
0513' 1A          0959  	LD	A,(DE)		;grab the Y from the address offset
                  0960  	
0514' B8          0961  	CP	B		;COMPARE A(BODYY)=B(HEADY)
0515' CAAA04'   R 0962  	JP	Z,NP2		;IF MATCH, NEED TO GENERATE A NEW POINT
                  0963  	
                  0964  NPCP2_3:
0518' 3A9E0B'     0965  	LD	A,(DSPLN2)	;GET THE SNAKE'S DISPLAYED LENGTH
051B' 0C          0966  	INC	C
051C' B9          0967  	CP	C
051D' CA2305'   R 0968  	JP	Z,NPFIN		;IF WE HIT THE DISP LEN, continue
0520' C3F304'   R 0969  	JP 	NPCP2_2		;ELSE, keep looking
                  0970  	
                  0971  NPFIN:
0523' CD0000#     0972  	CALL	CURSOR		;MOVE CURSOR TO POINT
0526' CD0000#     0973  	CALL	DOT		;  AND DISPLAY IT
0529' C9          0974  	RET
                  0975  	
                  0976  ;
                  0977  ; UTILITY FUNCTIONS
                  0978  ;
                  0979  
                  0980  
                  0981  ;DRAW WHITE BORDER AROUND THE SCREEN
                  0982  BORDER:
052A' CD0000#     0983  	CALL	PAGE		;CLEAR THE SCREEN
052D' 3E17        0984  	LD	A,WHITE		;SET BORDER LINE
052F' CD0000#     0985  	CALL	CHAR		;  COLOR TO WHITE
                  0986  
0532' 2600        0987  	LD	H,0		;SET X = 0
0534' 2E00        0988  	LD	L,0		;SET Y = 0
0536' CD0000#     0989  	CALL	CURSOR		;MOVE CURSOR THERE
0539' 2608        0990  	LD	H,8		;SET X = 0
053B' 2EFF        0991  	LD	L,255		;SET Y = 0
053D' CD0000#     0992  	CALL	AREA		;MOVE CURSOR THERE
0540' 26FF        0993  	LD	H,255		;SET X = 0
0542' 2EF7        0994  	LD	L,247		;SET Y = 0
0544' CD0000#     0995  	CALL	AREA		;MOVE CURSOR THERE
0547' 26F7        0996  	LD	H,247		;SET X = 0
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0020
SNAKE FOR DAZZLER GRAPHICS

0549' 2E00        0997  	LD	L,0		;SET Y = 0
054B' CD0000#     0998  	CALL	AREA		;MOVE CURSOR THERE
054E' 2608        0999  	LD	H,8		;SET X = 0
0550' 2E08        1000  	LD	L,8		;SET Y = 0
0552' CD0000#     1001  	CALL	AREA		;MOVE CURSOR THERE
0555' C9          1002  	RET
                  1003  
                  1004  DRAWLIVES:
                  1005  	;draw how many Player 1 lives are left with green dots in the upper-left corner
0556' 3A970B'     1006  	LD	A,(LIVES1)
0559' 47          1007  	LD	B,A
                  1008  	
055A' 2604        1009  	LD	H,4		;SET X = 0
055C' 2EFB        1010  	LD	L,251		;SET Y = 0
055E' CD0000#     1011  	CALL	CURSOR		;MOVE CURSOR THERE
0561' 3E12        1012  	LD	A,P1COLR
0563' CD0000#     1013  	CALL	CHAR
                  1014  LV_LOOP1:
0566' 7C          1015  	LD	A,H
0567' C608        1016  	ADD	A,8
0569' 67          1017  	LD	H,A
056A' CD0000#     1018  	CALL	CURSOR
056D' CD0000#     1019  	CALL	DOT
                  1020  
0570' 05          1021  	DEC	B
0571' 20F3        1022  	JR	NZ,LV_LOOP1
                  1023  
                  1024  	;Draw Player 2 lives too?
0573' 3A8E0B'     1025  	LD	A,(MODE)	;GRAB THE GAME MODE
0576' FE32        1026  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0578' C0          1027  	RET	NZ		;  IF NOT, SKIP THIS	
                  1028  
0579' 3A9F0B'     1029  	LD	A,(LIVES2)
057C' 47          1030  	LD	B,A
                  1031  	
057D' 2604        1032  	LD	H,4		;SET X = 0
057F' 2E04        1033  	LD	L,4		;SET Y = 0
0581' CD0000#     1034  	CALL	CURSOR		;MOVE CURSOR THERE
0584' 3E15        1035  	LD	A,P2COLR
0586' CD0000#     1036  	CALL	CHAR
                  1037  LV_LOOP2:
0589' 7C          1038  	LD	A,H
058A' C608        1039  	ADD	A,8
058C' 67          1040  	LD	H,A
058D' CD0000#     1041  	CALL	CURSOR
0590' CD0000#     1042  	CALL	DOT
                  1043  
0593' 05          1044  	DEC	B
0594' 20F3        1045  	JR	NZ,LV_LOOP2
                  1046  	
0596' C9          1047  	RET
                  1048  
                  1049  DRAWPOINTS:
                  1050  	;draw how many POINTS are left in the stage with red dots in the upper-right corner
                  1051  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0021
SNAKE FOR DAZZLER GRAPHICS

0597' 3E17        1052  	LD	A,WHITE		;CLEAR OUT THE LINE OF POINTS FIRST
0599' CD0000#     1053  	CALL	CHAR
059C' 26FB        1054  	LD	H,251		;SET X = 0
059E' 2EFB        1055  	LD	L,251		;SET Y = 0
05A0' CD0000#     1056  	CALL	CURSOR		;MOVE CURSOR THERE
05A3' 26AB        1057  	LD	H,171		;SET X = 0
05A5' 2EFB        1058  	LD	L,251		;SET Y = 0
05A7' CD0000#     1059  	CALL	LINE		;MOVE CURSOR THERE
                  1060  		
05AA' 3A900B'     1061  	LD	A,(POINT)
05AD' 47          1062  	LD	B,A
05AE' 3E0A        1063  	LD	A,10
05B0' 90          1064  	SUB	B		;A now has how many points to print (10-POINTS)
05B1' 47          1065  	LD	B,A		;COPY to B
                  1066  	
05B2' 26FB        1067  	LD	H,251		;SET X = 0
05B4' 2EFB        1068  	LD	L,251		;SET Y = 0
05B6' CD0000#     1069  	CALL	CURSOR		;MOVE CURSOR THERE
05B9' 3E11        1070  	LD	A,PTCOLR
05BB' CD0000#     1071  	CALL	CHAR
                  1072  PT_LOOP:
05BE' 7C          1073  	LD	A,H
05BF' D608        1074  	SUB	8		;PIXEL*2
05C1' 67          1075  	LD	H,A
05C2' CD0000#     1076  	CALL	CURSOR
05C5' CD0000#     1077  	CALL	DOT
                  1078  	
05C8' 05          1079  	DEC	B
05C9' 20F3        1080  	JR	NZ,PT_LOOP
05CB' C9          1081  	RET	
                  1082  	
                  1083  ;
                  1084  ;FLASHING INTRO SCREEN
                  1085  ;
                  1086  DISP_INTRO:
05CC' CD0000#     1087  	CALL	PAGE
05CF' CD2A05'     1088  	CALL	BORDER
05D2' 219A38      1089  	LD	HL,389AH	;POSITION CURSOR PRIOR
05D5' CD0000#     1090  	CALL	CURSOR		;  TO WRITING LOGO
05D8' 3E17        1091  	LD	A,WHITE		;draw the snake in color
05DA' CD0000#     1092  	CALL	CHAR
05DD' 21EB09'     1093  	LD	HL,DAZSTR	;WRITE "DAZZLER"
05E0' CD0000#     1094  	CALL	STRING
                  1095  	
05E3' 217A4C      1096  	LD	HL,4C7AH	;POINT TO START
05E6' CD0000#     1097  	CALL	CURSOR		;  OF NEXT WORD
05E9' 21F209'     1098  	LD	HL,SNKSTR	;WRITE THE WORD
05EC' CD0000#     1099  	CALL	STRING		;  "SNAKE"
                  1100  	
05EF' 216460      1101  	LD	HL,6064H	;POINT TO START
05F2' CD0000#     1102  	CALL	CURSOR		;  OF NEXT WORD
05F5' 211B0A'     1103  	LD	HL,BYARON	;WRITE
05F8' CD0000#     1104  	CALL	STRING		;  "By Aron Hoekstra"
                  1105  
05FB' CD0000#     1106  	CALL	CYCLE		;CYCLE ALL THE COLORS
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0022
SNAKE FOR DAZZLER GRAPHICS

05FE' CDF906'     1107  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1108  	
0601' C9          1109  	RET
                  1110  
                  1111  ;
                  1112  ;FLASHING STAGE SCREEN
                  1113  ;
                  1114  DISP_STAGE:
0602' CD0000#     1115  	CALL	PAGE
0605' CD2A05'     1116  	CALL	BORDER
0608' 217A2D      1117  	LD	HL,2D7AH	;MOVE CURSOR
060B' CD0000#     1118  	CALL	CURSOR		;  TO CENTER
060E' 21F709'     1119  	LD	HL,STGSTR	;WRITE THE WORD
0611' CD0000#     1120  	CALL	STRING		;  "STAGE"
                  1121  
0614' 217AAC      1122  	LD	HL,0AC7AH	;MOVE CURSOR
0617' CD0000#     1123  	CALL	CURSOR		;  OVER A BIT
                  1124  	
061A' 3A8D0B'     1125  	LD	A,(STAGE)	;GRAB THE STAGE VALUE
061D' 3C          1126  	INC	A		;ADD 1 FOR DISPLAY
061E' CD3D09'     1127  	CALL	DISPBYTE	;DISPLAY THE NUMBER
                  1128  
0621' CD0000#     1129  	CALL	CYCLE		;CYCLE ALL THE COLORS
                  1130  
0624' CD0000#     1131  	CALL	PAGE
0627' CD2A05'     1132  	CALL	BORDER
062A' CDF906'     1133  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1134  
062D' C9          1135  	RET
                  1136  
                  1137  ;
                  1138  ;DISPLAY REMAINING LIVES
                  1139  ;
                  1140  DISP_LIVES:
062E' CD0000#     1141  	CALL	PAGE
0631' CD2A05'     1142  	CALL	BORDER
                  1143  	
                  1144  	;Player 1 Lives
0634' 21AA1B      1145  	LD	HL,1BAAH	;MOVE CURSOR
0637' CD0000#     1146  	CALL	CURSOR		;  TO CENTER
063A' 21FC09'     1147  	LD	HL,LV1STR	;WRITE THE WORD
063D' CD0000#     1148  	CALL	STRING		;  "P1 LIVES"
                  1149  
0640' 21AAC4      1150  	LD	HL,0C4AAH	;MOVE CURSOR
0643' CD0000#     1151  	CALL	CURSOR		;  OVER A BIT
                  1152  	
0646' 3A970B'     1153  	LD	A,(LIVES1)	;GRAB THE STAGE VALUE
0649' CD3D09'     1154  	CALL	DISPBYTE	;DISPLAY THE NUMBER
                  1155  
                  1156  	;Player 2 Lives
064C' 3A8E0B'     1157  	LD	A,(MODE)	;GRAB THE GAME MODE
064F' FE32        1158  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0651' 2018        1159  	JR	NZ,DSLV2	;IF NOT, SKIP THIS
                  1160  
0653' 213E1B      1161  	LD	HL,1B3EH	;MOVE CURSOR
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0023
SNAKE FOR DAZZLER GRAPHICS

0656' CD0000#     1162  	CALL	CURSOR		;  TO CENTER
0659' 21050A'     1163  	LD	HL,LV2STR	;WRITE THE WORD
065C' CD0000#     1164  	CALL	STRING		;  "P2 LIVES"
                  1165  
065F' 213EC4      1166  	LD	HL,0C43EH	;MOVE CURSOR
0662' CD0000#     1167  	CALL	CURSOR		;  OVER A BIT
                  1168  	
0665' 3A9F0B'     1169  	LD	A,(LIVES2)	;GRAB THE STAGE VALUE
0668' CD3D09'     1170  	CALL	DISPBYTE	;DISPLAY THE NUMBER
                  1171  
                  1172  DSLV2:
066B' 3E14        1173  	LD	A,TWO
066D' CD0000#     1174  	CALL 	PAUSE
                  1175  
0670' CD0000#     1176  	CALL	PAGE
0673' CD2A05'     1177  	CALL	BORDER
0676' CDF906'     1178  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1179  
0679' C9          1180  	RET
                  1181  
                  1182  ;
                  1183  ;DISPLAY GAME OVER
                  1184  ;
                  1185  DISP_OVER:
067A' CD0000#     1186  	CALL	PAGE
067D' CD2A05'     1187  	CALL	BORDER
                  1188  	
0680' 217A10      1189  	LD	HL,107AH	;MOVE CURSOR
0683' CD0000#     1190  	CALL	CURSOR		;  TO CENTER
0686' 210E0A'     1191  	LD	HL,GOVSTR	;WRITE THE WORDS
0689' CD0000#     1192  	CALL	STRING		;  "GAME OVER"
                  1193  
068C' 3E28        1194  	LD	A,FOUR
068E' CD0000#     1195  	CALL 	PAUSE
                  1196  
0691' CD0000#     1197  	CALL	PAGE
0694' CD2A05'     1198  	CALL	BORDER
0697' CDF906'     1199  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1200  
069A' C9          1201  	RET
                  1202  
                  1203  ;
                  1204  ;GET CONSOLE INPUT J OR K
                  1205  ;
                  1206  GETJK:
069B' 11670A'     1207  	LD	DE,INTJK	;GET JOYSTICK OR KEYBOARD
069E' CD0B09'     1208  	CALL	PRINTSTR	;DO SYSTEM CALL
                  1209  GETJK1:	
06A1' CDBC07'     1210  	CALL	CONSTAT		;GET CONSOLE STATUS
06A4' 28FB        1211  	JR	Z,GETJK1	;RETURN TO MAIN PROGRAM
06A6' CDF406'     1212  	CALL	GETDATA		;CHECK THE CHARACTER
                  1213  
06A9' FE4A        1214  	CP	'J'		;CHECK FOR UP KEY
06AB' 2810        1215  	JR	Z,GETJK2	;PROCESS THE KEYPRESS
06AD' FE6A        1216  	CP	'j'		;Lower-Case?
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0024
SNAKE FOR DAZZLER GRAPHICS

06AF' 280A        1217  	JR	Z,GETJKLC	;PROCESS THE KEYPRESS
                  1218  		
06B1' FE4B        1219  	CP	'K'		;CHECK FOR DOWN KEY
06B3' 2808        1220  	JR	Z,GETJK2	;PROCESS THE KEYPRESS
06B5' FE6B        1221  	CP	'k'		;Lower-Case?
06B7' 2802        1222  	JR	Z,GETJKLC	;PROCESS THE KEYPRESS
                  1223  
06B9' 18E6        1224  	JR	GETJK1		;Invalid key, keep waiting
                  1225  GETJKLC:
06BB' D620        1226  	SUB	A,20H		;CONVERT TO UPPER-CASE
                  1227  GETJK2:	
06BD' 328F0B'     1228  	LD	(CNTRL),A	;SAVE THE CONTROL METHOD
06C0' 5F          1229  	LD 	E,A		;ECHO THE KEY
06C1' CD0309'     1230  	CALL 	PRINTCHR 	;  BACK TO CONSOLE
06C4' 11820B'     1231  	LD	DE,CRLF		;CRLF
06C7' CD0B09'     1232  	CALL	PRINTSTR	;DO SYSTEM CALL
06CA' C9          1233  	RET			;RETURN TO MAIN IF NEITHER
                  1234  
                  1235  ;
                  1236  ;GET CONSOLE INPUT 1 OR 2
                  1237  ;
                  1238  GET12:
06CB' 114E0A'     1239  	LD	DE,INT12	;HOW MANY PLAYERS
06CE' CD0B09'     1240  	CALL	PRINTSTR	;DO SYSTEM CALL
                  1241  GET12_1:	
06D1' CDBC07'     1242  	CALL	CONSTAT		;GET CONSOLE STATUS
06D4' 28FB        1243  	JR	Z,GET12_1	;RETURN TO MAIN PROGRAM
06D6' CDF406'     1244  	CALL	GETDATA		;CHECK THE CHARACTER
                  1245  
06D9' FE31        1246  	CP	'1'		;CHECK FOR UP KEY
06DB' 2806        1247  	JR	Z,GET12_2	;PROCESS THE KEYPRESS
                  1248  
06DD' FE32        1249  	CP	'2'		;CHECK FOR DOWN KEY
06DF' 2802        1250  	JR	Z,GET12_2	;PROCESS THE KEYPRESS
                  1251  
06E1' 18EE        1252  	JR	GET12_1		;Invalid key, keep waiting
                  1253  GET12_2:	
06E3' 328E0B'     1254  	LD	(MODE),A	;SAVE THE PLAYER MODE SELECTION
06E6' 5F          1255  	LD 	E,A	   	;ECHO THE KEY
06E7' CD0309'     1256  	CALL	PRINTCHR 	;  BACK TO CONSOLE
06EA' 11820B'     1257  	LD	DE,CRLF		;CRLF
06ED' CD0B09'     1258  	CALL	PRINTSTR	;DO SYSTEM CALL
06F0' CD0B09'     1259  	CALL	PRINTSTR	;DO SYSTEM CALL
06F3' C9          1260  	RET			;RETURN TO MAIN IF NEITHER
                  1261  
                  1262  GETDATA:
06F4' DB01        1263  	IN	A,CDATA		;GET THE CHARACTER
06F6' E67F        1264  	AND	7FH		;STRIP PARITY BIT
06F8' C9          1265  	RET			;RETURN IF NEITHER
                  1266  
                  1267  ;
                  1268  ;SUBROUTINE TO SAMPLE CONSOLE FOR CONTROL-CHARACTERS
                  1269  ;
                  1270  CONINP:	
06F9' 3A8F0B'     1271  	LD	A,(CNTRL)	;GET CONTROL MODE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0025
SNAKE FOR DAZZLER GRAPHICS

06FC' FE4B        1272  	CP	'K'
06FE' 205A        1273  	JR	NZ,JOYCHK
                  1274  
                  1275  ;KEYBOARD INPUT CHECK
0700' CDBC07'     1276  	CALL	CONSTAT		;GET CONSOLE STATUS (WAS THERE A KEY PRESSED IN THE INPUT BUFFER?)
0703' C8          1277  	RET	Z		;RETURN TO MAIN PROGRAM
0704' CDB307'     1278  	CALL	CONDATA		;CHECK THE CHARACTER
                  1279  
                  1280  	;PLAYER 1
0707' FE57        1281  	CP	UP1		;CHECK FOR UP KEY
0709' CACB07'     1282  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
070C' FE77        1283  	CP	UP1+20H		;Lower-Case?
070E' CAC907'     1284  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1285  		
0711' FE53        1286  	CP	DOWN1		;CHECK FOR DOWN KEY
0713' CACB07'     1287  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
0716' FE73        1288  	CP	DOWN1+20H	;Lower-Case?
0718' CAC907'     1289  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1290  
071B' FE41        1291  	CP	LEFT1		;CHECK FOR LEFT KEY
071D' CACB07'     1292  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
0720' FE61        1293  	CP	LEFT1+20H	;Lower-Case?
0722' CAC907'     1294  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1295  
0725' FE44        1296  	CP	RIGHT1		;CHECK FOR RIGHT KEY
0727' CACB07'     1297  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
072A' FE64        1298  	CP	RIGHT1+20H	;Lower-Case?
072C' CAC907'     1299  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1300  	
                  1301  	;PLAYER 2
072F' FE49        1302  	CP	UP2		;CHECK FOR UP KEY
0731' CAD107'     1303  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
0734' FE69        1304  	CP	UP2+20H		;Lower-Case?
0736' CACF07'     1305  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1306  		
0739' FE4B        1307  	CP	DOWN2		;CHECK FOR DOWN KEY
073B' CAD107'     1308  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
073E' FE6B        1309  	CP	DOWN2+20H	;Lower-Case?
0740' CACF07'     1310  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1311  
0743' FE4A        1312  	CP	LEFT2		;CHECK FOR LEFT KEY
0745' CAD107'     1313  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
0748' FE6A        1314  	CP	LEFT2+20H	;Lower-Case?
074A' CACF07'     1315  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1316  
074D' FE4C        1317  	CP	RIGHT2		;CHECK FOR RIGHT KEY
074F' CAD107'     1318  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
0752' FE6C        1319  	CP	RIGHT2+20H	;Lower-Case?
0754' CACF07'   R 1320  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1321  	
                  1322  	;OTHER KEYS
0757' FE50        1323  	CP	PSKEY		;CHECK FOR PAUSE KEY
0759' C0          1324  	RET	NZ		;RETURN TO MAIN IF NEITHER
                  1325  	
                  1326  JOYCHK:
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0026
SNAKE FOR DAZZLER GRAPHICS

                  1327  	;READ JOYSTICK 1
075A' 3AA10B'     1328  	LD	A,(AJ1UD)	;GET ADJUSTMENT
075D' 47          1329  	LD	B,A
075E' DB1A        1330  	IN	A,JOY1UD    	;READ JOY STICK UP/DOWN 
0760' 80          1331  	ADD	B		;ADJUST
0761' 47          1332  	LD	B,A
0762' 3AA20B'     1333  	LD	A,(AJ1RL)	;GET ADJUSTMENT
0765' 4F          1334  	LD	C,A
0766' DB19        1335  	IN	A,JOY1RL	;READ RIGHT/LEFT 
0768' 81          1336  	ADD	C		; ADJUST
0769' 4F          1337  	LD	C,A
076A' CDD507'     1338  	CALL	FDR1		;FIND DIRECTION
076D' A7          1339  	AND	A
076E' 2803        1340  	JR	Z,JC1_B		;NO CHANGE - CHECK BUTTONS
0770' 32920B'     1341  	LD	(NXDIR1),A	;CHANGE DIRECTION
                  1342  
                  1343  JC1_B:
                  1344  	;READ BUTTONS
0773' DB18        1345  	IN	A,JOYBTN	;READ IN THE BUTTONS
0775' CB47        1346  	BIT 	0,A        	;SEE IF BIT 0 IS SET (JS1 - BUTTON 4)
0777' 2848        1347  	JR	Z,DAZOFF 	;  IF SO, EXIT GAME
0779' CB5F        1348  	BIT	3,A		;SEE IF BIT 3 IS SET (JS1 - BUTTON 1)
077B' 2012        1349  	JR	NZ,JC2_2	;IF NOT CONTINUE WITH JOYSTICK 2	
                  1350  JC1_1:				;  IF SET, PAUSE THE GAME
077D' DB18        1351  	IN 	A,JOYBTN	;WAIT FOR BUTTON TO BE RELEASED
077F' CB5F        1352  	BIT	3,A		;CHECK BUTTON 1 NOW
0781' 28FA        1353  	JR	Z,JC1_1		;CONTINUE WAITING
                  1354  JC1_2:
0783' DB18        1355  	IN 	A,JOYBTN	;NOW WAIT FOR BUTTON TO BE PRESSED AGAIN
0785' CB5F        1356  	BIT	3,A		;CHECK BUTTON 1 NOW
0787' 20FA        1357  	JR	NZ,JC1_2	;CONTINUE WAITING
                  1358  JC1_3:
0789' DB18        1359  	IN 	A,JOYBTN	;AND RELEASED AGAIN...
078B' CB5F        1360  	BIT	3,A		;CHECK BUTTON 1 NOW
078D' 28FA        1361  	JR	Z,JC1_3		;CONTINUE WAITING
                  1362  
                  1363  JC2_2:
                  1364  	;READ JOYSTICK 2
078F' 3A8E0B'     1365  	LD	A,(MODE)	;GRAB THE GAME MODE
0792' FE32        1366  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0794' C0          1367  	RET	NZ		;  IF NOT, EXIT
                  1368  	
0795' 3AA30B'     1369  	LD	A,(AJ2UD)	;GET ADJUSTMENT
0798' 47          1370  	LD	B,A
0799' DB1C        1371  	IN	A,JOY2UD    	;READ JOY STICK UP/DOWN 
079B' 80          1372  	ADD	B		;ADJUST
079C' 47          1373  	LD	B,A
079D' 3AA40B'     1374  	LD	A,(AJ2RL)	;GET ADJUSTMENT
07A0' 4F          1375  	LD	C,A
07A1' DB1B        1376  	IN	A,JOY2RL	;READ RIGHT/LEFT 
07A3' 81          1377  	ADD	C		; ADJUST
07A4' 4F          1378  	LD	C,A
07A5' CD1508'     1379  	CALL	FDR2		;FIND DIRECTION
07A8' A7          1380  	AND	A
07A9' C8          1381  	RET	Z
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0027
SNAKE FOR DAZZLER GRAPHICS

                  1382  	;JR	Z,JC2_B		;NO CHANGE
07AA' 329A0B'     1383  	LD	(NXDIR2),A	;CHANGE DIRECTION
                  1384  ;JC2_B:
                  1385  	;READ BUTTONS		disabling player 2 buttons for now
                  1386  	;IN	A,JOYBTN	;READ IN THE BUTTONS
                  1387  	;BIT 	7,A        	;SEE IF BIT 0 IS SET (JS2 - BUTTON 4)
                  1388  	;JR	Z,DAZOFF 	;  IF SO, EXIT GAME
                  1389  	
07AD' C9          1390  	RET
                  1391  
                  1392  	
                  1393  CONLOOP:
07AE' CDBC07'     1394  	CALL	CONSTAT		;PAUSED, LOOP CHECKING 
07B1' 28FB        1395  	JR	Z,CONLOOP	;FOR ANOTHER CHARACTER
                  1396  CONDATA:
07B3' DB01        1397  	IN	A,CDATA		;GET THE CHARACTER
07B5' E67F        1398  	AND	7FH		;STRIP PARITY BIT
07B7' FE03        1399  	CP	CTRLC		;CHECK FOR CONTROL-C
07B9' 2806        1400  	JR	Z,DAZOFF	;EXIT IF TRUE
07BB' C9          1401  	RET			;RETURN IF NEITHER
                  1402  CONSTAT:
07BC' DB00        1403  	IN	A,CSTAT		;GET CONSOLE STATUS
07BE' E640        1404  	AND	RDA		;CHECK RDA BIT
07C0' C9          1405  	RET			;RETURN WITH Z FLAG
                  1406  DAZOFF:	
07C1' 3E07        1407  	LD	A,TOGDAZ	;SPECIAL CONTROL CHARACTER
07C3' CD0000#     1408  	CALL	CHAR		;  TO TURN OFF/ON DAZZLER
07C6' C30000      1409  	JP	WBOOT		;RETURN TO CDOS
                  1410  
                  1411  NXTPRLC1:
07C9' D620        1412  	SUB	A,20H		;CONVERT TO UPPER-CASE
                  1413  NXTPR1:
07CB' 32920B'     1414  	LD	(NXDIR1),A	;SAVE THE KEY PRESSED
07CE' C9          1415  	RET
                  1416  
                  1417  NXTPRLC2:
07CF' D620        1418  	SUB	A,20H		;CONVERT TO UPPER-CASE
                  1419  NXTPR2:
07D1' 329A0B'     1420  	LD	(NXDIR2),A	;SAVE THE KEY PRESSED
07D4' C9          1421  	RET
                  1422  
                  1423  ;FIND JOYSTICK DIRECTION - BORROWED FROM "GOTCHA"
                  1424  ;INPUT - B CONTAINS UP/DOWN
                  1425  ;        C CONTAINS RIGHT/LEFT 
                  1426  ;OUTPUT - A CONTAINS DIRECTION
                  1427  ;
07D5' 78          1428  FDR1:	LD	A,B	    	;GET UP/DOWN
07D6' A7          1429  	AND	A
07D7' FADF07'     1430  	JP	M,FDR301   	;DOWN
07DA' 1657        1431  	LD	D,UP1		;UPWARD
07DC' C3E307'   R 1432  	JP	FDR321
                  1433  ;
07DF' 1653        1434  FDR301:	LD	D,DOWN1		;DOWNWARD
07E1' 2F          1435  	CPL			;COMPLIMENT
07E2' 47          1436  	LD	B,A		;SAVE COMPLIMENT
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0028
SNAKE FOR DAZZLER GRAPHICS

07E3' FE40        1437  FDR321: CP	40H
07E5' D2EA07'   R 1438  	JP	NC,FDR331	;LARGE MOVEMENT
07E8' 1600        1439  	LD	D,0		; NO CHANGE
07EA' 79          1440  FDR331: LD	A,C		;GET RIGHT/LEFT
07EB' A7          1441  	AND	A
07EC' FAF407'     1442  	JP	M,FDR401	;LEFT
07EF' 1E44        1443  	LD	E,RIGHT1	;RIGHT
07F1' C3F807'   R 1444  	JP	FDR421
                  1445  ;
07F4' 1E41        1446  FDR401: LD	E,LEFT1		;LEFT
07F6' 2F          1447  	CPL			;COMPLIMENT
07F7' 4F          1448  	LD	C,A		;SAVE COMPLIMENT
07F8' FE40        1449  FDR421: CP	40H
07FA' D2FF07'   R 1450  	JP	NC,FDR431	;LARGE MOVEMENT
07FD' 1E00        1451  	LD	E,0		;NO CHANGE
07FF' 7A          1452  FDR431: LD	A,D
0800' 93          1453  	SUB	E
0801' C8          1454  	RET	Z		;NO CHANGE
0802' 7A          1455  	LD	A,D
0803' A7          1456  	AND	A
0804' CA1108'   R 1457  	JP	Z,FDR501	;MUST BE RIGHT/LEFT
0807' 7B          1458  	LD	A,E
0808' A7          1459  	AND	A
0809' CA1308'   R 1460  	JP	Z,FDR551	;MUST BE UP/DOWN
080C' 78          1461  	LD	A,B
080D' B9          1462  	CP	C
080E' DA1108'   R 1463  	JP	C,FDR501	;MUST BE RIGHT/LEFT
0811' 7B          1464  FDR501: LD	A,E 
0812' C9          1465  	RET
                  1466  ;
0813' 7A          1467  FDR551: LD	A, D
0814' C9          1468  	RET	
                  1469  	
                  1470  ;FIND JOYSTICK DIRECTION - PLAYER 2
                  1471  ;INPUT - B CONTAINS UP/DOWN
                  1472  ;        C CONTAINS RIGHT/LEFT 
                  1473  ;OUTPUT - A CONTAINS DIRECTION
                  1474  ;
0815' 78          1475  FDR2:	LD	A,B	    	;GET UP/DOWN
0816' A7          1476  	AND	A
0817' FA1F08'     1477  	JP	M,FDR302   	;DOWN
081A' 1649        1478  	LD	D,UP2		;UPWARD
081C' C32308'   R 1479  	JP	FDR322
                  1480  ;
081F' 164B        1481  FDR302:	LD	D,DOWN2		;DOWNWARD
0821' 2F          1482  	CPL			;COMPLIMENT
0822' 47          1483  	LD	B,A		;SAVE COMPLIMENT
0823' FE40        1484  FDR322: CP	40H
0825' D22A08'   R 1485  	JP	NC,FDR332	;LARGE MOVEMENT
0828' 1600        1486  	LD	D,0		; NO CHANGE
082A' 79          1487  FDR332: LD	A,C		;GET RIGHT/LEFT
082B' A7          1488  	AND	A
082C' FA3408'     1489  	JP	M,FDR402	;LEFT
082F' 1E4C        1490  	LD	E,RIGHT2	;RIGHT
0831' C33808'   R 1491  	JP	FDR422
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0029
SNAKE FOR DAZZLER GRAPHICS

                  1492  ;
0834' 1E4A        1493  FDR402: LD	E,LEFT2		;LEFT
0836' 2F          1494  	CPL			;COMPLIMENT
0837' 4F          1495  	LD	C,A		;SAVE COMPLIMENT
0838' FE40        1496  FDR422: CP	40H
083A' D23F08'   R 1497  	JP	NC,FDR432	;LARGE MOVEMENT
083D' 1E00        1498  	LD	E,0		;NO CHANGE
083F' 7A          1499  FDR432: LD	A,D
0840' 93          1500  	SUB	E
0841' C8          1501  	RET	Z		;NO CHANGE
0842' 7A          1502  	LD	A,D
0843' A7          1503  	AND	A
0844' CA5108'   R 1504  	JP	Z,FDR502	;MUST BE RIGHT/LEFT
0847' 7B          1505  	LD	A,E
0848' A7          1506  	AND	A
0849' CA5308'   R 1507  	JP	Z,FDR552	;MUST BE UP/DOWN
084C' 78          1508  	LD	A,B
084D' B9          1509  	CP	C
084E' DA5108'   R 1510  	JP	C,FDR502	;MUST BE RIGHT/LEFT
0851' 7B          1511  FDR502: LD	A,E 
0852' C9          1512  	RET
                  1513  ;
0853' 7A          1514  FDR552: LD	A, D
0854' C9          1515  	RET	
                  1516  	
                  1517  
                  1518  DELAY:
0855' 3A8B0B'     1519  	LD	A,(SPEED)
                  1520  DELAY1:
0858' F5          1521  	PUSH	AF
0859' CD6A08'     1522  	CALL	DELAY2		;Call Function if no borrow (BC <= HL after subtraction)
085C' CDF906'     1523  	CALL	CONINP		;Check for input
085F' F1          1524  	POP	AF
                  1525  
0860' D605        1526  	SUB	05H		;SUBTRACT
0862' FE00        1527  	CP	0		;see if its zero
0864' 20F2        1528  	JR	NZ,DELAY1	;loop
                  1529  	
0866' CD7808'     1530  	CALL	CHKNXT		;validate keyboard input
                  1531  	
0869' C9          1532  	RET			;exit loop
                  1533  	
                  1534  ;DELAY THE GAME LOOP FOR AN ADJUSTABLE AMOUNT OF TIME
                  1535  ;Based on Michael's answer at:
                  1536  ;https://stackoverflow.com/questions/29184900/z80-software-delay
                  1537  DELAY2:	
086A' F5          1538  	PUSH	AF
086B' C5          1539  	PUSH	BC
086C' 016400      1540  	LD	BC,100		; Load BC with the number of cycles for delay
086F' 00          1541  	NOP			; Optional NOP to align loop timing
                  1542  DL_LOOP:
0870' 0B          1543  	DEC	BC		; Decrement BC
0871' 78          1544  	LD	A, B		; Load A with high byte of BC
0872' B1          1545  	OR	C		; Logical OR A with low byte of BC
0873' 20FB        1546  	JR	NZ,DL_LOOP	; If BC is not zero, jump back to DELAY_LOOP
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0030
SNAKE FOR DAZZLER GRAPHICS

0875' F1          1547  	POP	AF
0876' C1          1548  	POP	BC
0877' C9          1549  	RET			; Return from the delay function
                  1550  
                  1551  ;ROUTINE TO VALIDATE THE INPUT THAT WAS CAPTURED DURING
                  1552  ;THE DELAY LOOP - WE ONLY PROCESS THIS ONCE AT THE END
                  1553  ;OF THE DELAY IN CASE MULTIPLE KEYS WERE PRESSED, WE
                  1554  ;ONLY LOOK AT THE LAST KEY PRESSED
                  1555  ;
                  1556  CHKNXT:
0878' 3A910B'     1557  	LD	A,(DIR1)	;Get the current direction
087B' 47          1558  	LD	B,A		;copy Current Direction to B	
087C' 3A920B'     1559  	LD	A,(NXDIR1)	;Get buffered next move to A
                  1560  	
087F' B8          1561  	CP	B
0880' 283C        1562  	JR	Z,CHKNXT2	;no change, check player 2 input
                  1563  
                  1564  ;PLAYER 1
                  1565  CHKNXT1U:
0882' FE57        1566  	CP	UP1		;was keypress up?
0884' 2009        1567  	JR	NZ,CHKNXT1D
                  1568  
0886' 4F          1569  	LD	C,A
0887' 78          1570  	LD	A,B
0888' FE53        1571  	CP	DOWN1		;was the previous direction down?
088A' 79          1572  	LD	A,C
                  1573  
088B' 2831        1574  	JR	Z,CHKNXT2	;it was, discard
088D' 1827        1575  	JR	CHKNXT1V
                  1576  
                  1577  CHKNXT1D:
088F' FE53        1578  	CP	DOWN1		;was keypress up?
0891' 2009        1579  	JR	NZ,CHKNXT1L
0893' 4F          1580  	LD	C,A
0894' 78          1581  	LD	A,B
0895' FE57        1582  	CP	UP1		;was the previous direction up?
0897' 79          1583  	LD	A,C
0898' 2824        1584  	JR	Z,CHKNXT2	;it was, discard
089A' 181A        1585  	JR	CHKNXT1V
                  1586  CHKNXT1L:
089C' FE41        1587  	CP	LEFT1		;was keypress left?
089E' 2009        1588  	JR	NZ,CHKNXT1R
08A0' 4F          1589  	LD	C,A
08A1' 78          1590  	LD	A,B
08A2' FE44        1591  	CP	RIGHT1		;was the previous direction right?
08A4' 79          1592  	LD	A,C
08A5' 2817        1593  	JR	Z,CHKNXT2	;it was, discard
08A7' 180D        1594  	JR	CHKNXT1V
                  1595  CHKNXT1R:
08A9' FE44        1596  	CP	RIGHT1		;was keypress right?
08AB' 2011        1597  	JR	NZ,CHKNXT2
08AD' 4F          1598  	LD	C,A
08AE' 78          1599  	LD	A,B
08AF' FE41        1600  	CP	LEFT1		;was the previous direction left?
08B1' 79          1601  	LD	A,C
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0031
SNAKE FOR DAZZLER GRAPHICS

08B2' 280A        1602  	JR	Z,CHKNXT2	;it was, discard
08B4' 1800        1603  	JR	CHKNXT1V
                  1604  CHKNXT1V:			;was a valid Move
08B6' 32910B'     1605  	LD	(DIR1),A	;save the move
08B9' 3E01        1606  	LD	A,STMOVE	;GET US MOVING
08BB' 32980B'     1607  	LD	(STAT1),A	;UPDATE STATUS
                  1608  	
                  1609  ;PLAYER 2
                  1610  CHKNXT2:
08BE' 3A8E0B'     1611  	LD	A,(MODE)	;GRAB THE GAME MODE
08C1' FE32        1612  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
08C3' C0          1613  	RET	NZ		;  IF NOT, SKIP THIS	
                  1614  	
08C4' 3A990B'     1615  	LD	A,(DIR2)	;Get the current direction
08C7' 47          1616  	LD	B,A		;copy Current Direction to B	
08C8' 3A9A0B'     1617  	LD	A,(NXDIR2)	;Get buffered next move to A
                  1618  	
08CB' B8          1619  	CP	B
08CC' C8          1620  	RET	Z		;no change, return
                  1621  	
                  1622  CHKNXT2U:
08CD' FE49        1623  	CP	UP2		;was keypress up?
08CF' 2008        1624  	JR	NZ,CHKNXT2D
08D1' 4F          1625  	LD	C,A
08D2' 78          1626  	LD	A,B
08D3' FE4B        1627  	CP	DOWN2		;was the previous direction down?
08D5' 79          1628  	LD	A,C
08D6' C8          1629  	RET	Z		;it was, discard
08D7' 1821        1630  	JR	CHKNXT2V
                  1631  CHKNXT2D:
08D9' FE4B        1632  	CP	DOWN2		;was keypress up?
08DB' 2008        1633  	JR	NZ,CHKNXT2L
08DD' 4F          1634  	LD	C,A
08DE' 78          1635  	LD	A,B
08DF' FE49        1636  	CP	UP2		;was the previous direction up?
08E1' 79          1637  	LD	A,C
08E2' C8          1638  	RET	Z		;it was, discard
08E3' 1815        1639  	JR	CHKNXT2V
                  1640  CHKNXT2L:
08E5' FE4A        1641  	CP	LEFT2		;was keypress left?
08E7' 2008        1642  	JR	NZ,CHKNXT2R
08E9' 4F          1643  	LD	C,A
08EA' 78          1644  	LD	A,B
08EB' FE4C        1645  	CP	RIGHT2		;was the previous direction right?
08ED' 79          1646  	LD	A,C
08EE' C8          1647  	RET	Z		;it was, discard
08EF' 1809        1648  	JR	CHKNXT2V
                  1649  CHKNXT2R:
08F1' FE4C        1650  	CP	RIGHT2		;was keypress right?
08F3' C0          1651  	RET	NZ
08F4' 4F          1652  	LD	C,A
08F5' 78          1653  	LD	A,B
08F6' FE4A        1654  	CP	LEFT2		;was the previous direction left?
08F8' 79          1655  	LD	A,C
08F9' C8          1656  	RET	Z		;it was, discard	
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0032
SNAKE FOR DAZZLER GRAPHICS

                  1657  CHKNXT2V:			;was a valid Move
08FA' 32990B'     1658  	LD	(DIR2),A	;save the move
08FD' 3E01        1659  	LD	A,STMOVE ;GET US MOVING
08FF' 32A00B'     1660  	LD	(STAT2),A	;UPDATE STATUS
0902' C9          1661  	RET
                  1662  	
                  1663  PRINTCHR:	;PRINT A SINGLE CHARACTER TO THE CONSOLE, put character in E before calling
0903' C5          1664  	PUSH	BC
0904' 0E02        1665  	LD	C,PNTCHR	;PRINT-CHARACTER
0906' CD0500      1666  	CALL	CDOS		;DO SYSTEM CALL
0909' C1          1667  	POP	BC
090A' C9          1668  	RET
                  1669  PRINTSTR:	;PRINT A $-terminated string to the console, put address of string in DE before calling
090B' C5          1670  	PUSH	BC
090C' 0E09        1671  	LD	C,PNTBUF	;PRINT-BUFFERED-LINE
090E' CD0500      1672  	CALL	CDOS		;DO SYSTEM CALL
0911' C1          1673  	POP	BC
0912' C9          1674  	RET
                  1675  
                  1676  PRINTBYTE:
0913' F5          1677  	PUSH 	AF
0914' C5          1678  	PUSH	BC
0915' D5          1679  	PUSH	DE
0916' 47          1680  	LD	B, A		; Copy byte value from A to B (to preserve A)
                  1681  
                  1682  	; Print high nibble (4 bits) as hexadecimal digit
0917' 78          1683  	LD	A, B		; Load byte value from B back into A
0918' E6F0        1684  	AND 	0F0H		; Mask out low nibble (keep high nibble)
091A' 0F          1685  	RRCA             	; Rotate right A (move high nibble to low nibble)
091B' 0F          1686  	RRCA             	; Rotate right A again
091C' 0F          1687  	RRCA            	; Rotate right A again (now high nibble is in low nibble)
091D' 0F          1688  	RRCA            	; Rotate right A once more to clear upper bits
091E' CD2B09'     1689  	CALL	PRINTHEX	; Call subroutine to print hexadecimal digit in A
                  1690  
                  1691  	; Print low nibble (4 bits) as hexadecimal digit
0921' 78          1692  	LD	A, B		; Reload byte value from B into A
0922' E60F        1693  	AND	00FH		; Mask out high nibble (keep low nibble)
0924' CD2B09'     1694  	CALL	PRINTHEX	; Call subroutine to print hexadecimal digit in A
                  1695  
0927' D1          1696  	POP	DE
0928' C1          1697  	POP	BC
0929' F1          1698  	POP	AF
092A' C9          1699  	RET		        ; Return from the routine
                  1700  
                  1701  PRINTHEX:
092B' C630        1702  	ADD	A, '0'		; Convert digit (0-9) to ASCII ('0'-'9' range)
092D' FE3A        1703  	CP	'9' + 1		; Compare with ASCII '9' + 1 (check if digit is 10 or higher)
092F' 3005        1704  	JR	NC, HEX_LETTER 	; If digit is 10 or higher, proceed to handle letters (A-F)
                  1705  
                  1706  	; Digit is in '0'-'9' range, directly print the character
0931' 5F          1707  	LD	E,A
0932' CD0309'     1708  	CALL	PRINTCHR	; Call subroutine to print character in A
0935' C9          1709  	RET			; Return from PRINT_HEX_DIGIT
                  1710  
                  1711  HEX_LETTER:
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0033
SNAKE FOR DAZZLER GRAPHICS

0936' C607        1712  	ADD	A, 'A'-('9'+1)  ; Convert digit (10-15) to ASCII ('A'-'F' range)
0938' 5F          1713  	LD	E,A
0939' CD0309'     1714  	CALL	PRINTCHR  	; Call subroutine to print character in A
093C' C9          1715  	RET              	; Return from PRINT_HEX_DIGIT
                  1716  	
                  1717  DISPBYTE:
093D' F5          1718  	PUSH 	AF
093E' C5          1719  	PUSH	BC
093F' D5          1720  	PUSH	DE
0940' 47          1721  	LD	B, A		; Copy byte value from A to B (to preserve A)
                  1722  
                  1723  	; Print high nibble (4 bits) as hexadecimal digit
0941' 78          1724  	LD	A, B		; Load byte value from B back into A
0942' E6F0        1725  	AND	0F0H		; Mask out low nibble (keep high nibble)
0944' 0F          1726  	RRCA			; Rotate right A (move high nibble to low nibble)
0945' 0F          1727  	RRCA			; Rotate right A again
0946' 0F          1728  	RRCA			; Rotate right A again (now high nibble is in low nibble)
0947' 0F          1729  	RRCA			; Rotate right A once more to clear upper bits
0948' CD5509'     1730  	CALL DISPHEX		; Call subroutine to print hexadecimal digit in A
                  1731  
                  1732  	; Print low nibble (4 bits) as hexadecimal digit
094B' 78          1733  	LD A, B			; Reload byte value from B into A
094C' E60F        1734  	AND 00FH		; Mask out high nibble (keep low nibble)
094E' CD5509'     1735  	CALL DISPHEX		; Call subroutine to print hexadecimal digit in A
                  1736  
0951' D1          1737  	POP	DE
0952' C1          1738  	POP	BC
0953' F1          1739  	POP	AF
0954' C9          1740  	RET              	; Return from the routine
                  1741  
                  1742  DISPHEX:
0955' C630        1743  	ADD	A, '0'		; Convert digit (0-9) to ASCII ('0'-'9' range)
0957' FE3A        1744  	CP	'9' + 1		; Compare with ASCII '9' + 1 (check if digit is 10 or higher)
0959' 3004        1745  	JR	NC, DISPLETR	; If digit is 10 or higher, proceed to handle letters (A-F)
                  1746  
                  1747  	; Digit is in '0'-'9' range, directly print the character
095B' CD0000#     1748  	CALL	CHAR		; Call subroutine to print character in A
095E' C9          1749  	RET              	; Return from PRINT_HEX_DIGIT
                  1750  
                  1751  DISPLETR:
095F' C607        1752  	ADD	A, 'A'-('9'+1)  ; Convert digit (10-15) to ASCII ('A'-'F' range)
0961' 7C          1753  	LD	A,H	
0962' C620        1754  	ADD	A,20H		;move the cursor
0964' 67          1755  	LD	H,A
0965' CD0000#     1756  	CALL	CURSOR
0968' CD0000#     1757  	CALL 	CHAR		; Call subroutine to print character in A
096B' C9          1758  	RET			; Return from PRINT_HEX_DIGIT
                  1759  
                  1760  ;AUDIO CODE BORROWED FROM "GOTCHA" GAME
                  1761  ;PLAY A SONG
096C' 217E09'     1762  SONG1:	LD	HL,SONP1P
096F' C38D09'   R 1763  	JP	NOTES
                  1764  
0972' 218309'     1765  SONG2:	LD	HL,SONP2P
0975' C38D09'   R 1766  	JP	NOTES
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0034
SNAKE FOR DAZZLER GRAPHICS

                  1767  
0978' 218809'     1768  SONG3:	LD	HL,SONDIE
097B' C38D09'   R 1769  	JP	NOTES
                  1770  
097E' 40          1771  SONP1P: DB	40H		;VOLUME
097F' 96          1772  	DB	150		;FREQ. PARM 
0980' 3200        1773  	DW	50		;DURATION
0982' 00          1774  	DB	0		;END OF TABLE
                  1775  
0983' 40          1776  SONP2P: DB	40H		;VOLUME
0984' C8          1777  	DB	200		;FREQ. PARM 
0985' 3200        1778  	DW	50		;DURATION
0987' 00          1779  	DB	0		;END OF TABLE
                  1780  
0988' 40          1781  SONDIE: DB	40H		;VOLUME
0989' FA          1782  	DB	250		;FREQ. PARM 
098A' 2800        1783  	DW	40		;DURATION
098C' 00          1784  	DB	0		;END OF TABLE
                  1785  
                  1786  ;
                  1787  ;NOTES
                  1788  ;THIS ROUTINE PLAYS THE NOTES POINTED TO BY HL. ;1ST BYTE = VOLUME
                  1789  ;2ND BYTE = FREG. PARM
                  1790  ;3RD BYTE = LOW BYTE OF DURATION
                  1791  ;4TH BYTE = HIGH BYTE OF DURATION
                  1792  ;
098D' 7E          1793  NOTES:	LD	A,(HL)		;GET VOLUME
098E' A7          1794  	AND	A
098F' C8          1795  	RET	Z		;END OF NOTES
0990' 47          1796  	LD	B,A		;MOVE VOLUME TO B
0991' 23          1797  	INC	HL
0992' 4E          1798  	LD	C,(HL)		;GET FREG. PARM
0993' 23          1799  	INC	HL
0994' 5E          1800  	LD	E,(HL)		;GET DURATION LOW
0995' 23          1801  	INC	HL
0996' 56          1802  	LD	D,(HL)		;GET DURATION HIGH
0997' 23          1803  	INC	HL
0998' CD9E09'     1804  	CALL	TONE		;OUTPUT TONE
099B' C38D09'   R 1805  	JP	NOTES
                  1806  ;
                  1807  ;TONE ROUTINE
                  1808  ;INPUT - B CONTAINS VOLUME
                  1809  ;        C CONTAINS FREG. PARM
                  1810  ;        DE CONTAINS DURATION
                  1811  ;
                  1812  TONE:
099E' 78          1813  TON200: LD	A,B		;GET VOLUME
099F' 2F          1814  	CPL			;COMPLIMENT
09A0' 47          1815  	LD	B,A		;SAVE VOLUME
09A1' D319        1816  	OUT	SPEAK1,A	;OUTPUT TO SPEAKERS
09A3' D31B        1817  	OUT	SPEAK2,A
09A5' 79          1818  	LD	A,C		;GET FREG. PARM
09A6' 3D          1819  TON300: DEC	A		;DEC COUNTER
09A7' C2A609'   R 1820  	JP	NZ,TON300	;WAIT LOOP
09AA' 1B          1821  	DEC	DE		;COUNT DOWN
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0035
SNAKE FOR DAZZLER GRAPHICS

09AB' 7A          1822  	LD	A,D
09AC' B3          1823  	OR	E
09AD' C29E09'   R 1824  	JP	NZ,TON200	;NOT THRU
09B0' C9          1825  	RET	
                  1826  
                  1827  ;
                  1828  ;INITIALIZE JOY STICKS
                  1829  ;
09B1' DB1A        1830  INTJOY: IN	A,JOY1UD	;GET UP/DOWN JOY STICK 1
09B3' 2F          1831  	CPL
09B4' 32A10B'     1832  	LD	(AJ1UD),A	;ADJUSTMENT
09B7' DB19        1833  	IN	A,JOY1RL	;GET RIGHT/LEFT JOY STICK
09B9' 2F          1834  	CPL
09BA' 32A20B'     1835  	LD	(AJ1RL),A	;ADJUSTMENT
09BD' DB1C        1836  	IN	A,JOY2UD	;GET UP/DOWN JOY STICK 2
09BF' 2F          1837  	CPL
09C0' 32A30B'     1838  	LD	(AJ2UD),A	;ADJUSTMENT
09C3' DB1B        1839  	IN	A,JOY2RL	;GET RIGHT/LEFT JOY STICK
09C5' 2F          1840  	CPL
09C6' 32A40B'     1841  	LD	(AJ2RL),A	;ADJUSTMENT
09C9' C9          1842  	RET
                  1843  
                  1844  ;based on Ion Random
                  1845  ;https://wikiti.brandonw.net/index.php?title=Z80_Routines:Math:Random
                  1846  ;-----> Generate a random number
                  1847  ; output a=answer 0<=a<=255
                  1848  ; all registers are preserved except: af
                  1849  ;Modified to retry in number 3<= || >=251 to place point inside field (not on wall)
                  1850  RANDOM:
09CA' E5          1851  	PUSH    HL
09CB' D5          1852  	PUSH    DE
                  1853  ANOTHER:		
09CC' 2A890B'     1854  	LD      HL,(RSEED)
09CF' ED5F        1855  	LD      A,R
09D1' 57          1856  	LD      D,A
09D2' 5E          1857  	LD      E,(HL)
09D3' 19          1858  	ADD     HL,DE
09D4' 85          1859  	ADD     A,L
09D5' AC          1860  	XOR     H
09D6' 22890B'     1861  	LD      (RSEED),HL
                  1862  	
09D9' FE03        1863  	CP	3
09DB' 38EF        1864  	JR	C, ANOTHER	;it was less than 1, generate another
09DD' FE3D        1865  	CP	61			
09DF' 3803        1866  	JR	C, GOODRAND	; A was less than than 251 (and >=4) so we are ok
09E1' C3CC09'   R 1867  	JP	ANOTHER 	; It was not less than, so must be >=251, generate another	
                  1868  GOODRAND:
09E4' CB27        1869  	SLA A			; Left shift A (A * 2)
09E6' CB27        1870  	SLA A			; Left shift A again (A * 2 * 2 = A * 4)
                  1871  	; A is now multiplied by 4
09E8' D1          1872  	POP	DE
09E9' E1          1873  	POP	HL
09EA' C9          1874  	RET
                  1875  		
                  1876  ;
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0036
SNAKE FOR DAZZLER GRAPHICS

                  1877  ;STRING DEFINITIONS
                  1878  ;
                  1879  ;SCREEN MESSAGES
09EB' 44415A5A    1880  DAZSTR:	DM	'DAZZLER'
09F2' 534E414B    1881  SNKSTR:	DM	'SNAKE'
09F7' 53544147    1882  STGSTR:	DM	'STAGE'
09FC' 12503120    1883  LV1STR:	DM	P1COLR,'P1 LIVES'
0A05' 15503220    1884  LV2STR:	DM	P2COLR,'P2 LIVES'
0A0E' 1147414D    1885  GOVSTR:	DM	RED,'GAME OVER :('
0A1B' 02427920    1886  BYARON:	DM	R128,'By Aron Hoekstra',R64
                  1887  
                  1888  ;CONSOLE MESSAGES
0A2D' 44415A5A    1889  INTRO:	DB	'DAZZLER SNAKE by Aron Hoekstra',CR,LF,'$'
0A4E' 484F5720    1890  INT12:	DB  	'HOW MANY PLAYERS? [1,2] $'
0A67' 4A4F5953    1891  INTJK:	DB  	'JOYSTICK OR KEYBOARD CONTROL? [J,K] $'
0A8C' 504C4159    1892  INTKB1: DB	'PLAYER 1 (GREEN) USES [W,A,S,D] FOR DIRECTION',CR,LF,'$'
0ABC' 504C4159    1893  INTKB2: DB	'PLAYER 2 (MAGNTA) USES [I,J,K,L] FOR DIRECTION',CR,LF,'$'
0AED' 5B505D20    1894  INTKB3:	DB	'[P] TO PAUSE, [CTRL+C] TO QUIT$'
0B0C' 55534520    1895  INTJS1:	DB	'USE JS-1 JOYSTICK(S) PLUGGED INTO D+7A FOR CONTROL',CR,LF,'$'
0B41' 5B425554    1896  INTJS2:	DB	'[BUTTON 1] TO PAUSE, [BUTTON 4] TO QUIT$'
0B69' 0D0A594F    1897  WONMSG:	DB	CR,LF,'YOU WON!!??! CONGRATS!$'
0B82' 0D0A24      1898  CRLF:	DB	CR,LF,'$'
                  1899  
                  1900  ;
                  1901  ;VARIABLE STORAGE AREA
                  1902  ;
0B85' (0001)      1903  MAXCD:	DEFS	1	;MAXC DISPLAY DESCRIPTOR
0B86' (0001)      1904  MAXRD:	DEFS	1	;MAXR DISPLAY DESCRIPTOR
                  1905  
                  1906  ;GAME VARIABLES
0B87' (0001)      1907  POINTX:	DEFS	1	;CURRENT POINT X POS
0B88' (0001)      1908  POINTY:	DEFS	1	;CURRENT POINT Y POS
0B89' (0002)      1909  RSEED:	DEFS	2	;RANDOM NUMBER GENERATOR SEED
0B8B' (0002)      1910  SPEED:	DEFS	2	;SPEED, for DELAY function, start at 6000, subtract 250 each stage for about 20 
0B8D' (0001)      1911  STAGE:	DEFS	1	;WHICH STAGE YOU'RE ON, 6000 / 250 = 24 STAGES
0B8E' (0001)      1912  MODE:	DEFS	1	;[1] OR [2] PLAYER GAME?
0B8F' (0001)      1913  CNTRL:	DEFS	1	;[J]oystick or [K]eyboard control?
0B90' (0001)      1914  POINT:	DEFS	1	;WHICH POINT YOU'RE ON, 10 POINTS PER STAGE
                  1915  
                  1916  ;SNAKE VARIABLES
0B91' (0001)      1917  DIR1:	DEFS	1	;CURRENT SNAKE DIRECTION
0B92' (0001)      1918  NXDIR1:	DEFS	1	;BUFFER FOR NEXT SNAKE DIRECTION
0B93' (0001)      1919  HEADX1:	DEFS    1	;CURRENT SNAKE HEAD X POS
0B94' (0001)      1920  HEADY1:	DEFS	1	;CURRENT SNAKE HEAD Y POS
0B95' (0001)      1921  SNKLN1:	DEFS	1	;CURRENT SNAKE LENGTH (how long the snake is supposed to be)
0B96' (0001)      1922  DSPLN1:	DEFS	1	;DISPLAYED SNAKE LENGTH (how long is it currently displayed)
0B97' (0001)      1923  LIVES1:	DEFS	1	;HOW MANY LIVES ARE LEFT?
0B98' (0001)      1924  STAT1:	DEFS	1	;STATUS PLAYER 1 MOVING OR WAIT
                  1925  
0B99' (0001)      1926  DIR2:	DEFS	1	;CURRENT SNAKE DIRECTION
0B9A' (0001)      1927  NXDIR2:	DEFS	1	;BUFFER FOR NEXT SNAKE DIRECTION
0B9B' (0001)      1928  HEADX2:	DEFS    1	;CURRENT SNAKE HEAD X POS
0B9C' (0001)      1929  HEADY2:	DEFS	1	;CURRENT SNAKE HEAD Y POS
0B9D' (0001)      1930  SNKLN2:	DEFS	1	;CURRENT SNAKE LENGTH (how long the snake is supposed to be)
0B9E' (0001)      1931  DSPLN2:	DEFS	1	;DISPLAYED SNAKE LENGTH (how long is it currently displayed)
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0037
SNAKE FOR DAZZLER GRAPHICS

0B9F' (0001)      1932  LIVES2:	DEFS	1	;HOW MANY LIVES ARE LEFT?
0BA0' (0001)      1933  STAT2:	DEFS	1	;STATUS PLAYER 2 MOVING OR WAIT
                  1934  
0BA1' (0001)      1935  AJ1UD:	DEFS	1	;ADJUSTMENT FOR JOY1UD
0BA2' (0001)      1936  AJ1RL:	DEFS	1	;ADJUSTMENT FOR JOY1RL
0BA3' (0001)      1937  AJ2UD:	DEFS	1	;ADJUSTMENT FOR JOY2UD
0BA4' (0001)      1938  AJ2RL:	DEFS	1	;ADJUSTMENT FOR JOY2RL
                  1939  
                  1940  ;	ORG 04000H
0BA5' (0100)      1941  BODYX1:	DS	256	;X BODY POSITIONS FOR PLAYER 1
0CA5' (0100)      1942  BODYY1:	DS	256	;Y BODY POSITIONS FOR PLAYER 1
0DA5' (0100)      1943  BODYX2:	DS	256	;X BODY POSITIONS FOR PLAYER 2
0EA5' (0100)      1944  BODYY2:	DS	256	;Y BODY POSITIONS FOR PLAYER 2
0FA5' (0100)      1945  TEMP:	DS	256	;BODY TEMP COPY AREA (It's not recommended to use LDIR if the memory addresses o
      (10A5')     1946  STACK:	EQU	$
10A5' (0000')     1947  	END	SNAKE

Errors		   0
Range Count	  52

Program Length	10A5 (4261)
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0038
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

AJ1RL      0BA2'  1936  1333 1835
AJ1UD      0BA1'  1935  1328 1832
AJ2RL      0BA4'  1938  1374 1841
AJ2UD      0BA3'  1937  1369 1838
ANIMAT   X 0000#  0011 
ANOTHER    09CC'  1853  1864 1867
AREA     X 0000#  0012  0992 0995 0998 1001
BEGIN      0051'  0137  0860
BLACK      0010   0016  0238 0304
BLUE       0014   0020 
BODYX1     0BA5'  1941  0169 0240 0248 0254 0395 0451 0688 0890
BODYX2     0DA5'  1943  0199 0306 0314 0319 0495 0582 0643 0937
BODYY1     0CA5'  1942  0174 0242 0259 0265 0405 0463 0703 0905
BODYY2     0EA5'  1944  0203 0308 0323 0328 0507 0592 0658 0952
BORDER     052A'  0982  1088 1116 1132 1142 1177 1187 1198
BP2MCD     02DE'  0526  0354 0441 0522
BP2SG      014F'  0279  0229 0269
BYARON     0A1B'  1886  1103
CB1_1_1    0271'  0446  0421 0426
CB1_1_2    0273'  0448  0480
CB1_1_3    0298'  0474  0460
CB1_1_4    02A4'  0482  0479
CB1_2_1    02AC'  0490 
CB1_2_2    02AE'  0492  0523
CB1_2_3    02D3'  0518  0504
CB2_1_1    03CF'  0681  0675
CB2_1_2    03D1'  0684  0720
CB2_1_3    03F6'  0715  0698
CB2_2_1    039C'  0636  0609 0615
CB2_2_2    039E'  0639  0676
CB2_2_3    03C3'  0670  0653
CDATA      0001   0058  1263 1397
CDOS       0005   0054  1666 1672
CHAR     X 0000#  0011  0135 0177 0206 0239 0305 0343 0532 0779 0792 0825 0838 0866 0871 0985 1013 1036 1053 1071 1092 1408
                        1748 1757
CHKNXT     0878'  1556  1530
CHKNXT1D   088F'  1577  1567
CHKNXT1L   089C'  1586  1579
CHKNXT1R   08A9'  1595  1588
CHKNXT1U   0882'  1565 
CHKNXT1V   08B6'  1604  1575 1585 1594 1603
CHKNXT2    08BE'  1610  1562 1574 1584 1593 1597 1602
CHKNXT2D   08D9'  1631  1624
CHKNXT2L   08E5'  1640  1633
CHKNXT2R   08F1'  1649  1642
CHKNXT2U   08CD'  1622 
CHKNXT2V   08FA'  1657  1630 1639 1648
CNTRL      0B8F'  1913  0107 1228 1271
CONDATA    07B3'  1396  1278
CONINP     06F9'  1270  1107 1133 1178 1199 1523
CONLOOP    07AE'  1393  1395
CONSTAT    07BC'  1402  1210 1242 1276 1394
CR         000D   0052  1889 1892 1893 1895 1897 1898
CRASH1     0401'  0723  0472
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0039
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

CRASH2     0404'  0727  0516
CRASH3     0407'  0731  0668
CRASH4     040A'  0735  0713
CRLF       0B82'  1898  1231 1257
CSTAT      0000   0057  1403
CTRLC      0003   0076  1399
CURSOR   X 0000#  0011  0178 0207 0244 0310 0389 0577 0972 0989 1011 1018 1034 1041 1056 1069 1076 1090 1097 1102 1118 1123
                        1146 1151 1162 1167 1190 1756
CYAN       0016   0022 
CYCLE    X 0000#  0012  1106 1129
DAZOFF     07C1'  1406  1347 1400
DAZSTR     09EB'  1880  1093
DELAY      0855'  1518  0224
DELAY1     0858'  1520  1528
DELAY2     086A'  1537  1522
DIED1      0427'  0765  0358 0365 0372 0379 0726 0730
DIED2      045C'  0811  0547 0554 0561 0568 0734 0738
DIR1       0B91'  1917  0182 0345 1557 1605
DIR2       0B99'  1926  0211 0533 1615 1658
DISPBYTE   093D'  1717  1127 1154 1170
DISPHEX    0955'  1742  1730 1735
DISPLETR   095F'  1751  1745
DISP_INT   05CC'  1086  0151
DISP_LIV   062E'  1140  0807 0854
DISP_OVE   067A'  1185  0859
DISP_STA   0602'  1114  0152 0761
DL_LOOP    0870'  1542  1546
DOT      X 0000#  0011  0179 0208 0245 0311 0390 0578 0973 1019 1042 1077
DOWN1      0053   0080  0348 1286 1288 1434 1571 1578
DOWN2      004B   0085  0536 1307 1309 1481 1627 1632
DRAW       00F2'  0223  0293 0485 0530 0542 0631 0719
DRAWLIVE   0556'  1004  0217
DRAWPOIN   0597'  1049  0218 0440 0630
DSLV2      066B'  1172  1159
DSPLN1     0B96'  1922  0164 0234 0273 0275 0392 0475 0716 0918
DSPLN2     0B9E'  1931  0195 0300 0336 0338 0519 0579 0671 0965
EP2I       00EC'  0216  0191
EP2SG      01BB'  0340  0283 0294 0332
FDR1       07D5'  1428  1338
FDR2       0815'  1475  1379
FDR301     07DF'  1434  1430
FDR302     081F'  1481  1477
FDR321     07E3'  1437  1432
FDR322     0823'  1484  1479
FDR331     07EA'  1440  1438
FDR332     082A'  1487  1485
FDR401     07F4'  1446  1442
FDR402     0834'  1493  1489
FDR421     07F8'  1449  1444
FDR422     0838'  1496  1491
FDR431     07FF'  1452  1450
FDR432     083F'  1499  1497
FDR501     0811'  1464  1457 1463
FDR502     0851'  1511  1504 1510
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0040
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

FDR551     0813'  1467  1460
FDR552     0853'  1514  1507
FINMV1     0213'  0382  0361 0368 0375
FINMV2     033E'  0571  0550 0557 0564
FIVE       0032   0047 
FL_LOOP1   0429'  0767  0795
FL_LOOP2   045E'  0813  0842
FOUR       0028   0046  1194
GAMEOVER   0491'  0858  0801 0848
GET12      06CB'  1238  0105
GET12_1    06D1'  1241  1243 1252
GET12_2    06E3'  1253  1247 1250
GETDATA    06F4'  1262  1212 1244
GETJK      069B'  1206  0104
GETJK1     06A1'  1209  1211 1224
GETJK2     06BD'  1227  1215 1220
GETJKLC    06BB'  1225  1217 1222
GOODRAND   09E4'  1868  1866
GOVSTR     0A0E'  1885  1191
GREEN      0012   0018  0025
GROWSNK1   0148'  0271  0237
GROWSNK2   01B4'  0334  0303
HALF       0005   0043 
HEADX1     0B93'  1919  0168 0370 0374 0377 0381 0384 0417 0449 0493
HEADX2     0B9B'  1928  0198 0559 0563 0566 0570 0573 0604 0640 0685
HEADY1     0B94'  1920  0173 0356 0360 0363 0367 0386 0422 0461 0505
HEADY2     0B9C'  1929  0202 0545 0549 0552 0556 0575 0611 0655 0700
HEX_LETT   0936'  1711  1704
INITG    X 0000#  0011  0132
INT12      0A4E'  1890  1239
INTJK      0A67'  1891  1207
INTJOY     09B1'  1830  0126
INTJS1     0B0C'  1895  0127
INTJS2     0B41'  1896  0129
INTKB1     0A8C'  1892  0111
INTKB2     0ABC'  1893  0117
INTKB3     0AED'  1894  0121
INTLVS     0005   0036  0141
INTRO      0A2D'  1889  0097
JC1_1      077D'  1350  1353
JC1_2      0783'  1354  1357
JC1_3      0789'  1358  1361
JC1_B      0773'  1343  1340
JC2_2      078F'  1363  1349
JOY1RL     0019   0064  1335 1833
JOY1UD     001A   0063  1330 1830
JOY2RL     001B   0066  1376 1839
JOY2UD     001C   0065  1371 1836
JOYBTN     0018   0067  1345 1351 1355 1359
JOYCHK     075A'  1326  1273
LEFT1      0041   0081  0350 1291 1293 1446 1587 1600
LEFT2      004A   0086  0538 1312 1314 1493 1641 1654
LF         000A   0053  1889 1892 1893 1895 1897 1898
LINE     X 0000#  0011  1059
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0041
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

LIVES1     0B97'  1923  0142 0797 0799 1006 1153
LIVES2     0B9F'  1932  0143 0844 0846 1029 1169
LV1STR     09FC'  1883  1147
LV2STR     0A05'  1884  1163
LV_LOOP1   0566'  1014  1022
LV_LOOP2   0589'  1037  1045
MAGNTA     0015   0021  0026
MAXC       0001   0031 
MAXCD      0B85'  1903  0133
MAXR       0000   0030 
MAXRD      0B86'  1904 
MODE       0B8E'  1912  0114 0189 0281 0483 0528 0927 1025 1157 1254 1365 1611
MVDOWN1    01E6'  0362  0349
MVDOWN2    0311'  0551  0537
MVLEFT1    01F6'  0369  0351
MVLEFT2    0321'  0558  0539
MVRIGHT1   0206'  0376  0353
MVRIGHT2   0331'  0565  0541
MVUP1      01D6'  0355  0347
MVUP2      0301'  0544  0535
NEWPOINT   04A5'  0869  0158 0439 0629
NEXTSTAG   040D'  0740  0431 0620
NOTES      098D'  1793  1763 1766 1769 1805
NP2        04AA'  0872  0915 0962
NPCP1_1    04B8'  0883 
NPCP1_2    04BA'  0886  0922
NPCP1_3    04DF'  0917  0900
NPCP2_1    04EA'  0925  0921
NPCP2_2    04F3'  0933  0969
NPCP2_3    0518'  0964  0947
NPFIN      0523'  0971  0929 0968
NXDIR1     0B92'  1918  0183 1341 1414 1559
NXDIR2     0B9A'  1927  0212 1383 1420 1617
NXTPR1     07CB'  1413  1282 1287 1292 1297
NXTPR2     07D1'  1419  1303 1308 1313 1318
NXTPRLC1   07C9'  1411  1284 1289 1294 1299
NXTPRLC2   07CF'  1417  1305 1310 1315 1320
ONE        000A   0044 
P1COLR     0012   0025  0176 0342 1012 1883
P2COLR     0015   0026  0205 0531 1035 1884
P2MVG      0168'  0296  0288
PAGE     X 0000#  0011  0983 1087 1115 1131 1141 1176 1186 1197
PAUSE    X 0000#  0012  1174 1195
PIXEL      0004   0075  0359 0366 0373 0380 0548 0555 0562 0569
PNTBUF     0009   0059  1671
PNTCHR     0002   0060  1665
POINT      0B90'  1914  0139 0429 0433 0618 0622 0743 0805 0852 1061
POINTX     0B87'  1907  0419 0607 0874 0887 0934
POINTY     0B88'  1908  0424 0613 0878 0902 0949
PRINTBYT   0913'  1676 
PRINTCHR   0903'  1663  1230 1256 1708 1714
PRINTHEX   092B'  1701  1689 1694
PRINTSTR   090B'  1669  0098 0112 0118 0122 0128 0130 0864 1208 1232 1240 1258 1259
PSKEY      0050   0077  1323
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0042
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

PTCOLR     0011   0027  0870 1070
PT_LOOP    05BE'  1072  1080
QUARTR     0002   0042 
R128       0002   0032  1886
R64        0003   0033  0134 0791 0837 1886
R64BW      0004   0034  0778 0824
RANDOM     09CA'  1850  0166 0171 0196 0200 0873 0877
RDA        0040   0056  1404
RED        0011   0017  0027 1885
RIGHT1     0044   0082  0352 1296 1298 1443 1591 1596
RIGHT2     004C   0087  0540 1317 1319 1490 1645 1650
RSEED      0B89'  1909  0145 0147 1854 1861
SEC.       000A   0040  0041 0042 0043 0044 0045 0046 0047 0048
SNAKE      0000'  0095  1947
SNAKE_1    0037'  0125  0109
SNAKE_2    0046'  0131  0116 0124
SNAKE_K    002F'  0120 
SNKLN1     0B95'  1921  0162 0232 0436 0438
SNKLN2     0B9D'  1930  0193 0298 0625 0627
SNKSTR     09F2'  1881  1098
SONDIE     0988'  1781  1768
SONG1      096C'  1762  0428
SONG2      0972'  1765  0617
SONG3      0978'  1768  0773 0786 0819 0832
SONP1P     097E'  1771  1762
SONP2P     0983'  1776  1765
SPEAK1     0019   0069  1816
SPEAK2     001B   0070  1817
SPEED      0B8B'  1910  0150 0755 0759 1519
STACK      10A5'  1946  0096 0100
STAGE      0B8D'  1911  0140 0745 0747 1125
START      0076'  0157  0763 0809 0856
STAT1      0B98'  1924  0185 0227 0291 1607
STAT2      0BA0'  1933  0214 0285 1660
STGSTR     09F7'  1882  1119
STMOVE     0001   0090  0228 0286 0292 1606 1659
STRING   X 0000#  0012  1094 1099 1104 1120 1148 1164 1192
STWAIT     0000   0089  0184 0213
TEMP       0FA5'  1945  0249 0253 0260 0264 0315 0318 0324 0327
TEN        0064   0048 
TENTH      0001   0041 
TOGDAZ     0007   0061  0865 1407
TON200     099E'  1813  1824
TON300     09A6'  1819  1820
TONE       099E'  1812  1804
TWO        0014   0045  1173
UP1        0057   0079  0346 1281 1283 1431 1566 1582
UP2        0049   0084  0534 1302 1304 1478 1623 1636
WBOOT      0000   0055  0867 1409
WHITE      0017   0023  0984 1052 1091
WONGAME    0497'  0862 
WONMSG     0B69'  1897  0863
YELLOW     0013   0019 
