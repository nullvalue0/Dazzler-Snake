CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0001
*** SNAKE *** 

                  0001  ;	DAZZLER SNAKE FOR THE CROMEMCO DAZZLER
                  0002  ;	2024 Aron Hoekstra aka nullvalue
                  0003  ;	nullvalue@gmail.com
                  0004  ;	Version 1.1
                  0005  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0002
SNAKE FOR DAZZLER GRAPHICS

                  0007  	NAME	SNAKE
                  0008  ;
                  0009  ;	DEFINITION OF GRAPHICS PACKAGE ENTRY POINTS
                  0010  ;
                  0011  	EXTRN	INITG,PAGE,CURSOR,DOT,LINE,CHAR,ANIMAT
                  0012  	EXTRN	CYCLE,PAUSE,AREA,STRING
                  0013  ;
                  0014  ;	DEFINITION OF STANDARD COLORS, RESOLUTIONS, AND TIMES FOR PAUSE
                  0015  ;
      (0000)      0016  CPM:	EQU	0		;CONDITIONAL ASSEMBLY TO BUILD FOR CDOS OR CP/M. 
                  0017  				;  CPM=0 BUILD FOR CDOS
                  0018  				;  CPM=1 BUILD FOR CPM
                  0019  
      (0010)      0020  BLACK:	EQU	10H
      (0011)      0021  RED:	EQU	11H
      (0012)      0022  GREEN:	EQU	12H
      (0013)      0023  YELLOW:	EQU	13H
      (0014)      0024  BLUE:	EQU	14H
      (0015)      0025  MAGNTA:	EQU	15H
      (0016)      0026  CYAN:	EQU	16H
      (0017)      0027  WHITE:	EQU	17H
                  0028  
      (0012)      0029  P1COLR:	EQU	GREEN
      (0015)      0030  P2COLR:	EQU	MAGNTA
      (0011)      0031  PTCOLR:	EQU	RED
                  0032  
                  0033  ;	
      (0000)      0034  MAXR:	EQU	0		;MAXIMUM RESOLUTION
      (0001)      0035  MAXC:	EQU	1		;MAXIMUM COLOR CHOICE
      (0002)      0036  R128:	EQU	2		;128 x 128 RESOLUTION
      (0003)      0037  R64:	EQU	3		;64 x 64 COLOR RESOLUTION
      (0004)      0038  R64BW:	EQU	4		;64 x 64 B/W RESOLUTION
                  0039  
      (0005)      0040  INTLVS:	EQU	5		;START WITH 5 LIVES
                  0041  ;	
                  0042  ;	(THE	 FOLLOWING ASSUME THE 4MHZ. CPU CLOCK)
                  0043  ;	
      (000A)      0044  SEC.:	EQU	10		;10 * 0.1SEC. = 1SEC.
      (0001)      0045  TENTH:	EQU	SEC./10		;TENTH-SECOND PAUSE
      (0002)      0046  QUARTR:	EQU	SEC./4		;QUARTER-SECOND PAUSE
      (0005)      0047  HALF:	EQU	SEC./2		;HALF-SECOND PAUSE
      (000A)      0048  ONE:	EQU	1*SEC.		;ONE SECOND PAUSE
      (0014)      0049  TWO:	EQU	2*SEC.		;TWO SECONDS PAUSE
      (0028)      0050  FOUR:	EQU	4*SEC.		;TWO SECONDS PAUSE
      (0032)      0051  FIVE:	EQU	5*SEC.		;FIVE SECONDS PAUSE
      (0064)      0052  TEN:	EQU	10*SEC.		;TEN SECONDS PAUSE
                  0053  ;
                  0054  ;	SOME OTHER REQUIRED VALUES
                  0055  ;
      (000D)      0056  CR:	EQU	0DH		;CARRIAGE RETURN
      (000A)      0057  LF:	EQU	0AH		;LINE FEED
      (0005)      0058  CDOS:	EQU	5		;SYSTEM CALL LOCATION
      (0000)      0059  WBOOT:	EQU	0		;WARM BOOT LOCATION
      (0040)      0060  RDA:	EQU	40H		;RECEIVER-DATA-AVAILABLE
                  0061  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0003
SNAKE FOR DAZZLER GRAPHICS

      (0000)      0062  CSTATP:	EQU	0		;CONSOLE STATUS PORT (FOR CDOS BUILD)
      (0001)      0063  CDATAP:	EQU	1		;CONSOLE DATA PORT (FOR CDOS BUILD)
      (000B)      0064  CSTATB:	EQU	11		;BDOS CALL TO TEST FOR CONSOLE CHAR READY (FOR CP/M BUILD)
      (0006)      0065  CDATAB:	EQU	6		;BDOS CALL TO GET CONSOLE CHAR DATA BYTE (FOR CP/M BUILD)
                  0066  
      (0009)      0067  PNTBUF:	EQU	9		;PRINT BUFFERED LINE
      (0002)      0068  PNTCHR:	EQU	2		;PRINT BUFFERED LINE
      (0007)      0069  TOGDAZ:	EQU	7		;TOGGLE DAZZLER OFF/ON
                  0070  
      (001A)      0071  JOY1UD:	EQU	1AH		;JOY STICK PORT - 1 UP/DOWN
      (0019)      0072  JOY1RL:	EQU	19H		;JOY STICK PORT - 1 RIGHT/LEFT
      (001C)      0073  JOY2UD:	EQU	1CH		;JOY STICK PORT - 2 UP/DOWN
      (001B)      0074  JOY2RL:	EQU	1BH		;JOY STICK PORT - 2 RIGHT/LEFT
      (0018)      0075  JOYBTN:	EQU	18H		;JOY STICK BUTTONS
                  0076  
      (0019)      0077  SPEAK1:	EQU	19H		;SPEAKER 1
      (001B)      0078  SPEAK2:	EQU	1BH		;SPEAKER 2
                  0079  
                  0080  ;	
                  0081  ;	GAME VALUES	
                  0082  ;	
      (0004)      0083  PIXEL:  EQU	4		;PIXEL WIDTH IN 64x64 is 4 pixels since the library expects coords in 0-
      (0003)      0084  CTRLC:	EQU	3H		;CONTROL-C KEY CODE
      (0050)      0085  PSKEY:	EQU	50H		;"P" KEY CODE
                  0086  
      (0057)      0087  UP1:	EQU	57H		;"W" KEY CODE
      (0053)      0088  DOWN1:	EQU	53H		;"A" KEY CODE
      (0041)      0089  LEFT1:	EQU	41H		;"S" KEY CODE
      (0044)      0090  RIGHT1:	EQU	44H		;"D" KEY CODE
                  0091  
      (0049)      0092  UP2:	EQU	49H		;"I" KEY CODE
      (004B)      0093  DOWN2:	EQU	4BH		;"K" KEY CODE
      (004A)      0094  LEFT2:	EQU	4AH		;"J" KEY CODE
      (004C)      0095  RIGHT2:	EQU	4CH		;"L" KEY CODE
                  0096  
      (0000)      0097  STWAIT:	EQU	0		;WAITING FOR FIRST KEYPRESS
      (0001)      0098  STMOVE:	EQU	1		;RUNNING
                  0099  
                  0100  ;
                  0101  ;	THE PROGRAM BEGINS HERE
                  0102  ;
                  0103  SNAKE:	
0000' 31A410'     0104  	LD	SP,STACK	;SET STACK POINTER
0003' 112C0A'     0105  	LD	DE,INTRO	;POINT TO SIGN-ON MESSAGE
0006' CD0A09'     0106  	CALL	PRINTSTR	;DO SYSTEM CALL
                  0107  
0009' 31A410'     0108  	LD	SP,STACK	;DO IT AGAIN FOR SAFETY
000C' 210000      0109  	LD	HL,0		;TELLS INITG TO LOCATE PICTURE
                  0110  				;  BUFFER AT TOP OF CDOS USER AREA
                  0111  
000F' CD9B06'     0112  	CALL	GETJK		;GET JOYSTICK OR KEYBOARD CONTROL?
0012' CDCB06'     0113  	CALL	GET12		;GET 1 OR 2 PLAYERS
                  0114  	
0015' 3A8E0B'     0115  	LD	A,(CNTRL)	;GET CONTROL MODE
0018' FE4B        0116  	CP	'K'
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0004
SNAKE FOR DAZZLER GRAPHICS

001A' 201B        0117  	JR	NZ,SNAKE_1	
                  0118  
001C' 118B0A'     0119  	LD	DE,INTKB1	;IF KEYBOARD, 
001F' CD0A09'     0120  	CALL	PRINTSTR	;  DISPLAY HELP MESG
                  0121  	
0022' 3A8D0B'     0122  	LD	A,(MODE)
0025' FE32        0123  	CP	'2'
0027' 201D        0124  	JR	NZ,SNAKE_2	;IF 2 PLAYER,
0029' 11BB0A'     0125  	LD	DE,INTKB2	;  DISPLAY THEIR KEYS
002C' CD0A09'     0126  	CALL	PRINTSTR
                  0127  
                  0128  SNAKE_K:
002F' 11EC0A'     0129  	LD	DE,INTKB3	;DISPLAY SYSTEM KEYS
0032' CD0A09'     0130  	CALL	PRINTSTR
                  0131  
0035' 180F        0132  	JR	SNAKE_2
                  0133  SNAKE_1:
0037' CDB009'     0134  	CALL	INTJOY		;IF JOYSTICK, INIT 
003A' 110B0B'     0135  	LD	DE,INTJS1	;  JOY STICKS AND
003D' CD0A09'     0136  	CALL	PRINTSTR	;  DISPLAY HELP MSG
0040' 11400B'     0137  	LD	DE,INTJS2	;  AND SYSTEM BUTTONS
0043' CD0A09'     0138  	CALL	PRINTSTR	;  
                  0139  SNAKE_2:
0046' CD0000#     0140  	CALL	INITG		;INITIALIZE THE GRAPHICS PACKAGE
0049' 22840B'     0141  	LD	(MAXCD),HL	;STORE DISPLAY PARAMS. FOR FUTURE USE
004C' 3E03        0142  	LD	A,R64		;SET SCREEN FOR COLOR
004E' CD0000#     0143  	CALL	CHAR		;  64 x 64 MODE
                  0144  
                  0145  BEGIN:		
0051' 3E00        0146  	LD	A,0
0053' 328F0B'     0147  	LD	(POINT),A	;RESET THE POINT
0056' 328C0B'     0148  	LD	(STAGE),A	;RESET THE STAGE
0059' 3E05        0149  	LD	A,INTLVS	;SET INITIAL LIVES TO 5
005B' 32960B'     0150  	LD	(LIVES1),A
005E' 329E0B'     0151  	LD	(LIVES2),A
0061' 3E56        0152  	LD	A,56H
0063' 32880B'     0153  	LD	(RSEED),A 	;SET A RANDOM SEED low byte
0066' 3E4F        0154  	LD	A,4FH
0068' 32890B'     0155  	LD	(RSEED+1),A 	;SET A RANDOM SEED high byte
                  0156  	;LD	A,0FFH		;SET INITIAL SPEED 255
006B' 3EFA        0157  	LD	A,0FAH		;SET INITIAL SPEED 250
006D' 328A0B'     0158  	LD	(SPEED),A
0070' CDCC05'     0159  	CALL	DISP_INTRO	;FLASH "DAZZLER SNAKE"
0073' CD0206'     0160  	CALL	DISP_STAGE	;FLASH THE CURRENT STAGE
                  0161  
                  0162  ;
                  0163  ; DRAW THE PLAYING FIELD
                  0164  ;
                  0165  START:	
0076' CDA504'     0166  	CALL	NEWPOINT	;GENERATE A RANDOM X,Y FOR THE NEXT POINT & DISPLAY IT
                  0167  
                  0168  ; Begin Player 1 Init
0079' 3E04        0169  	LD	A,4		;SET INITIAL SNAKE LENGTH
007B' 32940B'     0170  	LD	(SNKLN1),A
007E' 3E01        0171  	LD	A,1		;SET INITIAL SNAKE DISPLAY LENGTH
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0005
SNAKE FOR DAZZLER GRAPHICS

0080' 32950B'     0172  	LD	(DSPLN1),A
                  0173  
0083' CDC909'     0174  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
0086' 67          0175  	LD	H,A		;SET X = RANDOM
0087' 32920B'     0176  	LD	(HEADX1),A	;SET INITIAL SNAKE X POS
008A' 32A40B'     0177  	LD	(BODYX1),A	;PUT SNAKE'S INITIAL HEAD X POSITION IN THE BODY ARRAY
                  0178  
008D' CDC909'     0179  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
0090' 6F          0180  	LD	L,A		;SET Y = RANDOM
0091' 32930B'     0181  	LD	(HEADY1),A	;SET INITIAL SNAKE Y POS
0094' 32A40C'     0182  	LD	(BODYY1),A	;PUT SNAKE'S INITIAL HEAD Y POSITION IN THE BODY ARRAY
                  0183  
0097' 3E12        0184  	LD	A,P1COLR	;DRAW THE SNAKE GREEN
0099' CD0000#     0185  	CALL	CHAR
009C' CD0000#     0186  	CALL	CURSOR		;MOVE CURSOR THERE
009F' CD0000#     0187  	CALL	DOT		;DRAW THE HEAD
                  0188  
00A2' 3E00        0189  	LD	A,0		;CLEAR THE INITIAL
00A4' 32900B'     0190  	LD	(DIR1),A	;  MOVING DIRECTION
00A7' 32910B'     0191  	LD	(NXDIR1),A	;  MOVING DIRECTION
00AA' 3E00        0192  	LD	A,STWAIT
00AC' 32970B'     0193  	LD	(STAT1),A	;LOAD THE NEW STAGE & WAIT FOR KEYPRESS TO START
                  0194  ; End Player 1 Init
                  0195  
                  0196  ; Begin Player 2 Init
00AF' 3A8D0B'     0197  	LD	A,(MODE)	;GRAB THE GAME MODE
00B2' FE32        0198  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
00B4' 2036        0199  	JR	NZ,EP2I		;IF NOT, SKIP THIS
00B6' 3E04        0200  	LD	A,4		;SET INITIAL SNAKE LENGTH
00B8' 329C0B'     0201  	LD	(SNKLN2),A
00BB' 3E01        0202  	LD	A,1		;SET INITIAL SNAKE DISPLAY LENGTH
00BD' 329D0B'     0203  	LD	(DSPLN2),A
00C0' CDC909'     0204  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
00C3' 67          0205  	LD	H,A		;SET X = RANDOM
00C4' 329A0B'     0206  	LD	(HEADX2),A	;SET INITIAL SNAKE X POS
00C7' 32A40D'     0207  	LD	(BODYX2),A	;PUT SNAKE'S INITIAL HEAD X POSITION IN THE BODY ARRAY
00CA' CDC909'     0208  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
00CD' 6F          0209  	LD	L,A		;SET Y = RANDOM
00CE' 329B0B'     0210  	LD	(HEADY2),A	;SET INITIAL SNAKE Y POS
00D1' 32A40E'     0211  	LD	(BODYY2),A	;PUT SNAKE'S INITIAL HEAD Y POSITION IN THE BODY ARRAY
                  0212  	
00D4' 3E15        0213  	LD	A,P2COLR	;DRAW THE SNAKE GREEN
00D6' CD0000#     0214  	CALL	CHAR
00D9' CD0000#     0215  	CALL	CURSOR		;MOVE CURSOR THERE
00DC' CD0000#     0216  	CALL	DOT		;DRAW THE HEAD
                  0217  
00DF' 3E00        0218  	LD	A,0		;CLEAR THE INITIAL
00E1' 32980B'     0219  	LD	(DIR2),A	;  MOVING DIRECTION
00E4' 32990B'     0220  	LD	(NXDIR2),A	;  MOVING DIRECTION
00E7' 3E00        0221  	LD	A,STWAIT
00E9' 329F0B'     0222  	LD	(STAT2),A	;LOAD THE NEW STAGE & WAIT FOR KEYPRESS TO START
                  0223  ; End Player 2 Init
                  0224  EP2I:
00EC' CD5605'     0225  	CALL	DRAWLIVES
00EF' CD9705'     0226  	CALL	DRAWPOINTS
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0006
SNAKE FOR DAZZLER GRAPHICS

                  0227  
                  0228  ;
                  0229  ; MAIN GAME LOOP
                  0230  ;
                  0231  DRAW:
00F2' CD5408'     0232  	CALL	DELAY		;DELAY & CHECK FOR CONTROL-CHARACTERS
                  0233  	
                  0234  ; Begin Player 1 Snake Grow
00F5' 3A970B'     0235  	LD	A,(STAT1)	;CHECK TO SEE IF
00F8' FE01        0236  	CP	STMOVE		;  WE'RE MOVING YET
00FA' 2053        0237  	JR	NZ,BP2SG	;NO? WAIT FOR A KEYPRESS
                  0238  	
                  0239  	;FIRST, SEE IF I NEED TO ERASE THE TAIL?	
00FC' 3A940B'     0240  	LD	A,(SNKLN1)	;grab the current snake length
00FF' 47          0241  	LD	B,A		;put it in B for comparison
0100' 3A950B'     0242  	LD	A,(DSPLN1)	;grab the currently displayed snake length
                  0243  	;IF SNKLN < DSPLN
0103' B8          0244  	CP	B
0104' 3842        0245  	JR	C,GROWSNK1	;if Display Length was < Snake Length
0106' 3E10        0246  	LD	A,BLACK		;change color to BLACK
0108' CD0000#     0247  	CALL	CHAR
010B' 3AA40B'     0248  	LD	A,(BODYX1)
010E' 67          0249  	LD	H,A		;SET X = A
010F' 3AA40C'     0250  	LD	A,(BODYY1)
0112' 6F          0251  	LD	L,A
0113' CD0000#     0252  	CALL 	CURSOR		;move the cursor to tail position
0116' CD0000#     0253  	CALL	DOT			;erase the tail
                  0254  	
                  0255  	;NOW SHIFT THE BODY X DATA IN MEMORY 1 BYTE TO THE LEFT
0119' 21A50B'     0256  	LD	HL,BODYX1+1	; Load source address into HL
011C' 11A40F'     0257  	LD	DE,TEMP		; Load destination address into DE
011F' 01FE00      0258  	LD	BC,0FEH		; Load byte count into BC
0122' EDB0        0259  	LDIR
                  0260  
0124' 21A40F'     0261  	LD	HL,TEMP		; Load source address into HL
0127' 11A40B'     0262  	LD	DE,BODYX1	; Load destination address into DE
012A' 01FF00      0263  	LD	BC,0FFH		; Load byte count into BC
012D' EDB0        0264  	LDIR
                  0265  
                  0266  	;DO THE SAME FOR BODY Y
012F' 21A50C'     0267  	LD	HL,BODYY1+1	; Load source address into HL
0132' 11A40F'     0268  	LD	DE,TEMP		; Load destination address into DE
0135' 01FE00      0269  	LD	BC,0FEH		; Load byte count into BC
0138' EDB0        0270  	LDIR
                  0271  
013A' 21A40F'     0272  	LD	HL,TEMP		; Load source address into HL
013D' 11A40C'     0273  	LD	DE,BODYY1	; Load destination address into DE
0140' 01FF00      0274  	LD	BC,0FFH		; Load byte count into BC
0143' EDB0        0275  	LDIR
                  0276  	
0145' C34F01'   R 0277  	JP BP2SG
                  0278  
                  0279  GROWSNK1:
                  0280  	;IF THE DSPLN < SNLKLEN THEN INCREMENT DSPLN
0148' 3A950B'     0281  	LD	A,(DSPLN1)	;grab the currently displayed snake length
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0007
SNAKE FOR DAZZLER GRAPHICS

014B' 3C          0282  	INC	A		;increment it one A->current display len
014C' 32950B'     0283  	LD	(DSPLN1),A ;save
                  0284  	
                  0285  ; End Player 1 Snake Grow
                  0286  
                  0287  BP2SG:	
                  0288  ; Begin Player 2 Snake Grow
014F' 3A8D0B'     0289  	LD	A,(MODE)	;GRAB THE GAME MODE
0152' FE32        0290  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0154' 2065        0291  	JR	NZ,EP2SG	;  IF NOT, SKIP THIS
                  0292  
0156' 3A9F0B'     0293  	LD	A,(STAT2)	;CHECK TO SEE IF
0159' FE01        0294  	CP	STMOVE		;  WE'RE MOVING YET
                  0295  	;JR	NZ,DRAW		;NO? WAIT FOR A KEYPRESS TODO: need to fix this
015B' 280B        0296  	JR	Z,P2MVG		; P2 is MOVING
                  0297  	
                  0298  	;if neither are moving yet, jump back to DRAW
015D' 3A970B'     0299  	LD	A,(STAT1)	;CHECK TO SEE IF
0160' FE01        0300  	CP	STMOVE		;  WE'RE MOVING YET
0162' C2F200'   R 0301  	JP	NZ,DRAW		;NO? WAIT FOR A KEYPRESS
0165' C3BB01'   R 0302  	JP	EP2SG
                  0303  	
                  0304  P2MVG:
                  0305  	;FIRST, SEE IF I NEED TO ERASE THE TAIL?	
0168' 3A9C0B'     0306  	LD	A,(SNKLN2)	;grab the current snake length
016B' 47          0307  	LD	B,A		;put it in B for comparison
016C' 3A9D0B'     0308  	LD	A,(DSPLN2)	;grab the currently displayed snake length
                  0309  	;IF SNKLN < DSPLN
016F' B8          0310  	CP	B
0170' 3842        0311  	JR	C,GROWSNK2	;if Display Length was < Snake Length
0172' 3E10        0312  	LD	A,BLACK		;change color to BLACK
0174' CD0000#     0313  	CALL	CHAR
0177' 3AA40D'     0314  	LD	A,(BODYX2)
017A' 67          0315  	LD	H,A		;SET X = A
017B' 3AA40E'     0316  	LD	A,(BODYY2)
017E' 6F          0317  	LD	L,A
017F' CD0000#     0318  	CALL 	CURSOR		;move the cursor to tail position
0182' CD0000#     0319  	CALL	DOT		;erase the tail
                  0320  	
                  0321  	;NOW SHIFT THE BODY X DATA IN MEMORY 1 BYTE TO THE LEFT
0185' 21A50D'     0322  	LD	HL,BODYX2+1	;Load source address into HL
0188' 11A40F'     0323  	LD	DE,TEMP		;Load destination address into DE
018B' 01FE00      0324  	LD	BC,0FEH		;Load byte count into BC
018E' EDB0        0325  	LDIR
0190' 21A40F'     0326  	LD	HL,TEMP		;Load source address into HL
0193' 11A40D'     0327  	LD	DE,BODYX2	;Load destination address into DE
0196' 01FF00      0328  	LD	BC,0FFH		;Load byte count into BC
0199' EDB0        0329  	LDIR
                  0330  	;DO THE SAME FOR BODY Y
019B' 21A50E'     0331  	LD	HL,BODYY2+1	;Load source address into HL
019E' 11A40F'     0332  	LD	DE,TEMP		;Load destination address into DE
01A1' 01FE00      0333  	LD	BC,0FEH		;Load byte count into BC
01A4' EDB0        0334  	LDIR
01A6' 21A40F'     0335  	LD	HL,TEMP		;Load source address into HL
01A9' 11A40E'     0336  	LD	DE,BODYY2	;Load destination address into DE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0008
SNAKE FOR DAZZLER GRAPHICS

01AC' 01FF00      0337  	LD	BC,0FFH		;Load byte count into BC
01AF' EDB0        0338  	LDIR
                  0339  	
01B1' C3BB01'   R 0340  	JP EP2SG
                  0341  
                  0342  GROWSNK2:
                  0343  	;IF THE DSPLN < SNLKLEN THEN INCREMENT DSPLN
01B4' 3A9D0B'     0344  	LD	A,(DSPLN2)	;grab the currently displayed snake length
01B7' 3C          0345  	INC	A		;increment it one A->current display len
01B8' 329D0B'     0346  	LD	(DSPLN2),A	;save
                  0347  ; End Player 2 Snake Grow
                  0348  EP2SG:
                  0349  ; Begin Player 1 Movement & Collision Detection
01BB' 3E12        0350  	LD A,	P1COLR		;change color to GREEN for snake
01BD' CD0000#     0351  	CALL	CHAR
                  0352  
01C0' 3A900B'     0353  	LD	A,(DIR1)	;WHICH DIRECTION ARE WE MOVING?
01C3' FE57        0354  	CP	UP1		;MOVING UP?
01C5' 280F        0355  	JR	Z,MVUP1		;DRAW THE NEXT PIXEL
01C7' FE53        0356  	CP	DOWN1		;MOVING DOWN?
01C9' 281B        0357  	JR	Z,MVDOWN1	;DRAW THE NEXT PIXEL
01CB' FE41        0358  	CP	LEFT1		;MOVING LEFT?
01CD' 2827        0359  	JR	Z,MVLEFT1	;DRAW THE NEXT PIXEL
01CF' FE44        0360  	CP	RIGHT1		;MOVING RIGHT?
01D1' 2833        0361  	JR	Z,MVRIGHT1	;DRAW THE NEXT PIXEL
01D3' C3DE02'     0362  	JP	BP2MCD		;PLAYER 1 must not be moving, check player 2
                  0363  MVUP1:
01D6' 3A930B'     0364  	LD	A,(HEADY1)
01D9' FEF0        0365  	CP	240
01DB' CA2704'     0366  	JP	Z,DIED1		;GAME OVER, HIT TOP OF FIELD
01DE' C604        0367  	ADD	A,PIXEL
01E0' 32930B'     0368  	LD	(HEADY1),A
01E3' C31302'   R 0369  	JP	FINMV1
                  0370  MVDOWN1:
01E6' 3A930B'     0371  	LD	A,(HEADY1)
01E9' FE0C        0372  	CP	12
01EB' CA2704'     0373  	JP	Z,DIED1		;GAME OVER, HIT BOTTOM OF FIELD
01EE' D604        0374  	SUB	A,PIXEL
01F0' 32930B'     0375  	LD	(HEADY1),A
01F3' C31302'   R 0376  	JP	FINMV1
                  0377  MVLEFT1:
01F6' 3A920B'     0378  	LD	A,(HEADX1)
01F9' FE0C        0379  	CP	12
01FB' CA2704'     0380  	JP	Z,DIED1		;GAME OVER, HIT LEFT OF FIELD
01FE' D604        0381  	SUB	A,PIXEL
0200' 32920B'     0382  	LD	(HEADX1),A
0203' C31302'   R 0383  	JP	FINMV1
                  0384  MVRIGHT1:
0206' 3A920B'     0385  	LD	A,(HEADX1)
0209' FEF0        0386  	CP	240
020B' CA2704'     0387  	JP	Z,DIED1		;GAME OVER, HIT RIGHT OF FIELD
020E' C604        0388  	ADD	A,PIXEL
0210' 32920B'     0389  	LD	(HEADX1),A
                  0390  FINMV1:
                  0391  	;put the new coords at the end of the body	
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0009
SNAKE FOR DAZZLER GRAPHICS

0213' 3A920B'     0392  	LD 	A,(HEADX1)
0216' 67          0393  	LD	H,A		;SET X = A
0217' 3A930B'     0394  	LD	A,(HEADY1)
021A' 6F          0395  	LD	L,A
                  0396  	
021B' CD0000#     0397  	CALL 	CURSOR		;move the cursor to tail position
021E' CD0000#     0398  	CALL 	DOT		;DRAW LINE TO (HEADX,HEADY)
                  0399  
0221' 3A950B'     0400  	LD	A,(DSPLN1)	;grab the currently displayed snake length
0224' 3D          0401  	DEC	A		;remove 1
0225' F5          0402  	PUSH	AF		;save this offset value for later
0226' 11A40B'     0403  	LD	DE,BODYX1	;grab the address of bodyx
0229' 83          0404  	ADD	A,E		;add the offset
022A' 5F          0405  	LD	E,A
022B' 7A          0406  	LD	A,D
022C' CE00        0407  	ADC	A,0
022E' 57          0408  	LD	D,A
022F' 7C          0409  	LD	A,H		;Put X in the accumulator
0230' 12          0410  	LD	(DE),A		;save the new X position to the offset address
                  0411  
0231' F1          0412  	POP	AF		;grab the offset again
0232' 11A40C'     0413  	LD	DE,BODYY1	;grab the address of bodyx
0235' 83          0414  	ADD	A,E		;add the offset	
0236' 5F          0415  	LD	E,A
0237' 7A          0416  	LD	A,D
0238' CE00        0417  	ADC	A,0
023A' 57          0418  	LD	D,A
023B' 7D          0419  	LD	A,L		;Put Y in the accumulator
023C' 12          0420  	LD	(DE),A		;save the new Y position to the offset address
                  0421  
                  0422  ;
                  0423  ; COLLISION DETECTION - PLAYER 1 WITH POINT
                  0424  ;
023D' 3A920B'     0425  	LD	A,(HEADX1)	;Need to compare HEADX = POINTX
0240' 47          0426  	LD	B,A		;Move HEADX to B for comparison
0241' 3A860B'     0427  	LD	A,(POINTX)	;Grab the POINT X
0244' B8          0428  	CP	B		;COMPARE A(POINTX)=B(HEADX)
0245' 202A        0429  	JR	NZ,CB1_1_1	;IF not match, go to next step
0247' 3A930B'     0430  	LD	A,(HEADY1)	;Need to compare HEADY = POINTY
024A' 47          0431  	LD	B,A		;Move HEADY to B for comparison
024B' 3A870B'     0432  	LD	A,(POINTY)	;Grab the POINT Y
024E' B8          0433  	CP	B		;COMPARE A(POINTY)=B(HEADY)
024F' 2020        0434  	JR	NZ,CB1_1_1	;IF not match, go to next step
                  0435  	; HIT THE POINT
0251' CD6B09'     0436  	CALL	SONG1		;Play a tone
0254' 3A8F0B'     0437  	LD	A,(POINT)	;grab the current point
0257' FE09        0438  	CP	9		;see if we're on point 10 (0-based)
0259' CA0D04'     0439  	JP	Z,NEXTSTAGE	;  if so advance to next stage
025C' 3C          0440  	INC	A		;else increment the point
025D' 328F0B'     0441  	LD	(POINT),A	;save the new point
                  0442  	
                  0443  				; INCREASE THE SNAKE SIZE
0260' 3A940B'     0444  	LD	A,(SNKLN1)	; GRAB THE CURRENT LENGTH
0263' C60A        0445  	ADD	A,10 		; INCREASE THE SNAKE SIZE BY 10
0265' 32940B'     0446  	LD	(SNKLN1),A	; SAVE IT BACK
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0010
SNAKE FOR DAZZLER GRAPHICS

0268' CDA504'     0447  	CALL	NEWPOINT	; DRAW THE NEXT POINT
026B' CD9705'     0448  	CALL	DRAWPOINTS
026E' C3DE02'   R 0449  	JP	BP2MCD
                  0450  
                  0451  ;
                  0452  ; COLLISION DETECTION - PLAYER 1 WITH SELF
                  0453  ;
                  0454  CB1_1_1:
0271' 0E00        0455  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0456  CB1_1_2:
0273' 3A920B'     0457  	LD	A,(HEADX1)	;Need to compare HEADX = POINTX
0276' 47          0458  	LD	B,A		;Move HEADX to B for comparison
0277' 11A40B'     0459  	LD	DE,BODYX1	;grab the address of bodyx
027A' 79          0460  	LD	A,C
027B' 83          0461  	ADD	A,E		;add the offset
027C' 5F          0462  	LD	E,A
027D' 7A          0463  	LD	A,D
027E' CE00        0464  	ADC	A,0
0280' 57          0465  	LD	D,A
0281' 1A          0466  	LD	A,(DE)		;grab the X from the address offset
0282' B8          0467  	CP	B		;COMPARE A(BODYX)=B(HEADX)
0283' 2013        0468  	JR	NZ,CB1_1_3 	;IF not match, go to next step
0285' 3A930B'     0469  	LD	A,(HEADY1)	;Need to compare HEADY = POINTY
0288' 47          0470  	LD	B,A		;Move HEADY to B for comparison
0289' 11A40C'     0471  	LD	DE,BODYY1	;grab the address of body Y 
028C' 79          0472  	LD	A,C
028D' 83          0473  	ADD	A,E		;add the offset
028E' 5F          0474  	LD	E,A
028F' 7A          0475  	LD	A,D
0290' CE00        0476  	ADC	A,0
0292' 57          0477  	LD	D,A
0293' 1A          0478  	LD	A,(DE)		;grab the Y from the address offset
0294' B8          0479  	CP	B		;COMPARE A(BODYY)=B(HEADY)
0295' CA0104'     0480  	JP	Z,CRASH1	;IF MATCH, SNAKE HIT ITSELF
                  0481  	
                  0482  CB1_1_3:
0298' 3A950B'     0483  	LD	A,(DSPLN1)	;GET THE SNAKE'S DISPLAYED LENGTH
029B' 3D          0484  	DEC	A		;DON'T NEED TO COMPARE THE LAST ENTRY (HEAD)
029C' 0C          0485  	INC	C
029D' B9          0486  	CP	C
029E' CAA402'   R 0487  	JP	Z,CB1_1_4	;WAS DRAW - IF WE HIT THE DISP LEN, KEEP LOOKING
02A1' C37302'   R 0488  	JP 	CB1_1_2		;ELSE, we're good - continue game loop	
                  0489  ; End Player 1 Movement & Collision Detection
                  0490  CB1_1_4:
02A4' 3A8D0B'     0491  	LD	A,(MODE)	;GRAB THE GAME MODE
02A7' FE32        0492  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
02A9' C2F200'     0493  	JP	NZ,DRAW		;  IF NOT, SKIP THIS
                  0494  
                  0495  ;
                  0496  ; COLLISION DETECTION - PLAYER 1 WITH PLAYER 2
                  0497  ;
                  0498  CB1_2_1:
02AC' 0E00        0499  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER	
                  0500  CB1_2_2:
02AE' 3A920B'     0501  	LD	A,(HEADX1)	;Need to compare HEADX = POINTX
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0011
SNAKE FOR DAZZLER GRAPHICS

02B1' 47          0502  	LD	B,A		;Move HEADX to B for comparison
02B2' 11A40D'     0503  	LD	DE,BODYX2	;grab the address of bodyx
02B5' 79          0504  	LD	A,C
02B6' 83          0505  	ADD	A,E		;add the offset
02B7' 5F          0506  	LD	E,A
02B8' 7A          0507  	LD	A,D
02B9' CE00        0508  	ADC	A,0
02BB' 57          0509  	LD	D,A
02BC' 1A          0510  	LD	A,(DE)		;grab the X from the address offset
02BD' B8          0511  	CP	B		;COMPARE A(BODYX)=B(HEADX)
02BE' 2013        0512  	JR	NZ,CB1_2_3	;IF not match, go to next step
02C0' 3A930B'     0513  	LD	A,(HEADY1)	;Need to compare HEADY = POINTY
02C3' 47          0514  	LD	B,A		;Move HEADY to B for comparison
02C4' 11A40E'     0515  	LD	DE,BODYY2	;grab the address of body Y 
02C7' 79          0516  	LD	A,C
02C8' 83          0517  	ADD	A,E		;add the offset
02C9' 5F          0518  	LD	E,A
02CA' 7A          0519  	LD	A,D
02CB' CE00        0520  	ADC	A,0
02CD' 57          0521  	LD	D,A
02CE' 1A          0522  	LD	A,(DE)		;grab the Y from the address offset
02CF' B8          0523  	CP	B		;COMPARE A(BODYY)=B(HEADY)
02D0' CA0404'     0524  	JP	Z,CRASH2	;IF MATCH, SNAKE HIT ITSELF
                  0525  	
                  0526  CB1_2_3:
02D3' 3A9D0B'     0527  	LD	A,(DSPLN2)	;GET THE SNAKE'S DISPLAYED LENGTH
02D6' 0C          0528  	INC	C
02D7' B9          0529  	CP	C
02D8' CADE02'   R 0530  	JP	Z,BP2MCD	;WAS DRAW - IF WE HIT THE DISP LEN, KEEP LOOKING
02DB' C3AE02'   R 0531  	JP 	CB1_2_2		;ELSE, we're good - continue game loop	
                  0532  ; End Player 1 Movement & Collision Detection
                  0533  
                  0534  BP2MCD:
                  0535  ;Begin Player 2 Movement & Collision Detection
02DE' 3A8D0B'     0536  	LD	A,(MODE)	;GRAB THE GAME MODE
02E1' FE32        0537  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
02E3' C2F200'     0538  	JP	NZ,DRAW		;  IF NOT, SKIP THIS
02E6' 3E15        0539  	LD A,	P2COLR		;change color to MAGNTA for snake 2
02E8' CD0000#     0540  	CALL	CHAR
02EB' 3A980B'     0541  	LD	A,(DIR2)	;WHICH DIRECTION ARE WE MOVING?
02EE' FE49        0542  	CP	UP2		;MOVING UP?
02F0' 280F        0543  	JR	Z,MVUP2		;DRAW THE NEXT PIXEL
02F2' FE4B        0544  	CP	DOWN2		;MOVING DOWN?
02F4' 281B        0545  	JR	Z,MVDOWN2	;DRAW THE NEXT PIXEL
02F6' FE4A        0546  	CP	LEFT2		;MOVING LEFT?
02F8' 2827        0547  	JR	Z,MVLEFT2	;DRAW THE NEXT PIXEL
02FA' FE4C        0548  	CP	RIGHT2		;MOVING RIGHT?
02FC' 2833        0549  	JR	Z,MVRIGHT2	;DRAW THE NEXT PIXEL
02FE' C3F200'     0550  	JP	DRAW		;Player 2 must not be moving
                  0551  	
                  0552  MVUP2:
0301' 3A9B0B'     0553  	LD	A,(HEADY2)
0304' FEF0        0554  	CP	240
0306' CA5C04'     0555  	JP	Z,DIED2		;GAME OVER, HIT TOP OF FIELD
0309' C604        0556  	ADD	A,PIXEL
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0012
SNAKE FOR DAZZLER GRAPHICS

030B' 329B0B'     0557  	LD	(HEADY2),A
030E' C33E03'   R 0558  	JP	FINMV2
                  0559  MVDOWN2:
0311' 3A9B0B'     0560  	LD	A,(HEADY2)
0314' FE0C        0561  	CP	12
0316' CA5C04'     0562  	JP	Z,DIED2		;GAME OVER, HIT BOTTOM OF FIELD
0319' D604        0563  	SUB	A,PIXEL
031B' 329B0B'     0564  	LD	(HEADY2),A
031E' C33E03'   R 0565  	JP	FINMV2
                  0566  MVLEFT2:
0321' 3A9A0B'     0567  	LD	A,(HEADX2)
0324' FE0C        0568  	CP	12
0326' CA5C04'     0569  	JP	Z,DIED2		;GAME OVER, HIT LEFT OF FIELD
0329' D604        0570  	SUB	A,PIXEL
032B' 329A0B'     0571  	LD	(HEADX2),A
032E' C33E03'   R 0572  	JP	FINMV2
                  0573  MVRIGHT2:
0331' 3A9A0B'     0574  	LD	A,(HEADX2)
0334' FEF0        0575  	CP	240
0336' CA5C04'     0576  	JP	Z,DIED2		;GAME OVER, HIT RIGHT OF FIELD
0339' C604        0577  	ADD	A,PIXEL
033B' 329A0B'     0578  	LD	(HEADX2),A
                  0579  FINMV2:
                  0580  	;put the new coords at the end of the body	
033E' 3A9A0B'     0581  	LD 	A,(HEADX2)
0341' 67          0582  	LD	H,A		;SET X = A
0342' 3A9B0B'     0583  	LD	A,(HEADY2)
0345' 6F          0584  	LD	L,A
0346' CD0000#     0585  	CALL 	CURSOR		;move the cursor to tail position
0349' CD0000#     0586  	CALL 	DOT		;DRAW LINE TO (HEADX,HEADY)
034C' 3A9D0B'     0587  	LD	A,(DSPLN2)	;grab the currently displayed snake length
034F' 3D          0588  	DEC	A		;remove 1
0350' F5          0589  	PUSH	AF		;save this offset value for later
0351' 11A40D'     0590  	LD	DE,BODYX2	;grab the address of bodyx
0354' 83          0591  	ADD	A,E		;add the offset
0355' 5F          0592  	LD	E,A
0356' 7A          0593  	LD	A,D
0357' CE00        0594  	ADC	A,0
0359' 57          0595  	LD	D,A
035A' 7C          0596  	LD	A,H		;Put X in the accumulator
035B' 12          0597  	LD	(DE),A		;save the new X position to the offset address
                  0598  
035C' F1          0599  	POP	AF		;grab the offset again
035D' 11A40E'     0600  	LD	DE,BODYY2	;grab the address of bodyx
0360' 83          0601  	ADD	A,E		;add the offset	
0361' 5F          0602  	LD	E,A
0362' 7A          0603  	LD	A,D
0363' CE00        0604  	ADC	A,0
0365' 57          0605  	LD	D,A
0366' 7D          0606  	LD	A,L		;Put Y in the accumulator
0367' 12          0607  	LD	(DE),A		;save the new Y position to the offset address
                  0608  
                  0609  	;
                  0610  	; COLLISION DETECTION - PLAYER 2 WITH POINT
                  0611  	;
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0013
SNAKE FOR DAZZLER GRAPHICS

0368' 3A9A0B'     0612  	LD	A,(HEADX2)	;Need to compare HEADX = POINTX
036B' 47          0613  	LD	B,A		;Move HEADX to B for comparison
                  0614  
036C' 3A860B'     0615  	LD	A,(POINTX)	;Grab the POINT X
036F' B8          0616  	CP	B		;COMPARE A(POINTX)=B(HEADX)
0370' 202A        0617  	JR	NZ,CB2_2_1	;IF not match, go to next step
                  0618  
0372' 3A9B0B'     0619  	LD	A,(HEADY2)	;Need to compare HEADY = POINTY
0375' 47          0620  	LD	B,A		;Move HEADY to B for comparison
0376' 3A870B'     0621  	LD	A,(POINTY)	;Grab the POINT Y
0379' B8          0622  	CP	B		;COMPARE A(POINTY)=B(HEADY)
037A' 2020        0623  	JR	NZ,CB2_2_1	;IF not match, go to next step
                  0624  	; HIT THE POINT
037C' CD7109'     0625  	CALL	SONG2		;Play a tone
037F' 3A8F0B'     0626  	LD	A,(POINT)	;grab the current point
0382' FE09        0627  	CP	9		;see if we're on point 10 (0-based)
0384' CA0D04'     0628  	JP	Z,NEXTSTAGE	;  if so advance to next stage
0387' 3C          0629  	INC	A		;else increment the point
0388' 328F0B'     0630  	LD	(POINT),A	;save the new point
                  0631  
                  0632  	; INCREASE THE SNAKE SIZE
038B' 3A9C0B'     0633  	LD	A,(SNKLN2)	; GRAB THE CURRENT LENGTH
038E' C60A        0634  	ADD	A,10 		; INCREASE THE SNAKE SIZE BY 10
0390' 329C0B'     0635  	LD	(SNKLN2),A	; SAVE IT BACK
                  0636  
0393' CDA504'     0637  	CALL	NEWPOINT	; DRAW THE NEXT POINT
0396' CD9705'     0638  	CALL	DRAWPOINTS
0399' C3F200'     0639  	JP	DRAW
                  0640  
                  0641  	;
                  0642  	; COLLISION DETECTION - PLAYER 2 WITH SELF
                  0643  	;
                  0644  CB2_2_1:
039C' 0E00        0645  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0646  	
                  0647  CB2_2_2:
039E' 3A9A0B'     0648  	LD	A,(HEADX2)	;Need to compare HEADX = POINTX
03A1' 47          0649  	LD	B,A			;Move HEADX to B for comparison
                  0650  
03A2' 11A40D'     0651  	LD	DE,BODYX2	;grab the address of bodyx
03A5' 79          0652  	LD	A,C
03A6' 83          0653  	ADD	A,E		;add the offset
03A7' 5F          0654  	LD	E,A
03A8' 7A          0655  	LD	A,D
03A9' CE00        0656  	ADC	A,0
03AB' 57          0657  	LD	D,A
03AC' 1A          0658  	LD	A,(DE)		;grab the X from the address offset
                  0659  
03AD' B8          0660  	CP	B		;COMPARE A(BODYX)=B(HEADX)
03AE' 2013        0661  	JR	NZ,CB2_2_3	;IF not match, go to next step
                  0662  
03B0' 3A9B0B'     0663  	LD	A,(HEADY2)	;Need to compare HEADY = POINTY
03B3' 47          0664  	LD	B,A		;Move HEADY to B for comparison
                  0665  	
03B4' 11A40E'     0666  	LD	DE,BODYY2	;grab the address of body Y 
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0014
SNAKE FOR DAZZLER GRAPHICS

03B7' 79          0667  	LD	A,C
03B8' 83          0668  	ADD	A,E		;add the offset
03B9' 5F          0669  	LD	E,A
03BA' 7A          0670  	LD	A,D
03BB' CE00        0671  	ADC	A,0
03BD' 57          0672  	LD	D,A
03BE' 1A          0673  	LD	A,(DE)		;grab the Y from the address offset
                  0674  	
03BF' B8          0675  	CP	B		;COMPARE A(BODYY)=B(HEADY)
03C0' CA0704'   R 0676  	JP	Z,CRASH3	;IF MATCH, SNAKE HIT ITSELF
                  0677  	
                  0678  CB2_2_3:
03C3' 3A9D0B'     0679  	LD	A,(DSPLN2)	;GET THE SNAKE'S DISPLAYED LENGTH
03C6' 3D          0680  	DEC	A		;DON'T NEED TO COMPARE THE LAST ENTRY (HEAD)
03C7' 0C          0681  	INC	C
03C8' B9          0682  	CP	C
03C9' CACF03'   R 0683  	JP	Z,CB2_1_1	;IF WE HIT THE DISP LEN, KEEP LOOKING
03CC' C39E03'   R 0684  	JP 	CB2_2_2		;ELSE, we're good - continue game loop	
                  0685  
                  0686  	;
                  0687  	; COLLISION DETECTION - PLAYER 2 WITH PLAYER 1
                  0688  	;
                  0689  CB2_1_1:
03CF' 0E00        0690  	LD	C,0			;START AT 0, USE AS OUR LOOP COUNTER
                  0691  	
                  0692  CB2_1_2:
03D1' 3A9A0B'     0693  	LD	A,(HEADX2)	;Need to compare HEADX = POINTX
03D4' 47          0694  	LD	B,A		;Move HEADX to B for comparison
                  0695  
03D5' 11A40B'     0696  	LD	DE,BODYX1	;grab the address of bodyx
03D8' 79          0697  	LD	A,C
03D9' 83          0698  	ADD	A,E		;add the offset
03DA' 5F          0699  	LD	E,A
03DB' 7A          0700  	LD	A,D
03DC' CE00        0701  	ADC	A,0
03DE' 57          0702  	LD	D,A
03DF' 1A          0703  	LD	A,(DE)		;grab the X from the address offset
                  0704  
03E0' B8          0705  	CP	B		;COMPARE A(BODYX)=B(HEADX)
03E1' 2013        0706  	JR	NZ,CB2_1_3	;IF not match, go to next step
                  0707  
03E3' 3A9B0B'     0708  	LD	A,(HEADY2)	;Need to compare HEADY = POINTY
03E6' 47          0709  	LD	B,A		;Move HEADY to B for comparison
                  0710  	
03E7' 11A40C'     0711  	LD	DE,BODYY1	;grab the address of body Y 
03EA' 79          0712  	LD	A,C
03EB' 83          0713  	ADD	A,E		;add the offset
03EC' 5F          0714  	LD	E,A
03ED' 7A          0715  	LD	A,D
03EE' CE00        0716  	ADC	A,0
03F0' 57          0717  	LD	D,A
03F1' 1A          0718  	LD	A,(DE)		;grab the Y from the address offset
                  0719  	
03F2' B8          0720  	CP	B		;COMPARE A(BODYY)=B(HEADY)
03F3' CA0A04'   R 0721  	JP	Z,CRASH4	;IF MATCH, SNAKE HIT ITSELF
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0015
SNAKE FOR DAZZLER GRAPHICS

                  0722  	
                  0723  CB2_1_3:
03F6' 3A950B'     0724  	LD	A,(DSPLN1)	;GET THE SNAKE'S DISPLAYED LENGTH
03F9' 0C          0725  	INC	C
03FA' B9          0726  	CP	C
03FB' CAF200'     0727  	JP	Z,DRAW		;IF WE HIT THE DISP LEN, KEEP LOOKING
03FE' C3D103'   R 0728  	JP 	CB2_1_2		;ELSE, we're good - continue game loop	
                  0729  ;End Player 2 Movement & Collision Detection
                  0730  
                  0731  CRASH1:
                  0732  	;LD	E,'1' ;DEBUG PRINT
                  0733  	;CALL	PRINTCHR 
0401' C32704'   R 0734  	JP	DIED1
                  0735  CRASH2:
                  0736  	;LD	E,'2' ;DEBUG PRINT
                  0737  	;CALL	PRINTCHR 
0404' C32704'   R 0738  	JP	DIED1
                  0739  CRASH3:
                  0740  	;LD	E,'3' ;DEBUG PRINT
                  0741  	;CALL	PRINTCHR 
0407' C35C04'   R 0742  	JP	DIED2
                  0743  CRASH4:
                  0744  	;LD 	E,'4' ;DEBUG PRINT
                  0745  	;CALL	PRINTCHR 
040A' C35C04'   R 0746  	JP	DIED2
                  0747  
                  0748  NEXTSTAGE:
                  0749  	;INCREASE THE SPEED 
040D' 3E00        0750  	LD	A,0		;RESET THE POINT
040F' 328F0B'     0751  	LD	(POINT),A	;RESET THE POINT
                  0752  
0412' 3A8C0B'     0753  	LD	A,(STAGE)	;grab the current stage
0415' 3C          0754  	INC	A		;increment the stage
0416' 328C0B'     0755  	LD	(STAGE),A	;save the new stage
                  0756  	
                  0757  	;LD	DE,STGMSG	;PRINT
                  0758  	;CALL	PRINTSTR	;  "STAGE: "
                  0759  	;CALL	PRINTBYTE	;PRINT THE STAGE BYTE
                  0760  	;LD	DE,CRLF		;PRINT NEWLINE
                  0761  	;CALL	PRINTSTR
                  0762  
0419' 3A8A0B'     0763  	LD	A,(SPEED)
                  0764  	;SUB	0FH
                  0765  	;SUB	019H
041C' D61E        0766  	SUB	1EH
041E' 328A0B'     0767  	LD	(SPEED),A
                  0768  	
0421' CD0206'     0769  	CALL	DISP_STAGE	;FLASH THE CURRENT STAGE
                  0770  	
0424' C37600'     0771  	JP	START
                  0772  	
                  0773  DIED1:
0427' 060A        0774  	LD	B,10		;FLASH THE SCREEN BY QUICKLY SWAPPING
                  0775  FL_LOOP1:			;  BETWEEN B&W AND COLOR
                  0776  	;LD	A,TENTH
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0016
SNAKE FOR DAZZLER GRAPHICS

                  0777  	;CALL 	PAUSE
0429' F5          0778  	PUSH 	AF
042A' C5          0779  	PUSH	BC
042B' D5          0780  	PUSH	DE
042C' CD7709'     0781  	CALL	SONG3		;PLAY TONE
042F' D1          0782  	POP	DE
0430' C1          0783  	POP	BC
0431' F1          0784  	POP	AF
                  0785  
0432' 3E04        0786  	LD	A,R64BW		;SET SCREEN FOR BW
0434' CD0000#     0787  	CALL	CHAR		;  64 x 64 MODE
                  0788  	;LD	A,TENTH
                  0789  	;CALL 	PAUSE	
                  0790  
0437' F5          0791  	PUSH 	AF
0438' C5          0792  	PUSH	BC
0439' D5          0793  	PUSH	DE
043A' CD7709'     0794  	CALL	SONG3		;PLAY TONE
043D' D1          0795  	POP	DE
043E' C1          0796  	POP	BC
043F' F1          0797  	POP	AF
                  0798  
0440' 3E03        0799  	LD	A,R64		;SET SCREEN FOR COLOR
0442' CD0000#     0800  	CALL	CHAR		;  64 x 64 MODE
0445' 05          0801  	DEC	B
                  0802  
0446' 20E1        0803  	JR	NZ,FL_LOOP1
                  0804  
0448' 3A960B'     0805  	LD	A,(LIVES1)	;DECREMENT LIVES
044B' 3D          0806  	DEC	A		;SUBTRACT THIS LIFE
044C' 32960B'     0807  	LD	(LIVES1),A	;SAVE IT BACK
                  0808  	
044F' 2840        0809  	JR	Z,GAMEOVER	;LIVES HIT ZERO
                  0810  
                  0811  	;USED A LIFE, RESET THE STAGE AT FIRST POINT
0451' 3E00        0812  	LD	A,0		;RESET THE POINT
0453' 328F0B'     0813  	LD	(POINT),A	;RESET THE POINT
                  0814  	
0456' CD2E06'     0815  	CALL	DISP_LIVES	;DISPLAY THE LIVES REMAINING
                  0816  
0459' C37600'     0817  	JP	START
                  0818  
                  0819  DIED2:
045C' 060A        0820  	LD	B,10		;FLASH THE SCREEN BY QUICKLY SWAPPING
                  0821  FL_LOOP2:			;  BETWEEN B&W AND COLOR
                  0822  	;LD	A,TENTH
                  0823  	;CALL 	PAUSE
045E' F5          0824  	PUSH 	AF
045F' C5          0825  	PUSH	BC
0460' D5          0826  	PUSH	DE
0461' CD7709'     0827  	CALL	SONG3		;PLAY TONE
0464' D1          0828  	POP	DE
0465' C1          0829  	POP	BC
0466' F1          0830  	POP	AF
                  0831  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0017
SNAKE FOR DAZZLER GRAPHICS

0467' 3E04        0832  	LD	A,R64BW		;SET SCREEN FOR BW
0469' CD0000#     0833  	CALL	CHAR		;  64 x 64 MODE
                  0834  	;LD	A,TENTH
                  0835  	;CALL 	PAUSE	
                  0836  
046C' F5          0837  	PUSH 	AF
046D' C5          0838  	PUSH	BC
046E' D5          0839  	PUSH	DE
046F' CD7709'     0840  	CALL	SONG3		;PLAY TONE
0472' D1          0841  	POP	DE
0473' C1          0842  	POP	BC
0474' F1          0843  	POP	AF
                  0844  
0475' 3E03        0845  	LD	A,R64		;SET SCREEN FOR COLOR
0477' CD0000#     0846  	CALL	CHAR		;  64 x 64 MODE
                  0847  	
047A' 05          0848  	DEC	B
                  0849  
047B' 20E1        0850  	JR	NZ,FL_LOOP2
                  0851  
047D' 3A9E0B'     0852  	LD	A,(LIVES2)	;DECREMENT LIVES
0480' 3D          0853  	DEC	A		;SUBTRACT THIS LIFE
0481' 329E0B'     0854  	LD	(LIVES2),A	;SAVE IT BACK
                  0855  	
0484' 280B        0856  	JR	Z,GAMEOVER	;LIVES HIT ZERO
                  0857  
                  0858  	;USED A LIFE, RESET THE STAGE AT FIRST POINT
0486' 3E00        0859  	LD	A,0			;RESET THE POINT
0488' 328F0B'     0860  	LD	(POINT),A	;RESET THE POINT
                  0861  	
048B' CD2E06'     0862  	CALL	DISP_LIVES	;DISPLAY THE LIVES REMAINING
                  0863  
048E' C37600'     0864  	JP	START
                  0865  
                  0866  GAMEOVER:
0491' CD7A06'     0867  	CALL	DISP_OVER
0494' C35100'     0868  	JP	BEGIN		;RESTART THE GAME
                  0869  	
                  0870  WONGAME:
0497' 11680B'     0871  	LD	DE,WONMSG	;POINT TO GAME-WON MESSAGE
049A' CD0A09'     0872  	CALL	PRINTSTR	;DO SYSTEM CALL
049D' 3E07        0873  	LD	A,TOGDAZ	;SPECIAL CONTROL CHARACTER
049F' CD0000#     0874  	CALL	CHAR		;  TO TURN OFF/ON DAZZLER
04A2' C30000      0875  	JP	WBOOT		;RETURN TO CDOS
                  0876  
                  0877  NEWPOINT:	
04A5' 3E11        0878  	LD	A,PTCOLR	;GENERATE A RANDOM POINT
04A7' CD0000#     0879  	CALL	CHAR		
                  0880  NP2:
04AA' CDC909'     0881  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR X
04AD' 32860B'     0882  	LD	(POINTX),A	;STORE IT IN OUR POINTX VARIABLE
04B0' 67          0883  	LD	H,A		;  AND SET IT FOR "DOT"
                  0884  	
04B1' CDC909'     0885  	CALL 	RANDOM		;GENERATE A RANDOM NUMBER FOR Y
04B4' 32870B'     0886  	LD	(POINTY),A	;STORE IT IN OUR POINTY VARIABLE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0018
SNAKE FOR DAZZLER GRAPHICS

04B7' 6F          0887  	LD	L,A		;  AND SET IT FOR "DOT"
                  0888  
                  0889  ;MAKE SURE THE NEW POINT DOESN'T 
                  0890  ;END UP DIRECTLY ON TOP OF PLAYER 1 SNAKE
                  0891  NPCP1_1:
04B8' 0E00        0892  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0893  	
                  0894  NPCP1_2:
04BA' 3A860B'     0895  	LD	A,(POINTX)	;Need to compare BODYX = POINTX
04BD' 47          0896  	LD	B,A		;Move POINTX to B for comparison
                  0897  
04BE' 11A40B'     0898  	LD	DE,BODYX1	;grab the address of bodyx
04C1' 79          0899  	LD	A,C
04C2' 83          0900  	ADD	A,E		;add the offset
04C3' 5F          0901  	LD	E,A
04C4' 7A          0902  	LD	A,D
04C5' CE00        0903  	ADC	A,0
04C7' 57          0904  	LD	D,A
04C8' 1A          0905  	LD	A,(DE)		;grab the X from the address offset
                  0906  
04C9' B8          0907  	CP	B		;COMPARE A(BODYX)=B(HEADX)
04CA' 2013        0908  	JR	NZ,NPCP1_3	;IF not match, go to next step
                  0909  
04CC' 3A870B'     0910  	LD	A,(POINTY)	;Need to compare BODYY = POINTY
04CF' 47          0911  	LD	B,A		;Move POINTY to B for comparison
                  0912  	
04D0' 11A40C'     0913  	LD	DE,BODYY1	;grab the address of body Y 
04D3' 79          0914  	LD	A,C
04D4' 83          0915  	ADD	A,E		;add the offset
04D5' 5F          0916  	LD	E,A
04D6' 7A          0917  	LD	A,D
04D7' CE00        0918  	ADC	A,0
04D9' 57          0919  	LD	D,A
04DA' 1A          0920  	LD	A,(DE)		;grab the Y from the address offset
                  0921  	
04DB' B8          0922  	CP	B		;COMPARE A(BODYY)=B(HEADY)
04DC' CAAA04'   R 0923  	JP	Z,NP2		;IF MATCH, NEED TO GENERATE A NEW POINT
                  0924  	
                  0925  NPCP1_3:
04DF' 3A950B'     0926  	LD	A,(DSPLN1)	;GET THE SNAKE'S DISPLAYED LENGTH
04E2' 0C          0927  	INC	C
04E3' B9          0928  	CP	C
04E4' CAEA04'   R 0929  	JP	Z,NPCP2_1	;IF WE HIT THE DISP LEN, continue
04E7' C3BA04'   R 0930  	JP 	NPCP1_2		;ELSE, keep looking
                  0931  
                  0932  ;make sure new point doesn't end up on top of player 2
                  0933  NPCP2_1:
                  0934  	;check if we're in 2 player mode
04EA' 3A8D0B'     0935  	LD	A,(MODE)	;GRAB THE GAME MODE
04ED' FE32        0936  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
04EF' 2032        0937  	JR	NZ,NPFIN	;  IF NOT, SKIP THIS	
                  0938  
04F1' 0E00        0939  	LD	C,0		;START AT 0, USE AS OUR LOOP COUNTER
                  0940  
                  0941  NPCP2_2:
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0019
SNAKE FOR DAZZLER GRAPHICS

04F3' 3A860B'     0942  	LD	A,(POINTX)	;Need to compare BODYX = POINTX
04F6' 47          0943  	LD	B,A		;Move POINTX to B for comparison
                  0944  
04F7' 11A40D'     0945  	LD	DE,BODYX2	;grab the address of bodyx
04FA' 79          0946  	LD	A,C
04FB' 83          0947  	ADD	A,E		;add the offset
04FC' 5F          0948  	LD	E,A
04FD' 7A          0949  	LD	A,D
04FE' CE00        0950  	ADC	A,0
0500' 57          0951  	LD	D,A
0501' 1A          0952  	LD	A,(DE)		;grab the X from the address offset
                  0953  
0502' B8          0954  	CP	B		;COMPARE A(BODYX)=B(HEADX)
0503' 2013        0955  	JR	NZ,NPCP2_3	;IF not match, go to next step
                  0956  
0505' 3A870B'     0957  	LD	A,(POINTY)	;Need to compare BODYY = POINTY
0508' 47          0958  	LD	B,A		;Move POINTY to B for comparison
                  0959  	
0509' 11A40E'     0960  	LD	DE,BODYY2	;grab the address of body Y 
050C' 79          0961  	LD	A,C
050D' 83          0962  	ADD	A,E		;add the offset
050E' 5F          0963  	LD	E,A
050F' 7A          0964  	LD	A,D
0510' CE00        0965  	ADC	A,0
0512' 57          0966  	LD	D,A
0513' 1A          0967  	LD	A,(DE)		;grab the Y from the address offset
                  0968  	
0514' B8          0969  	CP	B		;COMPARE A(BODYY)=B(HEADY)
0515' CAAA04'   R 0970  	JP	Z,NP2		;IF MATCH, NEED TO GENERATE A NEW POINT
                  0971  	
                  0972  NPCP2_3:
0518' 3A9D0B'     0973  	LD	A,(DSPLN2)	;GET THE SNAKE'S DISPLAYED LENGTH
051B' 0C          0974  	INC	C
051C' B9          0975  	CP	C
051D' CA2305'   R 0976  	JP	Z,NPFIN		;IF WE HIT THE DISP LEN, continue
0520' C3F304'   R 0977  	JP 	NPCP2_2		;ELSE, keep looking
                  0978  	
                  0979  NPFIN:
0523' CD0000#     0980  	CALL	CURSOR		;MOVE CURSOR TO POINT
0526' CD0000#     0981  	CALL	DOT		;  AND DISPLAY IT
0529' C9          0982  	RET
                  0983  	
                  0984  ;
                  0985  ; UTILITY FUNCTIONS
                  0986  ;
                  0987  
                  0988  
                  0989  ;DRAW WHITE BORDER AROUND THE SCREEN
                  0990  BORDER:
052A' CD0000#     0991  	CALL	PAGE		;CLEAR THE SCREEN
052D' 3E17        0992  	LD	A,WHITE		;SET BORDER LINE
052F' CD0000#     0993  	CALL	CHAR		;  COLOR TO WHITE
                  0994  
0532' 2600        0995  	LD	H,0		;SET X = 0
0534' 2E00        0996  	LD	L,0		;SET Y = 0
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0020
SNAKE FOR DAZZLER GRAPHICS

0536' CD0000#     0997  	CALL	CURSOR		;MOVE CURSOR THERE
0539' 2608        0998  	LD	H,8		;SET X = 0
053B' 2EFF        0999  	LD	L,255		;SET Y = 0
053D' CD0000#     1000  	CALL	AREA		;MOVE CURSOR THERE
0540' 26FF        1001  	LD	H,255		;SET X = 0
0542' 2EF7        1002  	LD	L,247		;SET Y = 0
0544' CD0000#     1003  	CALL	AREA		;MOVE CURSOR THERE
0547' 26F7        1004  	LD	H,247		;SET X = 0
0549' 2E00        1005  	LD	L,0		;SET Y = 0
054B' CD0000#     1006  	CALL	AREA		;MOVE CURSOR THERE
054E' 2608        1007  	LD	H,8		;SET X = 0
0550' 2E08        1008  	LD	L,8		;SET Y = 0
0552' CD0000#     1009  	CALL	AREA		;MOVE CURSOR THERE
0555' C9          1010  	RET
                  1011  
                  1012  DRAWLIVES:
                  1013  	;draw how many Player 1 lives are left with green dots in the upper-left corner
0556' 3A960B'     1014  	LD	A,(LIVES1)
0559' 47          1015  	LD	B,A
                  1016  	
055A' 2604        1017  	LD	H,4		;SET X = 0
055C' 2EFB        1018  	LD	L,251		;SET Y = 0
055E' CD0000#     1019  	CALL	CURSOR		;MOVE CURSOR THERE
0561' 3E12        1020  	LD	A,P1COLR
0563' CD0000#     1021  	CALL	CHAR
                  1022  LV_LOOP1:
0566' 7C          1023  	LD	A,H
0567' C608        1024  	ADD	A,8
0569' 67          1025  	LD	H,A
056A' CD0000#     1026  	CALL	CURSOR
056D' CD0000#     1027  	CALL	DOT
                  1028  
0570' 05          1029  	DEC	B
0571' 20F3        1030  	JR	NZ,LV_LOOP1
                  1031  
                  1032  	;Draw Player 2 lives too?
0573' 3A8D0B'     1033  	LD	A,(MODE)	;GRAB THE GAME MODE
0576' FE32        1034  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0578' C0          1035  	RET	NZ		;  IF NOT, SKIP THIS	
                  1036  
0579' 3A9E0B'     1037  	LD	A,(LIVES2)
057C' 47          1038  	LD	B,A
                  1039  	
057D' 2604        1040  	LD	H,4		;SET X = 0
057F' 2E04        1041  	LD	L,4		;SET Y = 0
0581' CD0000#     1042  	CALL	CURSOR		;MOVE CURSOR THERE
0584' 3E15        1043  	LD	A,P2COLR
0586' CD0000#     1044  	CALL	CHAR
                  1045  LV_LOOP2:
0589' 7C          1046  	LD	A,H
058A' C608        1047  	ADD	A,8
058C' 67          1048  	LD	H,A
058D' CD0000#     1049  	CALL	CURSOR
0590' CD0000#     1050  	CALL	DOT
                  1051  
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0021
SNAKE FOR DAZZLER GRAPHICS

0593' 05          1052  	DEC	B
0594' 20F3        1053  	JR	NZ,LV_LOOP2
                  1054  	
0596' C9          1055  	RET
                  1056  
                  1057  DRAWPOINTS:
                  1058  	;draw how many POINTS are left in the stage with red dots in the upper-right corner
                  1059  
0597' 3E17        1060  	LD	A,WHITE		;CLEAR OUT THE LINE OF POINTS FIRST
0599' CD0000#     1061  	CALL	CHAR
059C' 26FB        1062  	LD	H,251		;SET X = 0
059E' 2EFB        1063  	LD	L,251		;SET Y = 0
05A0' CD0000#     1064  	CALL	CURSOR		;MOVE CURSOR THERE
05A3' 26AB        1065  	LD	H,171		;SET X = 0
05A5' 2EFB        1066  	LD	L,251		;SET Y = 0
05A7' CD0000#     1067  	CALL	LINE		;MOVE CURSOR THERE
                  1068  		
05AA' 3A8F0B'     1069  	LD	A,(POINT)
05AD' 47          1070  	LD	B,A
05AE' 3E0A        1071  	LD	A,10
05B0' 90          1072  	SUB	B		;A now has how many points to print (10-POINTS)
05B1' 47          1073  	LD	B,A		;COPY to B
                  1074  	
05B2' 26FB        1075  	LD	H,251		;SET X = 0
05B4' 2EFB        1076  	LD	L,251		;SET Y = 0
05B6' CD0000#     1077  	CALL	CURSOR		;MOVE CURSOR THERE
05B9' 3E11        1078  	LD	A,PTCOLR
05BB' CD0000#     1079  	CALL	CHAR
                  1080  PT_LOOP:
05BE' 7C          1081  	LD	A,H
05BF' D608        1082  	SUB	8		;PIXEL*2
05C1' 67          1083  	LD	H,A
05C2' CD0000#     1084  	CALL	CURSOR
05C5' CD0000#     1085  	CALL	DOT
                  1086  	
05C8' 05          1087  	DEC	B
05C9' 20F3        1088  	JR	NZ,PT_LOOP
05CB' C9          1089  	RET	
                  1090  	
                  1091  ;
                  1092  ;FLASHING INTRO SCREEN
                  1093  ;
                  1094  DISP_INTRO:
05CC' CD0000#     1095  	CALL	PAGE
05CF' CD2A05'     1096  	CALL	BORDER
05D2' 219A38      1097  	LD	HL,389AH	;POSITION CURSOR PRIOR
05D5' CD0000#     1098  	CALL	CURSOR		;  TO WRITING LOGO
05D8' 3E17        1099  	LD	A,WHITE		;draw the snake in color
05DA' CD0000#     1100  	CALL	CHAR
05DD' 21EA09'     1101  	LD	HL,DAZSTR	;WRITE "DAZZLER"
05E0' CD0000#     1102  	CALL	STRING
                  1103  	
05E3' 217A4C      1104  	LD	HL,4C7AH	;POINT TO START
05E6' CD0000#     1105  	CALL	CURSOR		;  OF NEXT WORD
05E9' 21F109'     1106  	LD	HL,SNKSTR	;WRITE THE WORD
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0022
SNAKE FOR DAZZLER GRAPHICS

05EC' CD0000#     1107  	CALL	STRING		;  "SNAKE"
                  1108  	
05EF' 216460      1109  	LD	HL,6064H	;POINT TO START
05F2' CD0000#     1110  	CALL	CURSOR		;  OF NEXT WORD
05F5' 211A0A'     1111  	LD	HL,BYARON	;WRITE
05F8' CD0000#     1112  	CALL	STRING		;  "By Aron Hoekstra"
                  1113  
05FB' CD0000#     1114  	CALL	CYCLE		;CYCLE ALL THE COLORS
05FE' CDF906'     1115  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1116  	
0601' C9          1117  	RET
                  1118  
                  1119  ;
                  1120  ;FLASHING STAGE SCREEN
                  1121  ;
                  1122  DISP_STAGE:
0602' CD0000#     1123  	CALL	PAGE
0605' CD2A05'     1124  	CALL	BORDER
0608' 217A2D      1125  	LD	HL,2D7AH	;MOVE CURSOR
060B' CD0000#     1126  	CALL	CURSOR		;  TO CENTER
060E' 21F609'     1127  	LD	HL,STGSTR	;WRITE THE WORD
0611' CD0000#     1128  	CALL	STRING		;  "STAGE"
                  1129  
0614' 217AAC      1130  	LD	HL,0AC7AH	;MOVE CURSOR
0617' CD0000#     1131  	CALL	CURSOR		;  OVER A BIT
                  1132  	
061A' 3A8C0B'     1133  	LD	A,(STAGE)	;GRAB THE STAGE VALUE
061D' 3C          1134  	INC	A		;ADD 1 FOR DISPLAY
061E' CD3C09'     1135  	CALL	DISPBYTE	;DISPLAY THE NUMBER
                  1136  
0621' CD0000#     1137  	CALL	CYCLE		;CYCLE ALL THE COLORS
                  1138  
0624' CD0000#     1139  	CALL	PAGE
0627' CD2A05'     1140  	CALL	BORDER
062A' CDF906'     1141  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1142  
062D' C9          1143  	RET
                  1144  
                  1145  ;
                  1146  ;DISPLAY REMAINING LIVES
                  1147  ;
                  1148  DISP_LIVES:
062E' CD0000#     1149  	CALL	PAGE
0631' CD2A05'     1150  	CALL	BORDER
                  1151  	
                  1152  	;Player 1 Lives
0634' 21AA1B      1153  	LD	HL,1BAAH	;MOVE CURSOR
0637' CD0000#     1154  	CALL	CURSOR		;  TO CENTER
063A' 21FB09'     1155  	LD	HL,LV1STR	;WRITE THE WORD
063D' CD0000#     1156  	CALL	STRING		;  "P1 LIVES"
                  1157  
0640' 21AAC4      1158  	LD	HL,0C4AAH	;MOVE CURSOR
0643' CD0000#     1159  	CALL	CURSOR		;  OVER A BIT
                  1160  	
0646' 3A960B'     1161  	LD	A,(LIVES1)	;GRAB THE STAGE VALUE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0023
SNAKE FOR DAZZLER GRAPHICS

0649' CD3C09'     1162  	CALL	DISPBYTE	;DISPLAY THE NUMBER
                  1163  
                  1164  	;Player 2 Lives
064C' 3A8D0B'     1165  	LD	A,(MODE)	;GRAB THE GAME MODE
064F' FE32        1166  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0651' 2018        1167  	JR	NZ,DSLV2	;IF NOT, SKIP THIS
                  1168  
0653' 213E1B      1169  	LD	HL,1B3EH	;MOVE CURSOR
0656' CD0000#     1170  	CALL	CURSOR		;  TO CENTER
0659' 21040A'     1171  	LD	HL,LV2STR	;WRITE THE WORD
065C' CD0000#     1172  	CALL	STRING		;  "P2 LIVES"
                  1173  
065F' 213EC4      1174  	LD	HL,0C43EH	;MOVE CURSOR
0662' CD0000#     1175  	CALL	CURSOR		;  OVER A BIT
                  1176  	
0665' 3A9E0B'     1177  	LD	A,(LIVES2)	;GRAB THE STAGE VALUE
0668' CD3C09'     1178  	CALL	DISPBYTE	;DISPLAY THE NUMBER
                  1179  
                  1180  DSLV2:
066B' 3E14        1181  	LD	A,TWO
066D' CD0000#     1182  	CALL 	PAUSE
                  1183  
0670' CD0000#     1184  	CALL	PAGE
0673' CD2A05'     1185  	CALL	BORDER
0676' CDF906'     1186  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1187  
0679' C9          1188  	RET
                  1189  
                  1190  ;
                  1191  ;DISPLAY GAME OVER
                  1192  ;
                  1193  DISP_OVER:
067A' CD0000#     1194  	CALL	PAGE
067D' CD2A05'     1195  	CALL	BORDER
                  1196  	
0680' 217A10      1197  	LD	HL,107AH	;MOVE CURSOR
0683' CD0000#     1198  	CALL	CURSOR		;  TO CENTER
0686' 210D0A'     1199  	LD	HL,GOVSTR	;WRITE THE WORDS
0689' CD0000#     1200  	CALL	STRING		;  "GAME OVER"
                  1201  
068C' 3E28        1202  	LD	A,FOUR
068E' CD0000#     1203  	CALL 	PAUSE
                  1204  
0691' CD0000#     1205  	CALL	PAGE
0694' CD2A05'     1206  	CALL	BORDER
0697' CDF906'     1207  	CALL	CONINP		;CALL CONINP NOW TO CLEAR THE INPUT BUFFER
                  1208  
069A' C9          1209  	RET
                  1210  
                  1211  ;
                  1212  ;GET CONSOLE INPUT J OR K
                  1213  ;
                  1214  GETJK:
069B' 11660A'     1215  	LD	DE,INTJK	;GET JOYSTICK OR KEYBOARD
069E' CD0A09'     1216  	CALL	PRINTSTR	;DO SYSTEM CALL
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0024
SNAKE FOR DAZZLER GRAPHICS

                  1217  GETJK1:	
06A1' CDBB07'     1218  	CALL	CONSTAT		;GET CONSOLE STATUS	
06A4' 28FB        1219  	JR	Z,GETJK1	;RETURN TO MAIN PROGRAM
06A6' CDF406'     1220  	CALL	GETDATA		;CHECK THE CHARACTER
                  1221  
06A9' FE4A        1222  	CP	'J'		;CHECK FOR UP KEY
06AB' 2810        1223  	JR	Z,GETJK2	;PROCESS THE KEYPRESS
06AD' FE6A        1224  	CP	'j'		;Lower-Case?
06AF' 280A        1225  	JR	Z,GETJKLC	;PROCESS THE KEYPRESS
                  1226  		
06B1' FE4B        1227  	CP	'K'		;CHECK FOR DOWN KEY
06B3' 2808        1228  	JR	Z,GETJK2	;PROCESS THE KEYPRESS
06B5' FE6B        1229  	CP	'k'		;Lower-Case?
06B7' 2802        1230  	JR	Z,GETJKLC	;PROCESS THE KEYPRESS
                  1231  
06B9' 18E6        1232  	JR	GETJK1		;Invalid key, keep waiting
                  1233  GETJKLC:
06BB' D620        1234  	SUB	A,20H		;CONVERT TO UPPER-CASE
                  1235  GETJK2:	
06BD' 328E0B'     1236  	LD	(CNTRL),A	;SAVE THE CONTROL METHOD
06C0' 5F          1237  	LD 	E,A		;ECHO THE KEY
06C1' CD0209'     1238  	CALL 	PRINTCHR 	;  BACK TO CONSOLE
06C4' 11810B'     1239  	LD	DE,CRLF		;CRLF
06C7' CD0A09'     1240  	CALL	PRINTSTR	;DO SYSTEM CALL
06CA' C9          1241  	RET			;RETURN TO MAIN IF NEITHER
                  1242  
                  1243  ;
                  1244  ;GET CONSOLE INPUT 1 OR 2
                  1245  ;
                  1246  GET12:
06CB' 114D0A'     1247  	LD	DE,INT12	;HOW MANY PLAYERS
06CE' CD0A09'     1248  	CALL	PRINTSTR	;DO SYSTEM CALL
                  1249  GET12_1:	
06D1' CDBB07'     1250  	CALL	CONSTAT		;GET CONSOLE STATUS
06D4' 28FB        1251  	JR	Z,GET12_1	;RETURN TO MAIN PROGRAM
06D6' CDF406'     1252  	CALL	GETDATA		;CHECK THE CHARACTER
                  1253  
06D9' FE31        1254  	CP	'1'		;CHECK FOR UP KEY
06DB' 2806        1255  	JR	Z,GET12_2	;PROCESS THE KEYPRESS
                  1256  
06DD' FE32        1257  	CP	'2'		;CHECK FOR DOWN KEY
06DF' 2802        1258  	JR	Z,GET12_2	;PROCESS THE KEYPRESS
                  1259  
06E1' 18EE        1260  	JR	GET12_1		;Invalid key, keep waiting
                  1261  GET12_2:	
06E3' 328D0B'     1262  	LD	(MODE),A	;SAVE THE PLAYER MODE SELECTION
06E6' 5F          1263  	LD 	E,A	   	;ECHO THE KEY
06E7' CD0209'     1264  	CALL	PRINTCHR 	;  BACK TO CONSOLE
06EA' 11810B'     1265  	LD	DE,CRLF		;CRLF
06ED' CD0A09'     1266  	CALL	PRINTSTR	;DO SYSTEM CALL
06F0' CD0A09'     1267  	CALL	PRINTSTR	;DO SYSTEM CALL
06F3' C9          1268  	RET			;RETURN TO MAIN IF NEITHER
                  1269  
                  1270  GETDATA:
      (FFFF)      1271  	IF CPM EQ 0
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0025
SNAKE FOR DAZZLER GRAPHICS

06F4' DB01        1272  	IN	A,CDATAP	;GET THE CHARACTER
06F6' E67F        1273  	AND	7FH		;STRIP PARITY BIT
                  1274  	ENDIF
      (0000)      1275  	IF CPM EQ 1
                  1276  	PUSH	BC
                  1277  	LD	C,CDATAB
                  1278  	CALL	CDOS
                  1279  	POP	BC
                  1280  	ENDIF
06F8' C9          1281  	RET
                  1282  
                  1283  ;
                  1284  ;SUBROUTINE TO SAMPLE CONSOLE FOR CONTROL-CHARACTERS
                  1285  ;
                  1286  CONINP:	
06F9' 3A8E0B'     1287  	LD	A,(CNTRL)	;GET CONTROL MODE
06FC' FE4B        1288  	CP	'K'
06FE' 205A        1289  	JR	NZ,JOYCHK
                  1290  
                  1291  ;KEYBOARD INPUT CHECK
0700' CDBB07'     1292  	CALL	CONSTAT		;GET CONSOLE STATUS (WAS THERE A KEY PRESSED IN THE INPUT BUFFER?)
0703' C8          1293  	RET	Z		;RETURN TO MAIN PROGRAM
0704' CDB307'     1294  	CALL	CONDATA		;CHECK THE CHARACTER
                  1295  
                  1296  	;PLAYER 1
0707' FE57        1297  	CP	UP1		;CHECK FOR UP KEY
0709' CACA07'     1298  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
070C' FE77        1299  	CP	UP1+20H		;Lower-Case?
070E' CAC807'     1300  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1301  		
0711' FE53        1302  	CP	DOWN1		;CHECK FOR DOWN KEY
0713' CACA07'     1303  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
0716' FE73        1304  	CP	DOWN1+20H	;Lower-Case?
0718' CAC807'     1305  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1306  
071B' FE41        1307  	CP	LEFT1		;CHECK FOR LEFT KEY
071D' CACA07'     1308  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
0720' FE61        1309  	CP	LEFT1+20H	;Lower-Case?
0722' CAC807'     1310  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1311  
0725' FE44        1312  	CP	RIGHT1		;CHECK FOR RIGHT KEY
0727' CACA07'     1313  	JP	Z,NXTPR1	;PROCESS THE KEYPRESS
072A' FE64        1314  	CP	RIGHT1+20H	;Lower-Case?
072C' CAC807'     1315  	JP	Z,NXTPRLC1	;PROCESS THE KEYPRESS
                  1316  	
                  1317  	;PLAYER 2
072F' FE49        1318  	CP	UP2		;CHECK FOR UP KEY
0731' CAD007'     1319  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
0734' FE69        1320  	CP	UP2+20H		;Lower-Case?
0736' CACE07'     1321  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1322  		
0739' FE4B        1323  	CP	DOWN2		;CHECK FOR DOWN KEY
073B' CAD007'     1324  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
073E' FE6B        1325  	CP	DOWN2+20H	;Lower-Case?
0740' CACE07'     1326  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0026
SNAKE FOR DAZZLER GRAPHICS

                  1327  
0743' FE4A        1328  	CP	LEFT2		;CHECK FOR LEFT KEY
0745' CAD007'     1329  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
0748' FE6A        1330  	CP	LEFT2+20H	;Lower-Case?
074A' CACE07'     1331  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1332  
074D' FE4C        1333  	CP	RIGHT2		;CHECK FOR RIGHT KEY
074F' CAD007'   R 1334  	JP	Z,NXTPR2	;PROCESS THE KEYPRESS
0752' FE6C        1335  	CP	RIGHT2+20H	;Lower-Case?
0754' CACE07'   R 1336  	JP	Z,NXTPRLC2	;PROCESS THE KEYPRESS
                  1337  	
                  1338  	;OTHER KEYS
0757' FE50        1339  	CP	PSKEY		;CHECK FOR PAUSE KEY
0759' C0          1340  	RET	NZ		;RETURN TO MAIN IF NEITHER
                  1341  	
                  1342  JOYCHK:
                  1343  	;READ JOYSTICK 1
075A' 3AA00B'     1344  	LD	A,(AJ1UD)	;GET ADJUSTMENT
075D' 47          1345  	LD	B,A
075E' DB1A        1346  	IN	A,JOY1UD    	;READ JOY STICK UP/DOWN 
0760' 80          1347  	ADD	B		;ADJUST
0761' 47          1348  	LD	B,A
0762' 3AA10B'     1349  	LD	A,(AJ1RL)	;GET ADJUSTMENT
0765' 4F          1350  	LD	C,A
0766' DB19        1351  	IN	A,JOY1RL	;READ RIGHT/LEFT 
0768' 81          1352  	ADD	C		; ADJUST
0769' 4F          1353  	LD	C,A
076A' CDD407'     1354  	CALL	FDR1		;FIND DIRECTION
076D' A7          1355  	AND	A
076E' 2803        1356  	JR	Z,JC1_B		;NO CHANGE - CHECK BUTTONS
0770' 32910B'     1357  	LD	(NXDIR1),A	;CHANGE DIRECTION
                  1358  
                  1359  JC1_B:
                  1360  	;READ BUTTONS
0773' DB18        1361  	IN	A,JOYBTN	;READ IN THE BUTTONS
0775' CB47        1362  	BIT 	0,A        	;SEE IF BIT 0 IS SET (JS1 - BUTTON 4)
0777' 2847        1363  	JR	Z,DAZOFF 	;  IF SO, EXIT GAME
0779' CB5F        1364  	BIT	3,A		;SEE IF BIT 3 IS SET (JS1 - BUTTON 1)
077B' 2012        1365  	JR	NZ,JC2_2	;IF NOT CONTINUE WITH JOYSTICK 2	
                  1366  JC1_1:				;  IF SET, PAUSE THE GAME
077D' DB18        1367  	IN 	A,JOYBTN	;WAIT FOR BUTTON TO BE RELEASED
077F' CB5F        1368  	BIT	3,A		;CHECK BUTTON 1 NOW
0781' 28FA        1369  	JR	Z,JC1_1		;CONTINUE WAITING
                  1370  JC1_2:
0783' DB18        1371  	IN 	A,JOYBTN	;NOW WAIT FOR BUTTON TO BE PRESSED AGAIN
0785' CB5F        1372  	BIT	3,A		;CHECK BUTTON 1 NOW
0787' 20FA        1373  	JR	NZ,JC1_2	;CONTINUE WAITING
                  1374  JC1_3:
0789' DB18        1375  	IN 	A,JOYBTN	;AND RELEASED AGAIN...
078B' CB5F        1376  	BIT	3,A		;CHECK BUTTON 1 NOW
078D' 28FA        1377  	JR	Z,JC1_3		;CONTINUE WAITING
                  1378  
                  1379  JC2_2:
                  1380  	;READ JOYSTICK 2
078F' 3A8D0B'     1381  	LD	A,(MODE)	;GRAB THE GAME MODE
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0027
SNAKE FOR DAZZLER GRAPHICS

0792' FE32        1382  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
0794' C0          1383  	RET	NZ		;  IF NOT, EXIT
                  1384  	
0795' 3AA20B'     1385  	LD	A,(AJ2UD)	;GET ADJUSTMENT
0798' 47          1386  	LD	B,A
0799' DB1C        1387  	IN	A,JOY2UD    	;READ JOY STICK UP/DOWN 
079B' 80          1388  	ADD	B		;ADJUST
079C' 47          1389  	LD	B,A
079D' 3AA30B'     1390  	LD	A,(AJ2RL)	;GET ADJUSTMENT
07A0' 4F          1391  	LD	C,A
07A1' DB1B        1392  	IN	A,JOY2RL	;READ RIGHT/LEFT 
07A3' 81          1393  	ADD	C		; ADJUST
07A4' 4F          1394  	LD	C,A
07A5' CD1408'     1395  	CALL	FDR2		;FIND DIRECTION
07A8' A7          1396  	AND	A
07A9' C8          1397  	RET	Z
                  1398  	;JR	Z,JC2_B		;NO CHANGE
07AA' 32990B'     1399  	LD	(NXDIR2),A	;CHANGE DIRECTION
                  1400  ;JC2_B:
                  1401  	;READ BUTTONS		disabling player 2 buttons for now
                  1402  	;IN	A,JOYBTN	;READ IN THE BUTTONS
                  1403  	;BIT 	7,A        	;SEE IF BIT 0 IS SET (JS2 - BUTTON 4)
                  1404  	;JR	Z,DAZOFF 	;  IF SO, EXIT GAME
                  1405  	
07AD' C9          1406  	RET
                  1407  
                  1408  	
                  1409  CONLOOP:
07AE' CDBB07'     1410  	CALL	CONSTAT		;PAUSED, LOOP CHECKING 
07B1' 28FB        1411  	JR	Z,CONLOOP	;FOR ANOTHER CHARACTER
                  1412  CONDATA:
07B3' CDF406'     1413  	CALL	GETDATA		;READ THE CHARACTER
                  1414  	;IN	A,CDATA		;GET THE CHARACTER
                  1415  	;AND	7FH		;STRIP PARITY BIT
07B6' FE03        1416  	CP	CTRLC		;CHECK FOR CONTROL-C
07B8' 2806        1417  	JR	Z,DAZOFF	;EXIT IF TRUE
07BA' C9          1418  	RET			;RETURN IF NEITHER
                  1419  CONSTAT:
      (FFFF)      1420  	IF CPM EQ 0
07BB' DB00        1421  	IN	A,CSTATP	;GET CONSOLE STATUS
07BD' E640        1422  	AND	RDA		;CHECK RDA BIT
                  1423  	ENDIF
      (0000)      1424  	IF CPM EQ 1
                  1425  	PUSH	BC
                  1426  	LD	C,CSTATB	;CHECK CHAR READY
                  1427  	CALL	CDOS		;DO SYSTEM CALL
                  1428  	POP	BC
                  1429  	CP	0		;A CONTAINS 0 IF NOTHING WAS PRESSED
                  1430  	ENDIF
07BF' C9          1431  	RET			;RETURNS RESULT WITH Z
                  1432  
                  1433  DAZOFF:	
07C0' 3E07        1434  	LD	A,TOGDAZ	;SPECIAL CONTROL CHARACTER
07C2' CD0000#     1435  	CALL	CHAR		;  TO TURN OFF/ON DAZZLER
07C5' C30000      1436  	JP	WBOOT		;RETURN TO CDOS
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0028
SNAKE FOR DAZZLER GRAPHICS

                  1437  
                  1438  NXTPRLC1:
07C8' D620        1439  	SUB	A,20H		;CONVERT TO UPPER-CASE
                  1440  NXTPR1:
07CA' 32910B'     1441  	LD	(NXDIR1),A	;SAVE THE KEY PRESSED
07CD' C9          1442  	RET
                  1443  
                  1444  NXTPRLC2:
07CE' D620        1445  	SUB	A,20H		;CONVERT TO UPPER-CASE
                  1446  NXTPR2:
07D0' 32990B'     1447  	LD	(NXDIR2),A	;SAVE THE KEY PRESSED
07D3' C9          1448  	RET
                  1449  
                  1450  ;FIND JOYSTICK DIRECTION - BORROWED FROM "GOTCHA"
                  1451  ;INPUT - B CONTAINS UP/DOWN
                  1452  ;        C CONTAINS RIGHT/LEFT 
                  1453  ;OUTPUT - A CONTAINS DIRECTION
                  1454  ;
07D4' 78          1455  FDR1:	LD	A,B	    	;GET UP/DOWN
07D5' A7          1456  	AND	A
07D6' FADE07'     1457  	JP	M,FDR301   	;DOWN
07D9' 1657        1458  	LD	D,UP1		;UPWARD
07DB' C3E207'   R 1459  	JP	FDR321
                  1460  ;
07DE' 1653        1461  FDR301:	LD	D,DOWN1		;DOWNWARD
07E0' 2F          1462  	CPL			;COMPLIMENT
07E1' 47          1463  	LD	B,A		;SAVE COMPLIMENT
07E2' FE40        1464  FDR321: CP	40H
07E4' D2E907'   R 1465  	JP	NC,FDR331	;LARGE MOVEMENT
07E7' 1600        1466  	LD	D,0		; NO CHANGE
07E9' 79          1467  FDR331: LD	A,C		;GET RIGHT/LEFT
07EA' A7          1468  	AND	A
07EB' FAF307'     1469  	JP	M,FDR401	;LEFT
07EE' 1E44        1470  	LD	E,RIGHT1	;RIGHT
07F0' C3F707'   R 1471  	JP	FDR421
                  1472  ;
07F3' 1E41        1473  FDR401: LD	E,LEFT1		;LEFT
07F5' 2F          1474  	CPL			;COMPLIMENT
07F6' 4F          1475  	LD	C,A		;SAVE COMPLIMENT
07F7' FE40        1476  FDR421: CP	40H
07F9' D2FE07'   R 1477  	JP	NC,FDR431	;LARGE MOVEMENT
07FC' 1E00        1478  	LD	E,0		;NO CHANGE
07FE' 7A          1479  FDR431: LD	A,D
07FF' 93          1480  	SUB	E
0800' C8          1481  	RET	Z		;NO CHANGE
0801' 7A          1482  	LD	A,D
0802' A7          1483  	AND	A
0803' CA1008'   R 1484  	JP	Z,FDR501	;MUST BE RIGHT/LEFT
0806' 7B          1485  	LD	A,E
0807' A7          1486  	AND	A
0808' CA1208'   R 1487  	JP	Z,FDR551	;MUST BE UP/DOWN
080B' 78          1488  	LD	A,B
080C' B9          1489  	CP	C
080D' DA1008'   R 1490  	JP	C,FDR501	;MUST BE RIGHT/LEFT
0810' 7B          1491  FDR501: LD	A,E 
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0029
SNAKE FOR DAZZLER GRAPHICS

0811' C9          1492  	RET
                  1493  ;
0812' 7A          1494  FDR551: LD	A, D
0813' C9          1495  	RET	
                  1496  	
                  1497  ;FIND JOYSTICK DIRECTION - PLAYER 2
                  1498  ;INPUT - B CONTAINS UP/DOWN
                  1499  ;        C CONTAINS RIGHT/LEFT 
                  1500  ;OUTPUT - A CONTAINS DIRECTION
                  1501  ;
0814' 78          1502  FDR2:	LD	A,B	    	;GET UP/DOWN
0815' A7          1503  	AND	A
0816' FA1E08'     1504  	JP	M,FDR302   	;DOWN
0819' 1649        1505  	LD	D,UP2		;UPWARD
081B' C32208'   R 1506  	JP	FDR322
                  1507  ;
081E' 164B        1508  FDR302:	LD	D,DOWN2		;DOWNWARD
0820' 2F          1509  	CPL			;COMPLIMENT
0821' 47          1510  	LD	B,A		;SAVE COMPLIMENT
0822' FE40        1511  FDR322: CP	40H
0824' D22908'   R 1512  	JP	NC,FDR332	;LARGE MOVEMENT
0827' 1600        1513  	LD	D,0		; NO CHANGE
0829' 79          1514  FDR332: LD	A,C		;GET RIGHT/LEFT
082A' A7          1515  	AND	A
082B' FA3308'     1516  	JP	M,FDR402	;LEFT
082E' 1E4C        1517  	LD	E,RIGHT2	;RIGHT
0830' C33708'   R 1518  	JP	FDR422
                  1519  ;
0833' 1E4A        1520  FDR402: LD	E,LEFT2		;LEFT
0835' 2F          1521  	CPL			;COMPLIMENT
0836' 4F          1522  	LD	C,A		;SAVE COMPLIMENT
0837' FE40        1523  FDR422: CP	40H
0839' D23E08'   R 1524  	JP	NC,FDR432	;LARGE MOVEMENT
083C' 1E00        1525  	LD	E,0		;NO CHANGE
083E' 7A          1526  FDR432: LD	A,D
083F' 93          1527  	SUB	E
0840' C8          1528  	RET	Z		;NO CHANGE
0841' 7A          1529  	LD	A,D
0842' A7          1530  	AND	A
0843' CA5008'   R 1531  	JP	Z,FDR502	;MUST BE RIGHT/LEFT
0846' 7B          1532  	LD	A,E
0847' A7          1533  	AND	A
0848' CA5208'   R 1534  	JP	Z,FDR552	;MUST BE UP/DOWN
084B' 78          1535  	LD	A,B
084C' B9          1536  	CP	C
084D' DA5008'   R 1537  	JP	C,FDR502	;MUST BE RIGHT/LEFT
0850' 7B          1538  FDR502: LD	A,E 
0851' C9          1539  	RET
                  1540  ;
0852' 7A          1541  FDR552: LD	A, D
0853' C9          1542  	RET	
                  1543  	
                  1544  
                  1545  DELAY:
0854' 3A8A0B'     1546  	LD	A,(SPEED)
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0030
SNAKE FOR DAZZLER GRAPHICS

                  1547  DELAY1:
0857' F5          1548  	PUSH	AF
0858' CD6908'     1549  	CALL	DELAY2		;Call Function if no borrow (BC <= HL after subtraction)
085B' CDF906'     1550  	CALL	CONINP		;Check for input
085E' F1          1551  	POP	AF
                  1552  
085F' D605        1553  	SUB	05H		;SUBTRACT
0861' FE00        1554  	CP	0		;see if its zero
0863' 20F2        1555  	JR	NZ,DELAY1	;loop
                  1556  	
0865' CD7708'     1557  	CALL	CHKNXT		;validate keyboard input
                  1558  	
0868' C9          1559  	RET			;exit loop
                  1560  	
                  1561  ;DELAY THE GAME LOOP FOR AN ADJUSTABLE AMOUNT OF TIME
                  1562  ;Based on Michael's answer at:
                  1563  ;https://stackoverflow.com/questions/29184900/z80-software-delay
                  1564  DELAY2:	
0869' F5          1565  	PUSH	AF
086A' C5          1566  	PUSH	BC
086B' 016400      1567  	LD	BC,100		; Load BC with the number of cycles for delay
086E' 00          1568  	NOP			; Optional NOP to align loop timing
                  1569  DL_LOOP:
086F' 0B          1570  	DEC	BC		; Decrement BC
0870' 78          1571  	LD	A, B		; Load A with high byte of BC
0871' B1          1572  	OR	C		; Logical OR A with low byte of BC
0872' 20FB        1573  	JR	NZ,DL_LOOP	; If BC is not zero, jump back to DELAY_LOOP
0874' F1          1574  	POP	AF
0875' C1          1575  	POP	BC
0876' C9          1576  	RET			; Return from the delay function
                  1577  
                  1578  ;ROUTINE TO VALIDATE THE INPUT THAT WAS CAPTURED DURING
                  1579  ;THE DELAY LOOP - WE ONLY PROCESS THIS ONCE AT THE END
                  1580  ;OF THE DELAY IN CASE MULTIPLE KEYS WERE PRESSED, WE
                  1581  ;ONLY LOOK AT THE LAST KEY PRESSED
                  1582  ;
                  1583  CHKNXT:
0877' 3A900B'     1584  	LD	A,(DIR1)	;Get the current direction
087A' 47          1585  	LD	B,A		;copy Current Direction to B	
087B' 3A910B'     1586  	LD	A,(NXDIR1)	;Get buffered next move to A
                  1587  	
087E' B8          1588  	CP	B
087F' 283C        1589  	JR	Z,CHKNXT2	;no change, check player 2 input
                  1590  
                  1591  ;PLAYER 1
                  1592  CHKNXT1U:
0881' FE57        1593  	CP	UP1		;was keypress up?
0883' 2009        1594  	JR	NZ,CHKNXT1D
                  1595  
0885' 4F          1596  	LD	C,A
0886' 78          1597  	LD	A,B
0887' FE53        1598  	CP	DOWN1		;was the previous direction down?
0889' 79          1599  	LD	A,C
                  1600  
088A' 2831        1601  	JR	Z,CHKNXT2	;it was, discard
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0031
SNAKE FOR DAZZLER GRAPHICS

088C' 1827        1602  	JR	CHKNXT1V
                  1603  
                  1604  CHKNXT1D:
088E' FE53        1605  	CP	DOWN1		;was keypress up?
0890' 2009        1606  	JR	NZ,CHKNXT1L
0892' 4F          1607  	LD	C,A
0893' 78          1608  	LD	A,B
0894' FE57        1609  	CP	UP1		;was the previous direction up?
0896' 79          1610  	LD	A,C
0897' 2824        1611  	JR	Z,CHKNXT2	;it was, discard
0899' 181A        1612  	JR	CHKNXT1V
                  1613  CHKNXT1L:
089B' FE41        1614  	CP	LEFT1		;was keypress left?
089D' 2009        1615  	JR	NZ,CHKNXT1R
089F' 4F          1616  	LD	C,A
08A0' 78          1617  	LD	A,B
08A1' FE44        1618  	CP	RIGHT1		;was the previous direction right?
08A3' 79          1619  	LD	A,C
08A4' 2817        1620  	JR	Z,CHKNXT2	;it was, discard
08A6' 180D        1621  	JR	CHKNXT1V
                  1622  CHKNXT1R:
08A8' FE44        1623  	CP	RIGHT1		;was keypress right?
08AA' 2011        1624  	JR	NZ,CHKNXT2
08AC' 4F          1625  	LD	C,A
08AD' 78          1626  	LD	A,B
08AE' FE41        1627  	CP	LEFT1		;was the previous direction left?
08B0' 79          1628  	LD	A,C
08B1' 280A        1629  	JR	Z,CHKNXT2	;it was, discard
08B3' 1800        1630  	JR	CHKNXT1V
                  1631  CHKNXT1V:			;was a valid Move
08B5' 32900B'     1632  	LD	(DIR1),A	;save the move
08B8' 3E01        1633  	LD	A,STMOVE	;GET US MOVING
08BA' 32970B'     1634  	LD	(STAT1),A	;UPDATE STATUS
                  1635  	
                  1636  ;PLAYER 2
                  1637  CHKNXT2:
08BD' 3A8D0B'     1638  	LD	A,(MODE)	;GRAB THE GAME MODE
08C0' FE32        1639  	CP	'2'		;SEE IF WE'RE in 2-PLAYER MODE
08C2' C0          1640  	RET	NZ		;  IF NOT, SKIP THIS	
                  1641  	
08C3' 3A980B'     1642  	LD	A,(DIR2)	;Get the current direction
08C6' 47          1643  	LD	B,A		;copy Current Direction to B	
08C7' 3A990B'     1644  	LD	A,(NXDIR2)	;Get buffered next move to A
                  1645  	
08CA' B8          1646  	CP	B
08CB' C8          1647  	RET	Z		;no change, return
                  1648  	
                  1649  CHKNXT2U:
08CC' FE49        1650  	CP	UP2		;was keypress up?
08CE' 2008        1651  	JR	NZ,CHKNXT2D
08D0' 4F          1652  	LD	C,A
08D1' 78          1653  	LD	A,B
08D2' FE4B        1654  	CP	DOWN2		;was the previous direction down?
08D4' 79          1655  	LD	A,C
08D5' C8          1656  	RET	Z		;it was, discard
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0032
SNAKE FOR DAZZLER GRAPHICS

08D6' 1821        1657  	JR	CHKNXT2V
                  1658  CHKNXT2D:
08D8' FE4B        1659  	CP	DOWN2		;was keypress up?
08DA' 2008        1660  	JR	NZ,CHKNXT2L
08DC' 4F          1661  	LD	C,A
08DD' 78          1662  	LD	A,B
08DE' FE49        1663  	CP	UP2		;was the previous direction up?
08E0' 79          1664  	LD	A,C
08E1' C8          1665  	RET	Z		;it was, discard
08E2' 1815        1666  	JR	CHKNXT2V
                  1667  CHKNXT2L:
08E4' FE4A        1668  	CP	LEFT2		;was keypress left?
08E6' 2008        1669  	JR	NZ,CHKNXT2R
08E8' 4F          1670  	LD	C,A
08E9' 78          1671  	LD	A,B
08EA' FE4C        1672  	CP	RIGHT2		;was the previous direction right?
08EC' 79          1673  	LD	A,C
08ED' C8          1674  	RET	Z		;it was, discard
08EE' 1809        1675  	JR	CHKNXT2V
                  1676  CHKNXT2R:
08F0' FE4C        1677  	CP	RIGHT2		;was keypress right?
08F2' C0          1678  	RET	NZ
08F3' 4F          1679  	LD	C,A
08F4' 78          1680  	LD	A,B
08F5' FE4A        1681  	CP	LEFT2		;was the previous direction left?
08F7' 79          1682  	LD	A,C
08F8' C8          1683  	RET	Z		;it was, discard	
                  1684  CHKNXT2V:			;was a valid Move
08F9' 32980B'     1685  	LD	(DIR2),A	;save the move
08FC' 3E01        1686  	LD	A,STMOVE ;GET US MOVING
08FE' 329F0B'     1687  	LD	(STAT2),A	;UPDATE STATUS
0901' C9          1688  	RET
                  1689  	
                  1690  PRINTCHR:	;PRINT A SINGLE CHARACTER TO THE CONSOLE, put character in E before calling
0902' C5          1691  	PUSH	BC
0903' 0E02        1692  	LD	C,PNTCHR	;PRINT-CHARACTER
0905' CD0500      1693  	CALL	CDOS		;DO SYSTEM CALL
0908' C1          1694  	POP	BC
0909' C9          1695  	RET
                  1696  PRINTSTR:	;PRINT A $-terminated string to the console, put address of string in DE before calling
090A' C5          1697  	PUSH	BC
090B' 0E09        1698  	LD	C,PNTBUF	;PRINT-BUFFERED-LINE
090D' CD0500      1699  	CALL	CDOS		;DO SYSTEM CALL
0910' C1          1700  	POP	BC
0911' C9          1701  	RET
                  1702  
                  1703  PRINTBYTE:
0912' F5          1704  	PUSH 	AF
0913' C5          1705  	PUSH	BC
0914' D5          1706  	PUSH	DE
0915' 47          1707  	LD	B, A		; Copy byte value from A to B (to preserve A)
                  1708  
                  1709  	; Print high nibble (4 bits) as hexadecimal digit
0916' 78          1710  	LD	A, B		; Load byte value from B back into A
0917' E6F0        1711  	AND 	0F0H		; Mask out low nibble (keep high nibble)
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0033
SNAKE FOR DAZZLER GRAPHICS

0919' 0F          1712  	RRCA             	; Rotate right A (move high nibble to low nibble)
091A' 0F          1713  	RRCA             	; Rotate right A again
091B' 0F          1714  	RRCA            	; Rotate right A again (now high nibble is in low nibble)
091C' 0F          1715  	RRCA            	; Rotate right A once more to clear upper bits
091D' CD2A09'     1716  	CALL	PRINTHEX	; Call subroutine to print hexadecimal digit in A
                  1717  
                  1718  	; Print low nibble (4 bits) as hexadecimal digit
0920' 78          1719  	LD	A, B		; Reload byte value from B into A
0921' E60F        1720  	AND	00FH		; Mask out high nibble (keep low nibble)
0923' CD2A09'     1721  	CALL	PRINTHEX	; Call subroutine to print hexadecimal digit in A
                  1722  
0926' D1          1723  	POP	DE
0927' C1          1724  	POP	BC
0928' F1          1725  	POP	AF
0929' C9          1726  	RET		        ; Return from the routine
                  1727  
                  1728  PRINTHEX:
092A' C630        1729  	ADD	A, '0'		; Convert digit (0-9) to ASCII ('0'-'9' range)
092C' FE3A        1730  	CP	'9' + 1		; Compare with ASCII '9' + 1 (check if digit is 10 or higher)
092E' 3005        1731  	JR	NC, HEX_LETTER 	; If digit is 10 or higher, proceed to handle letters (A-F)
                  1732  
                  1733  	; Digit is in '0'-'9' range, directly print the character
0930' 5F          1734  	LD	E,A
0931' CD0209'     1735  	CALL	PRINTCHR	; Call subroutine to print character in A
0934' C9          1736  	RET			; Return from PRINT_HEX_DIGIT
                  1737  
                  1738  HEX_LETTER:
0935' C607        1739  	ADD	A, 'A'-('9'+1)  ; Convert digit (10-15) to ASCII ('A'-'F' range)
0937' 5F          1740  	LD	E,A
0938' CD0209'     1741  	CALL	PRINTCHR  	; Call subroutine to print character in A
093B' C9          1742  	RET              	; Return from PRINT_HEX_DIGIT
                  1743  	
                  1744  DISPBYTE:
093C' F5          1745  	PUSH 	AF
093D' C5          1746  	PUSH	BC
093E' D5          1747  	PUSH	DE
093F' 47          1748  	LD	B, A		; Copy byte value from A to B (to preserve A)
                  1749  
                  1750  	; Print high nibble (4 bits) as hexadecimal digit
0940' 78          1751  	LD	A, B		; Load byte value from B back into A
0941' E6F0        1752  	AND	0F0H		; Mask out low nibble (keep high nibble)
0943' 0F          1753  	RRCA			; Rotate right A (move high nibble to low nibble)
0944' 0F          1754  	RRCA			; Rotate right A again
0945' 0F          1755  	RRCA			; Rotate right A again (now high nibble is in low nibble)
0946' 0F          1756  	RRCA			; Rotate right A once more to clear upper bits
0947' CD5409'     1757  	CALL DISPHEX		; Call subroutine to print hexadecimal digit in A
                  1758  
                  1759  	; Print low nibble (4 bits) as hexadecimal digit
094A' 78          1760  	LD A, B			; Reload byte value from B into A
094B' E60F        1761  	AND 00FH		; Mask out high nibble (keep low nibble)
094D' CD5409'     1762  	CALL DISPHEX		; Call subroutine to print hexadecimal digit in A
                  1763  
0950' D1          1764  	POP	DE
0951' C1          1765  	POP	BC
0952' F1          1766  	POP	AF
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0034
SNAKE FOR DAZZLER GRAPHICS

0953' C9          1767  	RET              	; Return from the routine
                  1768  
                  1769  DISPHEX:
0954' C630        1770  	ADD	A, '0'		; Convert digit (0-9) to ASCII ('0'-'9' range)
0956' FE3A        1771  	CP	'9' + 1		; Compare with ASCII '9' + 1 (check if digit is 10 or higher)
0958' 3004        1772  	JR	NC, DISPLETR	; If digit is 10 or higher, proceed to handle letters (A-F)
                  1773  
                  1774  	; Digit is in '0'-'9' range, directly print the character
095A' CD0000#     1775  	CALL	CHAR		; Call subroutine to print character in A
095D' C9          1776  	RET              	; Return from PRINT_HEX_DIGIT
                  1777  
                  1778  DISPLETR:
095E' C607        1779  	ADD	A, 'A'-('9'+1)  ; Convert digit (10-15) to ASCII ('A'-'F' range)
0960' 7C          1780  	LD	A,H	
0961' C620        1781  	ADD	A,20H		;move the cursor
0963' 67          1782  	LD	H,A
0964' CD0000#     1783  	CALL	CURSOR
0967' CD0000#     1784  	CALL 	CHAR		; Call subroutine to print character in A
096A' C9          1785  	RET			; Return from PRINT_HEX_DIGIT
                  1786  
                  1787  ;AUDIO CODE BORROWED FROM "GOTCHA" GAME
                  1788  ;PLAY A SONG
096B' 217D09'     1789  SONG1:	LD	HL,SONP1P
096E' C38C09'   R 1790  	JP	NOTES
                  1791  
0971' 218209'     1792  SONG2:	LD	HL,SONP2P
0974' C38C09'   R 1793  	JP	NOTES
                  1794  
0977' 218709'     1795  SONG3:	LD	HL,SONDIE
097A' C38C09'   R 1796  	JP	NOTES
                  1797  
097D' 40          1798  SONP1P: DB	40H		;VOLUME
097E' 96          1799  	DB	150		;FREQ. PARM 
097F' 3200        1800  	DW	50		;DURATION
0981' 00          1801  	DB	0		;END OF TABLE
                  1802  
0982' 40          1803  SONP2P: DB	40H		;VOLUME
0983' C8          1804  	DB	200		;FREQ. PARM 
0984' 3200        1805  	DW	50		;DURATION
0986' 00          1806  	DB	0		;END OF TABLE
                  1807  
0987' 40          1808  SONDIE: DB	40H		;VOLUME
0988' FA          1809  	DB	250		;FREQ. PARM 
0989' 2800        1810  	DW	40		;DURATION
098B' 00          1811  	DB	0		;END OF TABLE
                  1812  
                  1813  ;
                  1814  ;NOTES
                  1815  ;THIS ROUTINE PLAYS THE NOTES POINTED TO BY HL. ;1ST BYTE = VOLUME
                  1816  ;2ND BYTE = FREG. PARM
                  1817  ;3RD BYTE = LOW BYTE OF DURATION
                  1818  ;4TH BYTE = HIGH BYTE OF DURATION
                  1819  ;
098C' 7E          1820  NOTES:	LD	A,(HL)		;GET VOLUME
098D' A7          1821  	AND	A
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0035
SNAKE FOR DAZZLER GRAPHICS

098E' C8          1822  	RET	Z		;END OF NOTES
098F' 47          1823  	LD	B,A		;MOVE VOLUME TO B
0990' 23          1824  	INC	HL
0991' 4E          1825  	LD	C,(HL)		;GET FREG. PARM
0992' 23          1826  	INC	HL
0993' 5E          1827  	LD	E,(HL)		;GET DURATION LOW
0994' 23          1828  	INC	HL
0995' 56          1829  	LD	D,(HL)		;GET DURATION HIGH
0996' 23          1830  	INC	HL
0997' CD9D09'     1831  	CALL	TONE		;OUTPUT TONE
099A' C38C09'   R 1832  	JP	NOTES
                  1833  ;
                  1834  ;TONE ROUTINE
                  1835  ;INPUT - B CONTAINS VOLUME
                  1836  ;        C CONTAINS FREG. PARM
                  1837  ;        DE CONTAINS DURATION
                  1838  ;
                  1839  TONE:
099D' 78          1840  TON200: LD	A,B		;GET VOLUME
099E' 2F          1841  	CPL			;COMPLIMENT
099F' 47          1842  	LD	B,A		;SAVE VOLUME
09A0' D319        1843  	OUT	SPEAK1,A	;OUTPUT TO SPEAKERS
09A2' D31B        1844  	OUT	SPEAK2,A
09A4' 79          1845  	LD	A,C		;GET FREG. PARM
09A5' 3D          1846  TON300: DEC	A		;DEC COUNTER
09A6' C2A509'   R 1847  	JP	NZ,TON300	;WAIT LOOP
09A9' 1B          1848  	DEC	DE		;COUNT DOWN
09AA' 7A          1849  	LD	A,D
09AB' B3          1850  	OR	E
09AC' C29D09'   R 1851  	JP	NZ,TON200	;NOT THRU
09AF' C9          1852  	RET	
                  1853  
                  1854  ;
                  1855  ;INITIALIZE JOY STICKS
                  1856  ;
09B0' DB1A        1857  INTJOY: IN	A,JOY1UD	;GET UP/DOWN JOY STICK 1
09B2' 2F          1858  	CPL
09B3' 32A00B'     1859  	LD	(AJ1UD),A	;ADJUSTMENT
09B6' DB19        1860  	IN	A,JOY1RL	;GET RIGHT/LEFT JOY STICK
09B8' 2F          1861  	CPL
09B9' 32A10B'     1862  	LD	(AJ1RL),A	;ADJUSTMENT
09BC' DB1C        1863  	IN	A,JOY2UD	;GET UP/DOWN JOY STICK 2
09BE' 2F          1864  	CPL
09BF' 32A20B'     1865  	LD	(AJ2UD),A	;ADJUSTMENT
09C2' DB1B        1866  	IN	A,JOY2RL	;GET RIGHT/LEFT JOY STICK
09C4' 2F          1867  	CPL
09C5' 32A30B'     1868  	LD	(AJ2RL),A	;ADJUSTMENT
09C8' C9          1869  	RET
                  1870  
                  1871  ;based on Ion Random
                  1872  ;https://wikiti.brandonw.net/index.php?title=Z80_Routines:Math:Random
                  1873  ;-----> Generate a random number
                  1874  ; output a=answer 0<=a<=255
                  1875  ; all registers are preserved except: af
                  1876  ;Modified to retry in number 3<= || >=251 to place point inside field (not on wall)
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0036
SNAKE FOR DAZZLER GRAPHICS

                  1877  RANDOM:
09C9' E5          1878  	PUSH    HL
09CA' D5          1879  	PUSH    DE
                  1880  ANOTHER:		
09CB' 2A880B'     1881  	LD      HL,(RSEED)
09CE' ED5F        1882  	LD      A,R
09D0' 57          1883  	LD      D,A
09D1' 5E          1884  	LD      E,(HL)
09D2' 19          1885  	ADD     HL,DE
09D3' 85          1886  	ADD     A,L
09D4' AC          1887  	XOR     H
09D5' 22880B'     1888  	LD      (RSEED),HL
                  1889  	
09D8' FE03        1890  	CP	3
09DA' 38EF        1891  	JR	C, ANOTHER	;it was less than 1, generate another
09DC' FE3D        1892  	CP	61			
09DE' 3803        1893  	JR	C, GOODRAND	; A was less than than 251 (and >=4) so we are ok
09E0' C3CB09'   R 1894  	JP	ANOTHER 	; It was not less than, so must be >=251, generate another	
                  1895  GOODRAND:
09E3' CB27        1896  	SLA A			; Left shift A (A * 2)
09E5' CB27        1897  	SLA A			; Left shift A again (A * 2 * 2 = A * 4)
                  1898  	; A is now multiplied by 4
09E7' D1          1899  	POP	DE
09E8' E1          1900  	POP	HL
09E9' C9          1901  	RET
                  1902  		
                  1903  ;
                  1904  ;STRING DEFINITIONS
                  1905  ;
                  1906  ;SCREEN MESSAGES
09EA' 44415A5A    1907  DAZSTR:	DM	'DAZZLER'
09F1' 534E414B    1908  SNKSTR:	DM	'SNAKE'
09F6' 53544147    1909  STGSTR:	DM	'STAGE'
09FB' 12503120    1910  LV1STR:	DM	P1COLR,'P1 LIVES'
0A04' 15503220    1911  LV2STR:	DM	P2COLR,'P2 LIVES'
0A0D' 1147414D    1912  GOVSTR:	DM	RED,'GAME OVER :('
0A1A' 02427920    1913  BYARON:	DM	R128,'By Aron Hoekstra',R64
                  1914  
                  1915  ;CONSOLE MESSAGES
0A2C' 44415A5A    1916  INTRO:	DB	'DAZZLER SNAKE by Aron Hoekstra',CR,LF,'$'
0A4D' 484F5720    1917  INT12:	DB  	'HOW MANY PLAYERS? [1,2] $'
0A66' 4A4F5953    1918  INTJK:	DB  	'JOYSTICK OR KEYBOARD CONTROL? [J,K] $'
0A8B' 504C4159    1919  INTKB1: DB	'PLAYER 1 (GREEN) USES [W,A,S,D] FOR DIRECTION',CR,LF,'$'
0ABB' 504C4159    1920  INTKB2: DB	'PLAYER 2 (MAGNTA) USES [I,J,K,L] FOR DIRECTION',CR,LF,'$'
0AEC' 5B505D20    1921  INTKB3:	DB	'[P] TO PAUSE, [CTRL+C] TO QUIT$'
0B0B' 55534520    1922  INTJS1:	DB	'USE JS-1 JOYSTICK(S) PLUGGED INTO D+7A FOR CONTROL',CR,LF,'$'
0B40' 5B425554    1923  INTJS2:	DB	'[BUTTON 1] TO PAUSE, [BUTTON 4] TO QUIT$'
0B68' 0D0A594F    1924  WONMSG:	DB	CR,LF,'YOU WON!!??! CONGRATS!$'
0B81' 0D0A24      1925  CRLF:	DB	CR,LF,'$'
                  1926  
                  1927  ;
                  1928  ;VARIABLE STORAGE AREA
                  1929  ;
0B84' (0001)      1930  MAXCD:	DEFS	1	;MAXC DISPLAY DESCRIPTOR
0B85' (0001)      1931  MAXRD:	DEFS	1	;MAXR DISPLAY DESCRIPTOR
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0037
SNAKE FOR DAZZLER GRAPHICS

                  1932  
                  1933  ;GAME VARIABLES
0B86' (0001)      1934  POINTX:	DEFS	1	;CURRENT POINT X POS
0B87' (0001)      1935  POINTY:	DEFS	1	;CURRENT POINT Y POS
0B88' (0002)      1936  RSEED:	DEFS	2	;RANDOM NUMBER GENERATOR SEED
0B8A' (0002)      1937  SPEED:	DEFS	2	;SPEED, for DELAY function, start at 6000, subtract 250 each stage for about 20 
0B8C' (0001)      1938  STAGE:	DEFS	1	;WHICH STAGE YOU'RE ON, 6000 / 250 = 24 STAGES
0B8D' (0001)      1939  MODE:	DEFS	1	;[1] OR [2] PLAYER GAME?
0B8E' (0001)      1940  CNTRL:	DEFS	1	;[J]oystick or [K]eyboard control?
0B8F' (0001)      1941  POINT:	DEFS	1	;WHICH POINT YOU'RE ON, 10 POINTS PER STAGE
                  1942  
                  1943  ;SNAKE VARIABLES
0B90' (0001)      1944  DIR1:	DEFS	1	;CURRENT SNAKE DIRECTION
0B91' (0001)      1945  NXDIR1:	DEFS	1	;BUFFER FOR NEXT SNAKE DIRECTION
0B92' (0001)      1946  HEADX1:	DEFS    1	;CURRENT SNAKE HEAD X POS
0B93' (0001)      1947  HEADY1:	DEFS	1	;CURRENT SNAKE HEAD Y POS
0B94' (0001)      1948  SNKLN1:	DEFS	1	;CURRENT SNAKE LENGTH (how long the snake is supposed to be)
0B95' (0001)      1949  DSPLN1:	DEFS	1	;DISPLAYED SNAKE LENGTH (how long is it currently displayed)
0B96' (0001)      1950  LIVES1:	DEFS	1	;HOW MANY LIVES ARE LEFT?
0B97' (0001)      1951  STAT1:	DEFS	1	;STATUS PLAYER 1 MOVING OR WAIT
                  1952  
0B98' (0001)      1953  DIR2:	DEFS	1	;CURRENT SNAKE DIRECTION
0B99' (0001)      1954  NXDIR2:	DEFS	1	;BUFFER FOR NEXT SNAKE DIRECTION
0B9A' (0001)      1955  HEADX2:	DEFS    1	;CURRENT SNAKE HEAD X POS
0B9B' (0001)      1956  HEADY2:	DEFS	1	;CURRENT SNAKE HEAD Y POS
0B9C' (0001)      1957  SNKLN2:	DEFS	1	;CURRENT SNAKE LENGTH (how long the snake is supposed to be)
0B9D' (0001)      1958  DSPLN2:	DEFS	1	;DISPLAYED SNAKE LENGTH (how long is it currently displayed)
0B9E' (0001)      1959  LIVES2:	DEFS	1	;HOW MANY LIVES ARE LEFT?
0B9F' (0001)      1960  STAT2:	DEFS	1	;STATUS PLAYER 2 MOVING OR WAIT
                  1961  
0BA0' (0001)      1962  AJ1UD:	DEFS	1	;ADJUSTMENT FOR JOY1UD
0BA1' (0001)      1963  AJ1RL:	DEFS	1	;ADJUSTMENT FOR JOY1RL
0BA2' (0001)      1964  AJ2UD:	DEFS	1	;ADJUSTMENT FOR JOY2UD
0BA3' (0001)      1965  AJ2RL:	DEFS	1	;ADJUSTMENT FOR JOY2RL
                  1966  
                  1967  ;	ORG 04000H
0BA4' (0100)      1968  BODYX1:	DS	256	;X BODY POSITIONS FOR PLAYER 1
0CA4' (0100)      1969  BODYY1:	DS	256	;Y BODY POSITIONS FOR PLAYER 1
0DA4' (0100)      1970  BODYX2:	DS	256	;X BODY POSITIONS FOR PLAYER 2
0EA4' (0100)      1971  BODYY2:	DS	256	;Y BODY POSITIONS FOR PLAYER 2
0FA4' (0100)      1972  TEMP:	DS	256	;BODY TEMP COPY AREA (It's not recommended to use LDIR if the memory addresses o
      (10A4')     1973  STACK:	EQU	$
10A4' (0000')     1974  	END	SNAKE

Errors		   0
Range Count	  53

Program Length	10A4 (4260)
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0038
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

AJ1RL      0BA1'  1963  1349 1862
AJ1UD      0BA0'  1962  1344 1859
AJ2RL      0BA3'  1965  1390 1868
AJ2UD      0BA2'  1964  1385 1865
ANIMAT   X 0000#  0011 
ANOTHER    09CB'  1880  1891 1894
AREA     X 0000#  0012  1000 1003 1006 1009
BEGIN      0051'  0145  0868
BLACK      0010   0020  0246 0312
BLUE       0014   0024 
BODYX1     0BA4'  1968  0177 0248 0256 0262 0403 0459 0696 0898
BODYX2     0DA4'  1970  0207 0314 0322 0327 0503 0590 0651 0945
BODYY1     0CA4'  1969  0182 0250 0267 0273 0413 0471 0711 0913
BODYY2     0EA4'  1971  0211 0316 0331 0336 0515 0600 0666 0960
BORDER     052A'  0990  1096 1124 1140 1150 1185 1195 1206
BP2MCD     02DE'  0534  0362 0449 0530
BP2SG      014F'  0287  0237 0277
BYARON     0A1A'  1913  1111
CB1_1_1    0271'  0454  0429 0434
CB1_1_2    0273'  0456  0488
CB1_1_3    0298'  0482  0468
CB1_1_4    02A4'  0490  0487
CB1_2_1    02AC'  0498 
CB1_2_2    02AE'  0500  0531
CB1_2_3    02D3'  0526  0512
CB2_1_1    03CF'  0689  0683
CB2_1_2    03D1'  0692  0728
CB2_1_3    03F6'  0723  0706
CB2_2_1    039C'  0644  0617 0623
CB2_2_2    039E'  0647  0684
CB2_2_3    03C3'  0678  0661
CDATAB     0006   0065 
CDATAP     0001   0063  1272
CDOS       0005   0058  1693 1699
CHAR     X 0000#  0011  0143 0185 0214 0247 0313 0351 0540 0787 0800 0833 0846 0874 0879 0993 1021 1044 1061 1079 1100 1435
                        1775 1784
CHKNXT     0877'  1583  1557
CHKNXT1D   088E'  1604  1594
CHKNXT1L   089B'  1613  1606
CHKNXT1R   08A8'  1622  1615
CHKNXT1U   0881'  1592 
CHKNXT1V   08B5'  1631  1602 1612 1621 1630
CHKNXT2    08BD'  1637  1589 1601 1611 1620 1624 1629
CHKNXT2D   08D8'  1658  1651
CHKNXT2L   08E4'  1667  1660
CHKNXT2R   08F0'  1676  1669
CHKNXT2U   08CC'  1649 
CHKNXT2V   08F9'  1684  1657 1666 1675
CNTRL      0B8E'  1940  0115 1236 1287
CONDATA    07B3'  1412  1294
CONINP     06F9'  1286  1115 1141 1186 1207 1550
CONLOOP    07AE'  1409  1411
CONSTAT    07BB'  1419  1218 1250 1292 1410
CPM        0000   0016  1271 1275 1420 1424
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0039
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

CR         000D   0056  1916 1919 1920 1922 1924 1925
CRASH1     0401'  0731  0480
CRASH2     0404'  0735  0524
CRASH3     0407'  0739  0676
CRASH4     040A'  0743  0721
CRLF       0B81'  1925  1239 1265
CSTATB     000B   0064 
CSTATP     0000   0062  1421
CTRLC      0003   0084  1416
CURSOR   X 0000#  0011  0186 0215 0252 0318 0397 0585 0980 0997 1019 1026 1042 1049 1064 1077 1084 1098 1105 1110 1126 1131
                        1154 1159 1170 1175 1198 1783
CYAN       0016   0026 
CYCLE    X 0000#  0012  1114 1137
DAZOFF     07C0'  1433  1363 1417
DAZSTR     09EA'  1907  1101
DELAY      0854'  1545  0232
DELAY1     0857'  1547  1555
DELAY2     0869'  1564  1549
DIED1      0427'  0773  0366 0373 0380 0387 0734 0738
DIED2      045C'  0819  0555 0562 0569 0576 0742 0746
DIR1       0B90'  1944  0190 0353 1584 1632
DIR2       0B98'  1953  0219 0541 1642 1685
DISPBYTE   093C'  1744  1135 1162 1178
DISPHEX    0954'  1769  1757 1762
DISPLETR   095E'  1778  1772
DISP_INT   05CC'  1094  0159
DISP_LIV   062E'  1148  0815 0862
DISP_OVE   067A'  1193  0867
DISP_STA   0602'  1122  0160 0769
DL_LOOP    086F'  1569  1573
DOT      X 0000#  0011  0187 0216 0253 0319 0398 0586 0981 1027 1050 1085
DOWN1      0053   0088  0356 1302 1304 1461 1598 1605
DOWN2      004B   0093  0544 1323 1325 1508 1654 1659
DRAW       00F2'  0231  0301 0493 0538 0550 0639 0727
DRAWLIVE   0556'  1012  0225
DRAWPOIN   0597'  1057  0226 0448 0638
DSLV2      066B'  1180  1167
DSPLN1     0B95'  1949  0172 0242 0281 0283 0400 0483 0724 0926
DSPLN2     0B9D'  1958  0203 0308 0344 0346 0527 0587 0679 0973
EP2I       00EC'  0224  0199
EP2SG      01BB'  0348  0291 0302 0340
FDR1       07D4'  1455  1354
FDR2       0814'  1502  1395
FDR301     07DE'  1461  1457
FDR302     081E'  1508  1504
FDR321     07E2'  1464  1459
FDR322     0822'  1511  1506
FDR331     07E9'  1467  1465
FDR332     0829'  1514  1512
FDR401     07F3'  1473  1469
FDR402     0833'  1520  1516
FDR421     07F7'  1476  1471
FDR422     0837'  1523  1518
FDR431     07FE'  1479  1477
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0040
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

FDR432     083E'  1526  1524
FDR501     0810'  1491  1484 1490
FDR502     0850'  1538  1531 1537
FDR551     0812'  1494  1487
FDR552     0852'  1541  1534
FINMV1     0213'  0390  0369 0376 0383
FINMV2     033E'  0579  0558 0565 0572
FIVE       0032   0051 
FL_LOOP1   0429'  0775  0803
FL_LOOP2   045E'  0821  0850
FOUR       0028   0050  1202
GAMEOVER   0491'  0866  0809 0856
GET12      06CB'  1246  0113
GET12_1    06D1'  1249  1251 1260
GET12_2    06E3'  1261  1255 1258
GETDATA    06F4'  1270  1220 1252 1413
GETJK      069B'  1214  0112
GETJK1     06A1'  1217  1219 1232
GETJK2     06BD'  1235  1223 1228
GETJKLC    06BB'  1233  1225 1230
GOODRAND   09E3'  1895  1893
GOVSTR     0A0D'  1912  1199
GREEN      0012   0022  0029
GROWSNK1   0148'  0279  0245
GROWSNK2   01B4'  0342  0311
HALF       0005   0047 
HEADX1     0B92'  1946  0176 0378 0382 0385 0389 0392 0425 0457 0501
HEADX2     0B9A'  1955  0206 0567 0571 0574 0578 0581 0612 0648 0693
HEADY1     0B93'  1947  0181 0364 0368 0371 0375 0394 0430 0469 0513
HEADY2     0B9B'  1956  0210 0553 0557 0560 0564 0583 0619 0663 0708
HEX_LETT   0935'  1738  1731
INITG    X 0000#  0011  0140
INT12      0A4D'  1917  1247
INTJK      0A66'  1918  1215
INTJOY     09B0'  1857  0134
INTJS1     0B0B'  1922  0135
INTJS2     0B40'  1923  0137
INTKB1     0A8B'  1919  0119
INTKB2     0ABB'  1920  0125
INTKB3     0AEC'  1921  0129
INTLVS     0005   0040  0149
INTRO      0A2C'  1916  0105
JC1_1      077D'  1366  1369
JC1_2      0783'  1370  1373
JC1_3      0789'  1374  1377
JC1_B      0773'  1359  1356
JC2_2      078F'  1379  1365
JOY1RL     0019   0072  1351 1860
JOY1UD     001A   0071  1346 1857
JOY2RL     001B   0074  1392 1866
JOY2UD     001C   0073  1387 1863
JOYBTN     0018   0075  1361 1367 1371 1375
JOYCHK     075A'  1342  1289
LEFT1      0041   0089  0358 1307 1309 1473 1614 1627
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0041
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

LEFT2      004A   0094  0546 1328 1330 1520 1668 1681
LF         000A   0057  1916 1919 1920 1922 1924 1925
LINE     X 0000#  0011  1067
LIVES1     0B96'  1950  0150 0805 0807 1014 1161
LIVES2     0B9E'  1959  0151 0852 0854 1037 1177
LV1STR     09FB'  1910  1155
LV2STR     0A04'  1911  1171
LV_LOOP1   0566'  1022  1030
LV_LOOP2   0589'  1045  1053
MAGNTA     0015   0025  0030
MAXC       0001   0035 
MAXCD      0B84'  1930  0141
MAXR       0000   0034 
MAXRD      0B85'  1931 
MODE       0B8D'  1939  0122 0197 0289 0491 0536 0935 1033 1165 1262 1381 1638
MVDOWN1    01E6'  0370  0357
MVDOWN2    0311'  0559  0545
MVLEFT1    01F6'  0377  0359
MVLEFT2    0321'  0566  0547
MVRIGHT1   0206'  0384  0361
MVRIGHT2   0331'  0573  0549
MVUP1      01D6'  0363  0355
MVUP2      0301'  0552  0543
NEWPOINT   04A5'  0877  0166 0447 0637
NEXTSTAG   040D'  0748  0439 0628
NOTES      098C'  1820  1790 1793 1796 1832
NP2        04AA'  0880  0923 0970
NPCP1_1    04B8'  0891 
NPCP1_2    04BA'  0894  0930
NPCP1_3    04DF'  0925  0908
NPCP2_1    04EA'  0933  0929
NPCP2_2    04F3'  0941  0977
NPCP2_3    0518'  0972  0955
NPFIN      0523'  0979  0937 0976
NXDIR1     0B91'  1945  0191 1357 1441 1586
NXDIR2     0B99'  1954  0220 1399 1447 1644
NXTPR1     07CA'  1440  1298 1303 1308 1313
NXTPR2     07D0'  1446  1319 1324 1329 1334
NXTPRLC1   07C8'  1438  1300 1305 1310 1315
NXTPRLC2   07CE'  1444  1321 1326 1331 1336
ONE        000A   0048 
P1COLR     0012   0029  0184 0350 1020 1910
P2COLR     0015   0030  0213 0539 1043 1911
P2MVG      0168'  0304  0296
PAGE     X 0000#  0011  0991 1095 1123 1139 1149 1184 1194 1205
PAUSE    X 0000#  0012  1182 1203
PIXEL      0004   0083  0367 0374 0381 0388 0556 0563 0570 0577
PNTBUF     0009   0067  1698
PNTCHR     0002   0068  1692
POINT      0B8F'  1941  0147 0437 0441 0626 0630 0751 0813 0860 1069
POINTX     0B86'  1934  0427 0615 0882 0895 0942
POINTY     0B87'  1935  0432 0621 0886 0910 0957
PRINTBYT   0912'  1703 
PRINTCHR   0902'  1690  1238 1264 1735 1741
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0042
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

PRINTHEX   092A'  1728  1716 1721
PRINTSTR   090A'  1696  0106 0120 0126 0130 0136 0138 0872 1216 1240 1248 1266 1267
PSKEY      0050   0085  1339
PTCOLR     0011   0031  0878 1078
PT_LOOP    05BE'  1080  1088
QUARTR     0002   0046 
R128       0002   0036  1913
R64        0003   0037  0142 0799 0845 1913
R64BW      0004   0038  0786 0832
RANDOM     09C9'  1877  0174 0179 0204 0208 0881 0885
RDA        0040   0060  1422
RED        0011   0021  0031 1912
RIGHT1     0044   0090  0360 1312 1314 1470 1618 1623
RIGHT2     004C   0095  0548 1333 1335 1517 1672 1677
RSEED      0B88'  1936  0153 0155 1881 1888
SEC.       000A   0044  0045 0046 0047 0048 0049 0050 0051 0052
SNAKE      0000'  0103  1974
SNAKE_1    0037'  0133  0117
SNAKE_2    0046'  0139  0124 0132
SNAKE_K    002F'  0128 
SNKLN1     0B94'  1948  0170 0240 0444 0446
SNKLN2     0B9C'  1957  0201 0306 0633 0635
SNKSTR     09F1'  1908  1106
SONDIE     0987'  1808  1795
SONG1      096B'  1789  0436
SONG2      0971'  1792  0625
SONG3      0977'  1795  0781 0794 0827 0840
SONP1P     097D'  1798  1789
SONP2P     0982'  1803  1792
SPEAK1     0019   0077  1843
SPEAK2     001B   0078  1844
SPEED      0B8A'  1937  0158 0763 0767 1546
STACK      10A4'  1973  0104 0108
STAGE      0B8C'  1938  0148 0753 0755 1133
START      0076'  0165  0771 0817 0864
STAT1      0B97'  1951  0193 0235 0299 1634
STAT2      0B9F'  1960  0222 0293 1687
STGSTR     09F6'  1909  1127
STMOVE     0001   0098  0236 0294 0300 1633 1686
STRING   X 0000#  0012  1102 1107 1112 1128 1156 1172 1200
STWAIT     0000   0097  0192 0221
TEMP       0FA4'  1972  0257 0261 0268 0272 0323 0326 0332 0335
TEN        0064   0052 
TENTH      0001   0045 
TOGDAZ     0007   0069  0873 1434
TON200     099D'  1840  1851
TON300     09A5'  1846  1847
TONE       099D'  1839  1831
TWO        0014   0049  1181
UP1        0057   0087  0354 1297 1299 1458 1593 1609
UP2        0049   0092  0542 1318 1320 1505 1650 1663
WBOOT      0000   0059  0875 1436
WHITE      0017   0027  0992 1060 1099
WONGAME    0497'  0870 
CROMEMCO Z80 Macro Assembler version 03.10                                                                            Page 0043
SNAKE FOR DAZZLER GRAPHICS
Symbol	   Value  Defn  References

WONMSG     0B68'  1924  0871
YELLOW     0013   0023 
